@using System.Web.Optimization
@model STP.Domain.VehicleAndFleets.Component.VehicleComponent

@{  int rowCount = 0;    
    if (Model != null)
    {
        rowCount = Model.VehicleParamList.Count;
    }
    int secondSet = rowCount / 2;
    int firstRowSet = rowCount - secondSet;
}

@*check tractor or trailer*@

@{
    bool isTractor = false;
    if (Model != null)
    {
        isTractor = Model.vehicleCompType.IsTractor;
    }
    @Html.Hidden("Tractor", isTractor);
    @Html.Hidden("axleweightRange");
}

@{
    int? unitValue = 1;
    if (Session["UserInfo"] != null)
    {
        var sessionValues = (STP.Domain.SecurityAndUsers.UserInfo)Session["UserInfo"];
        unitValue = sessionValues.VehicleUnits;
        @Html.Hidden("UnitValue", unitValue);
    }

    //unitValue = ViewBag.Units;
    @Html.Hidden("UnitValue", unitValue);
}

<div class="row mt-2 main-entry" id="div_component_general_page">
    @{
        int? componentId = ViewBag.ComponentId;

        //code done by nidhin for getting values
        int? vehicleSubTypeId = ViewBag.VehicleSubTypeId;
        int? vehicleTypeId = ViewBag.VehicleTypeId;
        int? movementId = ViewBag.MovementID;
        int? isFromConfigFlag = ViewBag.ChkIsFromConfig;
        string ImageName = ViewBag.ImageName;
        string CompImageName = ViewBag.CompImageName;
        int? configTypeId = ViewBag.configTypeId;

        TempData["VehicleSubTypeId"] = ViewBag.VehicleSubTypeId;
        TempData["vehicleTypeId"] = ViewBag.VehicleTypeId;
        TempData["movementId"] = ViewBag.MovementID;
        int IsFromConfig = Convert.ToInt16(TempData["IsFromConfig"]);
        var ImageUrl = "~/Content/images/Common/MasterPage/componet_icons/" + CompImageName + ".png";
        bool planMovement = ViewBag.IsMovement;
        bool candidateVehicle = ViewBag.IsCandidate;
        int CompNumber = ViewBag.CompNumber;
        bool IsLastComponent = ViewBag.IsLastComp;
    }

    @Html.Hidden("Component_Id", componentId)
    @Html.Hidden("vehicleSubTypeValue", vehicleSubTypeId)
    @Html.Hidden("vehicleTypeValue", vehicleTypeId)
    @Html.Hidden("movementTypeId", movementId)

    @Html.Hidden("IsEdit") @*Is Edit hidden field to determine whether are creating or editing*@

    @Html.Hidden("HiddenFormalName")

    @Html.Hidden("HiddenFromConfig", IsFromConfig)
    @if (IsFromConfig == 0)
    {
        @Html.Hidden("ShowComponent", 1)
    }
    else
    {
        @Html.Hidden("ShowComponent", 0)
    }
    @Html.Hidden("SetShowComponent", 1)
    @Html.Hidden("Imagename", ImageName)
    @Html.Hidden("IsLastComponent", IsLastComponent)

    <label id="chars_left" class="error text-normal" style="color:red;"></label>

    <div id="div_general">

        @Html.HiddenFor(model => model.IsConfigAxle, new { @class = "AxleConfig" })
        <form action="@Url.Action("CreateComponent", "Vehicle")">

            <div class="col-lg-12 col-sm-12 col-md-12">
                @for (int i = 0; i < rowCount; i++)
                {
                    var defaultValue=Model.VehicleParamList[i].ParamValue==null ? "0" : Model.VehicleParamList[i].ParamValue ;
                    if (Model.VehicleParamList[i].ParamModel != "Component Type")
                    {
                        <div class="row mb-2 dynamic">
                            <div class="col-sm-4 col-md-6 col-lg-5  pr-0">
                                @if (Model.VehicleParamList[i].ParamModel != "Axle Spacing To Following")
                                {

                                    if ((!planMovement && !candidateVehicle) && (Model.VehicleParamList[i].DisplayString == "Formal Name"))
                                    {
                                        <label class="text-normal labelCompDiv">

                                            @if (Model.VehicleParamList[i].IsRequired == 1)
                                            {
                                                <b>
                                                    @Html.Raw(Model.VehicleParamList[i].DisplayString)
                                                    <span>*</span>
                                                </b>
                                            }
                                            else
                                            {
                                                @Html.Raw(Model.VehicleParamList[i].DisplayString)

                                            }
                                        </label>
                                    }
                                    else if (Model.VehicleParamList[i].DisplayString != "Formal Name"&& Model.VehicleParamList[i].DisplayString != "Wheelbase")
                                    {
                                        <label class="text-normal labelCompDiv">
                                            @if (Model.VehicleParamList[i].IsRequired == 1)
                                            {
                                                <b>
                                                    @Html.Raw(Model.VehicleParamList[i].DisplayString)
                                                    <span>*</span>
                                                </b>
                                            }
                                            else if (configTypeId == 244002 || configTypeId == 244009)
                                            {
                                                if ((vehicleTypeId == 234002|| vehicleTypeId == 234009) && CompNumber == 1)
                                                {
                                                    if (Model.VehicleParamList[i].DisplayString != "Projection Rear")
                                                    {
                                                        @Html.Raw(Model.VehicleParamList[i].DisplayString)
                                                    }
                                                }
                                                else
                                                {
                                                    if (!IsLastComponent && Model.VehicleParamList[i].DisplayString != "Projection Front" && Model.VehicleParamList[i].DisplayString != "Projection Rear")
                                                    {
                                                        @Html.Raw(Model.VehicleParamList[i].DisplayString)
                                                    }
                                                    else if (IsLastComponent && Model.VehicleParamList[i].DisplayString != "Projection Front")
                                                    {
                                                        @Html.Raw(Model.VehicleParamList[i].DisplayString)

                                                    }
                                                }
                                            }
                                            else
                                            {
                                                @Html.Raw(Model.VehicleParamList[i].DisplayString)

                                            }
                                        </label>
                                    }

                                }
                                else if (!ViewBag.IsComponent && !ViewBag.IsLastComp)
                                {
                                    <label class="text-normal labelCompDiv">
                                        @if (Model.VehicleParamList[i].IsRequired == 1)
                                        {
                                            <b>
                                                @Html.Raw(Model.VehicleParamList[i].DisplayString)
                                                <span>*</span>
                                            </b>
                                        }
                                        else
                                        {
                                            @Html.Raw(Model.VehicleParamList[i].DisplayString)

                                        }
                                    </label>
                                }

                            </div>
                            <div class="col-sm-4 col-md-5 col-lg-7 input-field">
                                @if (Model.VehicleParamList[i].InputType == "TEXTBOX")
                                {
                                    if (Model.VehicleParamList[i].DropDownList.Count == 0)
                                    {
                                        if (@Model.VehicleParamList[i].ParamModel == "Weight")
                                        {
                                            @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr pageKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString,previousvalue = defaultValue })
                                        }
                                        else if (@Model.VehicleParamList[i].ParamModel == "Internal Name")
                                        {
                                            @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "frmbdr pageKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, @style = "width:12rem !important;", displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })
                                        }
                                        else if (@Model.VehicleParamList[i].ParamModel == "Wheelbase")
                                        {
                                            @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { datatype = @Model.VehicleParamList[i].ParamType, @validationmsg = Model.VehicleParamList[i].ParamModel, @class = "unit_text frmbdr", @style = "display:none;", displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })
                                        }
                                        else if ((!planMovement && !candidateVehicle) && (Model.VehicleParamList[i].DisplayString == "Formal Name"))
                                        {
                                            @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "frmbdr pageKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, @style = "width:12rem !important;", displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })
                                        }
                                        else if (Model.VehicleParamList[i].DisplayString != "Formal Name")
                                        {
                                            if (configTypeId == 244002 || configTypeId == 244009)
                                            {
                                                if ((vehicleTypeId == 234002|| vehicleTypeId == 234009)  && CompNumber == 1)
                                                {
                                                    if (Model.VehicleParamList[i].DisplayString != "Projection Rear")
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "frmbdr pageKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })
                                                    }
                                                }
                                                else
                                                {
                                                    if (!IsLastComponent && Model.VehicleParamList[i].DisplayString != "Projection Front" && Model.VehicleParamList[i].DisplayString != "Projection Rear")
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "frmbdr pageKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })
                                                    }
                                                    else if (IsLastComponent && Model.VehicleParamList[i].DisplayString != "Projection Front")
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "frmbdr pageKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })

                                                    }
                                                }
                                            }
                                            else
                                            {
                                                @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "frmbdr pageKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })

                                            }
                                        }
                                    }

                                    else if (Model.VehicleParamList[i].ParamModel != "Axle Spacing To Following" && Model.VehicleParamList[i].ParamModel != "Wheelbase")
                                    {
                                        if (unitValue == 692002)
                                        {
                                            if (configTypeId == 244002 || configTypeId == 244009)
                                            {
                                                if ((vehicleTypeId == 234002|| vehicleTypeId == 234009)  && CompNumber == 1)
                                                {
                                                    if (Model.VehicleParamList[i].DisplayString != "Projection Rear")
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { placeholder = "0'00''", isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr pageKeyUpValidation componentKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })
                                                    }
                                                }
                                                else
                                                {
                                                    if (!IsLastComponent && Model.VehicleParamList[i].DisplayString != "Projection Front" && Model.VehicleParamList[i].DisplayString != "Projection Rear")
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { placeholder = "0'00''", isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr pageKeyUpValidation componentKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })
                                                    }
                                                    else if (IsLastComponent && Model.VehicleParamList[i].DisplayString != "Projection Front")
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { placeholder = "0'00''", isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr pageKeyUpValidation componentKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { placeholder = "0'00''", isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr pageKeyUpValidation componentKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })

                                            }
                                        }
                                        else
                                        {
                                            if (configTypeId == 244002 || configTypeId == 244009)
                                            {
                                                if ((vehicleTypeId == 234002|| vehicleTypeId == 234009)  && CompNumber == 1)
                                                {
                                                    if (Model.VehicleParamList[i].DisplayString != "Projection Rear")
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr pageKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })
                                                    }
                                                }
                                                else
                                                {
                                                    if (!IsLastComponent && Model.VehicleParamList[i].DisplayString != "Projection Front" && Model.VehicleParamList[i].DisplayString != "Projection Rear")
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr pageKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })
                                                    }
                                                    else if (IsLastComponent && Model.VehicleParamList[i].DisplayString != "Projection Front")
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr pageKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr pageKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })

                                            }
                                        }
                                    }
                                    else if (Model.VehicleParamList[i].ParamModel == "Wheelbase")
                                    {
                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @validationmsg = Model.VehicleParamList[i].ParamModel, @class = "unit_text frmbdr", @style = "display:none;", displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue })

                                    }
                                    else if (!ViewBag.IsComponent && !ViewBag.IsLastComp)
                                    {
                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr pageKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString, previousvalue = defaultValue });

                                    }

                                }
                                else if (Model.VehicleParamList[i].InputType == "TEXTAREA")
                                {
                                    @Html.TextArea(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "frmbdr", @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString })
                                }
                                else if (Model.VehicleParamList[i].InputType == "LABEL")
                                {
                                    @Html.Label(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { @class = "text-normal", @validationmsg = Model.VehicleParamList[i].ParamModel, @id = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString })
                                }
                                else if (Model.VehicleParamList[i].InputType == "CHECKBOX")
                                {
                                    if (Model.VehicleParamList[i].ParamValue == "1")
                                    {
                                        @Html.CheckBox(Model.VehicleParamList[i].ParamModel, true)
                                    }
                                    else
                                    {
                                        @Html.CheckBox(Model.VehicleParamList[i].ParamModel, false)
                                    }
                                }
                                else if (Model.VehicleParamList[i].InputType == "DROPDOWN")
                                {
                                    if (Model.VehicleParamList[i].IsRequired == 0 && Model.VehicleParamList[i].ParamValue == "0")
                                    {
                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, null, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr axledrop clearValidation", @axleDropCount = CompNumber, @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString })
                                        @*if (Model.VehicleParamList[i].ParamModel.ToLower() == "number of axles")
                                        {
                                            <a href="#" class="axlePopUp axlePopUp_@componentId" axledropcount="1" componentid="@componentId" style="display:none;">
                                                <img src="/Content/assets/images/Group 999.svg" title="Add" width="26">
                                            </a>
                                        }*@
                                    }
                                    else
                                    {
                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr axledrop clearValidation", @axleDropCount = CompNumber, @validationmsg = Model.VehicleParamList[i].ParamModel, displayName = Model.VehicleParamList[i].DisplayString })
                                        @*if (Model.VehicleParamList[i].ParamModel.ToLower() == "number of axles")
                                        {
                                            <a href="#" class="axlePopUp axlePopUp_@componentId" axledropcount="1" componentid="@componentId" style="">
                                                <img src="/Content/assets/images/Group 999.svg" title="Add" width="26">
                                            </a>
                                        }*@
                                    }

                                }

                                @if (Model.VehicleParamList[i].ParamModel != "Axle Spacing To Following" && Model.VehicleParamList[i].ParamModel != "Wheelbase")
                                {
                                    if (Model.VehicleParamList[i].DropDownList.Count > 0)
                                    {
                                        if (unitValue == 692001)
                                        {
                                            if (configTypeId == 244002 || configTypeId == 244009)
                                            {
                                                if ((vehicleTypeId == 234002|| vehicleTypeId == 234009)  && CompNumber == 1)
                                                {
                                                    if (Model.VehicleParamList[i].DisplayString != "Projection Rear")
                                                    {
                                                        <label class="text-normal lblUnit">m</label>
                                                    }
                                                }
                                                else
                                                {
                                                    if (!IsLastComponent && Model.VehicleParamList[i].DisplayString != "Projection Front" && Model.VehicleParamList[i].DisplayString != "Projection Rear")
                                                    {
                                                        <label class="text-normal lblUnit">m</label>
                                                    }
                                                    else if (IsLastComponent && Model.VehicleParamList[i].DisplayString != "Projection Front")
                                                    {
                                                        <label class="text-normal lblUnit">m</label>
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                <label class="text-normal lblUnit">m</label>
                                            }
                                        }
                                        else if (unitValue == 692002)
                                        {
                                            if (configTypeId == 244002 || configTypeId == 244009)
                                            {
                                                if ((vehicleTypeId == 234002|| vehicleTypeId == 234009)  && CompNumber == 1)
                                                {
                                                    if (Model.VehicleParamList[i].DisplayString != "Projection Rear")
                                                    {
                                                        <label class="text-normal lblUnit">ft</label>
                                                    }
                                                }
                                                else
                                                {
                                                    if (!IsLastComponent && Model.VehicleParamList[i].DisplayString != "Projection Front" && Model.VehicleParamList[i].DisplayString != "Projection Rear")
                                                    {
                                                        <label class="text-normal lblUnit">ft</label>
                                                    }
                                                    else if (IsLastComponent && Model.VehicleParamList[i].DisplayString != "Projection Front")
                                                    {
                                                        <label class="text-normal lblUnit">ft</label>
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                <label class="text-normal lblUnit">ft</label>
                                            }
                                        }

                                    }
                                    else if (@Model.VehicleParamList[i].ParamModel == "Weight" || @Model.VehicleParamList[i].ParamModel == "TrainWeight")
                                    {
                                        <label class="text-normal">kg</label>
                                    }
                                }
                                else if (!ViewBag.IsComponent && !ViewBag.IsLastComp && Model.VehicleParamList[i].ParamModel != "Wheelbase")
                                {
                                    if (Model.VehicleParamList[i].DropDownList.Count > 0)
                                    {
                                        if (unitValue == 692001)
                                        {
                                            <label class="text-normal lblUnit">m</label>
                                        }
                                        else if (unitValue == 692002)
                                        {
                                            <label class="text-normal lblUnit">ft</label>
                                        }

                                    }
                                    else if (@Model.VehicleParamList[i].ParamModel == "Weight" || @Model.VehicleParamList[i].ParamModel == "TrainWeight")
                                    {
                                        <label class="text-normal">kg</label>
                                    }
                                }

                                @if (Model.VehicleParamList[i].ParamModel == "Formal Name")
                                {
                                    <div class="error invalid-feedback" style="display: none !important;"></div>
                                }
                                else
                                {
                                    <div class="error invalid-feedback" style="display: block !important;"></div>
                                }
                            </div>
                        </div>

                    }
                }
                <!--<div class="row mb-3 dynamic" id="Speed" style="display:none;">
                    <div class="col-sm-4 col-md-6 col-lg-5  pr-0">
                        <label class="text-normal">Travelling Speed</label>
                    </div>
                    <div class="col-sm-4 col-md-5 col-lg-7 input-field">
                        @Html.TextBox("TravelSpeed", null, new { @class = "unit_text frmbdr pageKeyUpSpeedValidation", isrequired = 0, range = "1,50", maxlength = 5, datatype = "float", @validationmsg = "Travelling Speed" })
                    </div>
                    <div class="col-sm-4 col-md-5 col-lg-7 input-field">
                        @Html.DropDownList("SpeedUnits", (SelectList)(ViewBag.SpeedUnits), "Select", new { @id = "SpeedUnits", @class = "unit-travelspeed frmbdr form-control form-select", @style = "width: 175%;" })-->
                @*<span class="error"></span>*@
                <!--<div class="error invalid-feedback" style="display: block !important;"></div>
                    </div>
                    <br />
                </div>-->
            </div>

        </form>
    </div>

</div>

<style>
    .vehicle-setting td {
        text-align: left;
        padding: 20px 5px 5px 20px;
    }
</style>

@{
    <input type="hidden" value="@ViewBag.VehicleConfigId" id="hf_VehicleConfigId" name="hf_VehicleConfigId" />
    @Html.Hidden("hf_IsFromConfig", IsFromConfig)
}
@*<script src="~/Scripts/Vehicle/unitConversion.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/VehicleComponent/jQuesry.Comp.General.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/VehicleConfig/VehicleComponentEdit.js?V@(Session["ProjectVersion"])"></script>*@
