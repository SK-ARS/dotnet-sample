@using PagedList.Mvc
@using STP.Common.EncryptDecrypt
@model PagedList.IPagedList<STP.Domain.Structures.StructureSummary>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
  

   
    int pageNum = 10;
    int pageSize = 10;
    if (ViewBag.pageSize != null)
    {
        pageSize = ViewBag.pageSize;
    }
    STP.Domain.Structures.SearchStructures objfilter = null;
    if (ViewBag.filterObject != null)
    {
        objfilter = ViewBag.SORTMovementFilter;
    }
    if (ViewBag.filterObject != null)
    {
        objfilter = ViewBag.filterObject;
    }
    objfilter = ViewBag.filterObject;
    //int pageSize = 10;
    //int? pageNum = ViewBag.page;
    if (ViewBag.pageSize != null)
    {
        pageNum = ViewBag.pageSize;
    }
    string Mode = "Edit";

    string arrId = "", EditOrgId = "", orgId = "";
    arrId = Convert.ToString(TempData["arrId"]);
    EditOrgId = Convert.ToString(TempData["EditOrgId"]);
    orgId = Convert.ToString(TempData["orgid"]);
}

@Html.Hidden("arrId", arrId)
@Html.Hidden("EditOrgId", EditOrgId)
@Html.Hidden("orgId", orgId)
@Html.Hidden("Mode", Mode)
@*<h3>Structures not in delegation</h3>*@

@Html.Hidden("pageSizeVal", pageNum)
@Html.Hidden("StructureNotIndelegation", true)

<body style="overflow-y: auto;" id="soa-structure-delgation">
    @{var sortOrder = ViewBag.SortOrder != null ? (int)ViewBag.SortOrder : 2;
        var sortType = ViewBag.SortType != null ? (int)ViewBag.SortType : 0;
    }
    @{
        var isESRNFilterEnabled = !string.IsNullOrWhiteSpace(objfilter.SearchSummaryId);
        var isstructNameFilterEnabled = !string.IsNullOrWhiteSpace(objfilter.SearchSummaryName);
        var isAlternateNameFilterEnabled = !string.IsNullOrWhiteSpace(objfilter.AlternateName);
        var isDescriptionFilterEnabled = !string.IsNullOrWhiteSpace(objfilter.Description);
        var isCarriesFilterEnabled = !string.IsNullOrWhiteSpace(objfilter.Carries);
        var isCrossesFilterEnabled = !string.IsNullOrWhiteSpace(objfilter.Crosses);
        var isStructureTypeFilterEnabled = !string.IsNullOrWhiteSpace(objfilter.StructureType);
        var isICAMethodFilterEnabled = !string.IsNullOrWhiteSpace(objfilter.ICAMethod);
        var isAllSearchEnabled = isstructNameFilterEnabled || isAlternateNameFilterEnabled || isDescriptionFilterEnabled || isCarriesFilterEnabled
            || isCarriesFilterEnabled || isCrossesFilterEnabled || isStructureTypeFilterEnabled || isICAMethodFilterEnabled || isESRNFilterEnabled;
    }
    <!-- main-content -->
    <section id="banner">
        <div class="container-fluid" id="banner-container">

            <div id="structure_table">
                <!-- table -->
                <div class="main-table movements" id="portal-table">
                    <table class="esdal-table" id="portaltable">
                        <thead>
                            <tr>
                                <th>
                                    <span class="sorting spnSortIconItem @GetSortDefaultClass(sortType, sortOrder, 1)" data-action="SoastructureSort" data-sortval="1">ESRN </span>
                                    <span class="filter-table-icon"><img id="filterimageESRNName" style=" display:@(isESRNFilterEnabled ? "block" : "none")" ; src="~/Content/assets/images/filter-table-icon.svg"></span>

                                </th>
                                <th>
                                    <span class="sorting spnSortIconItem @GetSortDefaultClass(sortType, sortOrder, 2)" data-action="SoastructureSort" data-sortval="2">Structure Name </span>
                                    <span class="filter-table-icons"><img id="filterimageSTRUName" style="display:@(isstructNameFilterEnabled ? "block" : "none")" src="~/Content/assets/images/filter-table-icon.svg"></span>
                                </th>

                                @if (Mode == "Edit")
                                {
                                    <th>
                                        <input id="checkall" type="checkbox" class="checkbox mr-2" />
                                        <span class="text-normal" style="vertical-align: super;color:white">Select all structures in this page</span>
                                    </th>
                                }
                                else
                                {
                                    <th style="width:20%;"></th>
                                }
                            <th class="table-filter" style="width:5%;">
                                @*<th class="table-filter open-filter-icon-common"><img src="~/Content/assets/images/filter-icon.svg" title="Open filter" width="38"></th>*@
                                <img id="imgOpenFilter" class="open-filter-icon-common" data-width="400" src="~/Content/assets/images/filter-icon.svg" title="Open filter" width="38">
                                <span class="filtered-icon-table "><img id="filterimage" aria-pressed="true" style="display:@(isAllSearchEnabled ? "block" : "none")" src="~/Content/assets/images/filtered-icon.svg" title="Clear filter"></span>
                            </th>
                            </tr>
                        </thead>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="text-color2">
                                    <a href="#" class="StructureCodeClick" StructureId="@item.StructureId" style="text-decoration: none; color: rgba(39, 87, 149, 1)">@item.StructCode</a>
                                </td>
                                <td class="text-color1">@item.StructureName</td>
                                @if (Mode == "Edit")
                                {
                                    <td>

                                        <input id="Checkbox" type="checkbox" class="childcheckbox" value="@item.StructCode" checked="@item.StructCodeSelected" />
                                    </td>
                                }
                                else
                                {
                                    <td></td>
                                }
                                <td></td>
                            </tr>

                        }
                    </table>
                </div>
                <!-- end of table -->

                <div>
                    @if (ViewBag.TotalCount > 0)
                    {
                    <div class="row pt-3">
                        <div class="col-lg-4 col-md-4">
                            @if (Model.TotalItemCount > 0)
                            {
                                <div class="text-color2 total-records-number">
                                    Total number of records : @Model.TotalItemCount
                                </div>
                            }
                        </div>
                        <div class="col-lg-5 pagination">
                            @if (ViewBag.TotalCount > 0)
                            {

                                @Html.PagedListPager(Model, page => Url.Action("StructureNotInDelegationList",
                     new
                     {
                         B7vy6imTleYsMr6Nlv7VQ =
                                            STP.Web.Helpers.EncryptionUtility.Encrypt("page=" + page + "&pageSize="+pageSize+ "&sortOrder="+sortOrder+"&sortType="+sortType+
                                            "&Mode=" + Mode)
                     }),
                     new PagedListRenderOptions
                     {
                         DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                         DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                         LinkToPreviousPageFormat = "<img src='/Content/assets/images/left-chevlon.svg' width='10'>",
                         LinkToNextPageFormat = "<img src='/Content/assets/images/right-chevlon.svg' width='10'>",
                         DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                         DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                         MaximumPageNumbersToDisplay = 3,
                         DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                         EllipsesFormat = "...",
                         LinkToFirstPageFormat = "<div style='position:absolute;'><img src='/Content/assets/images/left-chevlon.svg' width='10'><img src='/Content/assets/images/left-chevlon.svg' width='10'></div>",
                         LinkToLastPageFormat = "<div style='position:absolute;'><img src='/Content/assets/images/right-chevlon.svg' width='10'><img src='/Content/assets/images/right-chevlon.svg' width='10'></div>"
                     });

                            }
                        </div>
                        @if (Model.TotalItemCount > 10)
                        {
                            <div class="col-lg-3 col-md-3 col-sm-12 text-normal pr-0">
                                Number of items to display per page
                                <select class="form-select mb-3" style="width:100px;" aria-label=".form-select-lg example" id="pageSizeSelects">
                                    <option val="10" @(pageSize == 10 ? "selected" : "")>10</option>
                                    <option val="20" @(pageSize == 20 ? "selected" : "")>20</option>
                                    <option val="50" @(pageSize == 50 ? "selected" : "")>50</option>
                                    <option val="100" @(pageSize == 100 ? "selected" : "")>100</option>
                                </select>
                            </div>
                        }

                    </div>
                    }
                    else
                    {
                        <div class="error invalid-feedback" style="display: block !important; text-align: center;">@Resources.Resource.NoRecordFound</div>

                    }
                </div>

                <div style="text-align: right; width: 100%;">
                    <button type="submit" id="btn_add" class="btn outline-btn-primary SOAButtonHelper" aria-hidden="true">ADD</button>
                    <button id="btn_backnotindelegation" type="button" class="btn outline-btn-primary SOAButtonHelper ml2">BACK</button>

                </div>
                <div>
                </div>
            </div>
        </div>
    </section>
    <div id="filterSection">
        @{Html.RenderAction("StructSummaryFilter", "Structures", new { page = pageNum, sortOrder = sortOrder, sortType = sortType });}
    </div>
</body>
@{
    string GetSortDefaultClass(int SORTType, int SORTOrder, int valToCheck)
    {
        var sortClass = ""; // 0-desc , 1-asc
        if (SORTOrder == valToCheck)
        {
            sortClass = SORTType == 1 ? "sorting_desc" : "sorting_asc";
        }
        return sortClass;
    }

    string ShowFilterIcon(int filterVal, int valToCheck)
    {
        return filterVal == valToCheck ? "block" : "none";
    }
}
@Html.Hidden("hf_EditOrgId", EditOrgId)
@Html.Hidden("hf_orgId", orgId)
@Html.Hidden("hf_arrId", arrId)

<script src="~/Scripts/Structures/StructuresNotInDelegation.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/StructuresInDelegation.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/StructureList.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/StructSummaryFilter.js?V@(Session["ProjectVersion"])"></script>