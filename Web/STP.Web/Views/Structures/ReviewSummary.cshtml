@using System.Collections.Concurrent;
@using System.Web.Optimization
@using STP.Domain

@model List<STP.Domain.Structures.StructureOwnerChain>
@{
    ViewBag.PageMenuName = (int)STP.Common.Enums.WebMenuEnum.STRUCTURES;

    List<STP.Domain.Structures.StructureGeneralDetails> objListStructureGeneralDetails = ViewBag.ListStructureGeneralDetails;


    int cnt = 0;

    int? structureChain = 0, tmpChainNum = 0;
    int triggerCnt = 0;

    //code portion to generate the order in which the structure's are delegated and owned by different organisation

    //The list contains sub list  in order of structure owner and sub delegation
    List<List<STP.Domain.Structures.StructureOwnerChain>> StructOwnerChainList = new List<List<STP.Domain.Structures.StructureOwnerChain>>();

    List<STP.Domain.Structures.StructureOwnerChain> StructOwnerChainObjList = null;

    STP.Domain.Structures.StructureOwnerChain StructChainObj = null;

    var StructureOwnChain = ViewBag.structureOwnerchain;

    if (ViewBag.UserValidateFlag == 1)
    {
        if (StructureOwnChain != null && StructureOwnChain.Count > 0)
        {
            foreach (var item in StructureOwnChain)
            {

                structureChain = (int)item.StructureChainNo;

                if (item.StructurePosition == 1 && tmpChainNum != structureChain)
                {   //then the this is an owner
                    StructOwnerChainObjList = new List<STP.Domain.Structures.StructureOwnerChain>();

                    StructChainObj = new STP.Domain.Structures.StructureOwnerChain();

                    StructOwnerChainObjList.Add(StructChainObj);

                    StructOwnerChainList.Add(StructOwnerChainObjList);

                    StructChainObj.ChainPosition = item.StructurePosition;

                    StructChainObj.ChainNo = item.StructureChainNo;

                    StructChainObj.ChainContactId = item.ContactId;

                    StructChainObj.ChainOwnerName = item.OwnerName;

                    tmpChainNum = structureChain;
                }
                else
                {
                    StructChainObj = new STP.Domain.Structures.StructureOwnerChain();

                    StructOwnerChainObjList.Add(StructChainObj);

                    StructChainObj.ChainPosition = item.StructurePosition;

                    StructChainObj.ChainNo = item.StructureChainNo;

                    StructChainObj.ChainContactId = item.ContactId;

                    StructChainObj.ChainOwnerName = item.OwnerName;

                    tmpChainNum = structureChain;
                }
            }
        }
    }

}
@if (ViewBag.UserValidateFlag == 0)
{
    <h4><span style="color: red">@Resources.Resource.WrongStructureMsg</span></h4>
}
@{
    List<STP.Domain.Structures.StructureSectionList> objListStructureSections = ViewBag.ListStructureSections;

    string sectionType = "";
    if (objListStructureSections != null && objListStructureSections.Count > 0)
    {
        if (objListStructureSections.Count == 1 && Session["checkFlag"] != "true")
        {
            triggerCnt = 1;
        }
    }
}
<style>
    .clickable {
        cursor: pointer;
    }

    #BackStructureList.outline-btn-primary {
        padding: 4px !important;
    }
</style>
<section id="banner">
    <div class="container-fluid" id="banner-container">
        <div class="card PublishCardHelper" style="cursor: inherit !important">
            <div class="row">
                <div class="col-3 padHelper1" id="leftSection">

                </div>
                @if (objListStructureGeneralDetails != null && objListStructureGeneralDetails.Count > 0)
                {
                    cnt = objListStructureGeneralDetails.Count;

                    <div class="col-9 padHelper2">
                        @if (!string.IsNullOrEmpty(objListStructureGeneralDetails[cnt - 1].ESRN))
                        {
                            @Html.Hidden("Dimension", 1)
                            <h4 class="text-color1 titleSOAStructrue">
                                @objListStructureGeneralDetails[0].StructureName -
                                <span class="stno">@objListStructureGeneralDetails[0].ESRN</span>
                            </h4>
                        }
                        <span id="generalSettingsId" style="display: none;">
                            <p class="text-color3 subtext m-0 mt-4">
                                Please select a section to view/amend section
                                details
                                (for
                                example to manage
                                ICA usage).
                            </p>

                            @{
                                int cntSectionOverbridge = 0, cntSectionUnderbridge = 0, cntSectionUnderOverbridge = 0, cntSectionLeverCross = 0;

                            }

                            <div class="flexer structureRadioHelper" style="justify-content: start;">
                                @if (objListStructureSections != null)
                                {
                                    foreach (var items in objListStructureSections)
                                    {
                                        sectionType = items.StructureSections.ToLower().Trim();
                                        <div class="form-check ml-2 col-4">
                                            <input class="form-check-input showselectiondetails" type="radio" name="flexRadioDefault"
                                                   id="@items.SectionId" arg1="@ViewBag.StructureId">
                                            @Html.Hidden("hdnsectionType", sectionType, new { @id = "hdnsectionType" })
                                            <label class="form-check-label label1 text-color3" for="flexRadioDefault1">
                                                @items.StructureSections section
                                                @if (sectionType == "underbridge")
                                                {
                                                    cntSectionUnderbridge++;
                                                    @cntSectionUnderbridge
                                                }
                                                @if (sectionType == "overbridge")
                                                {
                                                    cntSectionOverbridge++;
                                                    @cntSectionOverbridge
                                                }
                                                @if (sectionType == "under and over bridge")
                                                {
                                                    cntSectionUnderOverbridge++;
                                                    @cntSectionUnderOverbridge
                                                }
                                                @if (sectionType == "level crossing")
                                                {
                                                    cntSectionLeverCross++;
                                                    @cntSectionLeverCross
                                                }
                                            </label>
                                        </div>

                                    }
                                }
                            </div>
                            <div class="row">
                                <div class="col-6 colHelper1">
                                    <div class="cardSOA1">
                                        <h6 class="text-color3 stHeading1 m-0">Structure general details</h6>
                                    </div>
                                    <div class="row mt-3">
                                        <div class="col-4 c4Helper pl-0">
                                            <label for="text1" class="label2">ESRN</label>
                                        </div>
                                        <div class="col-8 c8Helper pl-0">
                                            <span id="text1" class="stHeading1 text1">@objListStructureGeneralDetails[0].ESRN</span>
                                        </div>
                                    </div>
                                    <div class="row mt-1">
                                        <div class="col-4 c4Helper pl-0">
                                            <label for="text2" class="label2">Name</label>
                                        </div>
                                        <div class="col-8 c8Helper pl-0 pl-0">
                                            <span id="text2" class="stHeading1 text1">
                                                @objListStructureGeneralDetails[0].StructureName
                                            </span>
                                        </div>
                                    </div>
                                    <div class="row mt-1">
                                        <div class="col-4 c4Helper pl-0">
                                            <label for="text3" class="label2">Unique Id</label>
                                        </div>
                                        <div class="col-8 c8Helper pl-0">
                                            <span id="text3" class="stHeading1 text1">@objListStructureGeneralDetails[0].StructureKey</span>
                                        </div>
                                    </div>
                                    <div class="row mt-1">
                                        <div class="col-4 c4Helper pl-0">
                                            <label for="text4" class="label2">Coordinates</label>
                                        </div>
                                        <div class="col-8 c8Helper pl-0">
                                            <span id="text4" class="stHeading1 text1">@objListStructureGeneralDetails[0].OSGREast, @objListStructureGeneralDetails[0].OSGRNorth</span>
                                        </div>
                                    </div>
                                    <div class="row mt-1">
                                        @if (StructChainObj != null && StructChainObj.ChainOwnerName != null)
                                        {
                                            <div class="col-4 c4Helper pl-0">
                                                <label for="text5" class="label2">Owner / Stakeholder</label>
                                            </div>
                                            <table class="col-8 c8Helper pl-0">
                                                <tbody>
                                                    <tr>
                                                        @for (int i = 0; i < StructOwnerChainList.Count(); i++)
                                                        {
                                                            if (i >= 1)
                                                            {
                                                                <td class="col-1 c1Helper pl-0" style="vertical-align: top;padding:0px;">
                                                                    <span id="text5" class="stHeading1 text-color2">
                                                                        +
                                                                    </span>
                                                                </td>
                                                            }
                                                            <td style="vertical-align: top;padding:0px;">
                                                                <table>
                                                                    <tbody>
                                                                        @foreach (var StructChainOwner in StructOwnerChainList[i])
                                                                        {
                                                                            <tr>
                                                                                <td style="padding:0px;">
                                                                                    <span id="text5" class="stHeading1 text-color2 clickable">
                                                                                        <a class="showcontact" arg1="@StructChainOwner.ChainContactId">@StructChainOwner.ChainOwnerName</a>
                                                                                    </span>
                                                                                </td>
                                                                            </tr>
                                                                            if ((StructChainOwner.ChainPosition >= 2 || StructOwnerChainList[i].Count > 1) && (StructChainOwner.ChainPosition < StructOwnerChainList[i].Count)) // adding the down arrow for delegated structure
                                                                            {
                                                                                <tr>
                                                                                    <td class="col-1 c1Helper pl-0" style="padding:0px;">
                                                                                        <img id="chevlon-down-icon1" src="~/Content/assets/images/down-chevlon-filter.svg"  style="display: block;"
                                                                                             width="15">
                                                                                    </td>
                                                                                </tr>
                                                                            }
                                                                        }

                                                                    </tbody>
                                                                </table>
                                                            </td>
                                                        }
                                                    </tr>
                                                </tbody>
                                            </table>
                                        }
                                    </div>
                                    @if (!string.IsNullOrEmpty(objListStructureGeneralDetails[0].Category))
                                    {
                                        <div class="row mt-1">
                                            <div class="col-4 c4Helper pl-0">
                                                <label for="text12" class="label2">Category</label>
                                            </div>
                                            <div class="col-8 c8Helper pl-0">
                                                <span id="text12" class="stHeading1 text1">@objListStructureGeneralDetails[0].Category</span>
                                            </div>
                                        </div>
                                    }
                                    @if ((!string.IsNullOrEmpty(objListStructureGeneralDetails[0].Type)) || (!string.IsNullOrEmpty(objListStructureGeneralDetails[0].Type1)) || (!string.IsNullOrEmpty(objListStructureGeneralDetails[0].Type2)))
                                    {
                                        <div class="row mt-1">
                                            <div class="col-4 c4Helper pl-0">
                                                <label for="text13" class="label2">Type</label>
                                            </div>
                                            @{
                                                string type1 = !string.IsNullOrEmpty(objListStructureGeneralDetails[0].Type1) ? objListStructureGeneralDetails[0].Type1 : null;
                                                string type2 = !string.IsNullOrEmpty(objListStructureGeneralDetails[0].Type2) ? objListStructureGeneralDetails[0].Type2 : null;
                                            }
                                            <div class="col-8 c8Helper pl-0">
                                                @if (!string.IsNullOrEmpty(objListStructureGeneralDetails[0].Type) && !string.IsNullOrEmpty(type1) && !string.IsNullOrEmpty(type2))
                                                {
                                                    <span id="text13" class="stHeading1 text1">@objListStructureGeneralDetails[0].Type, @type1, @type2</span>
                                                }
                                                else if (!string.IsNullOrEmpty(objListStructureGeneralDetails[0].Type) && !string.IsNullOrEmpty(type1) && string.IsNullOrEmpty(type2))
                                                {
                                                    <span id="text13" class="stHeading1 text1">@objListStructureGeneralDetails[0].Type, @type1</span>
                                                }
                                                else if (!string.IsNullOrEmpty(objListStructureGeneralDetails[0].Type) && string.IsNullOrEmpty(type1) && !string.IsNullOrEmpty(type2))
                                                {
                                                    <span id="text13" class="stHeading1 text1">@objListStructureGeneralDetails[0].Type, @type2</span>
                                                }
                                                else if (string.IsNullOrEmpty(objListStructureGeneralDetails[0].Type) && !string.IsNullOrEmpty(type1) && !string.IsNullOrEmpty(type2))
                                                {
                                                    <span id="text13" class="stHeading1 text1">@type1, @type2</span>
                                                }
                                                else if (!string.IsNullOrEmpty(objListStructureGeneralDetails[0].Type) && string.IsNullOrEmpty(type1) && string.IsNullOrEmpty(type2))
                                                {
                                                    <span id="text13" class="stHeading1 text1">@objListStructureGeneralDetails[0].Type</span>
                                                }
                                                else if (string.IsNullOrEmpty(objListStructureGeneralDetails[0].Type) && !string.IsNullOrEmpty(type1) && string.IsNullOrEmpty(type2))
                                                {
                                                    <span id="text13" class="stHeading1 text1">@type1</span>
                                                }
                                                else if (string.IsNullOrEmpty(objListStructureGeneralDetails[0].Type) && string.IsNullOrEmpty(type1) && !string.IsNullOrEmpty(type2))
                                                {
                                                    <span id="text13" class="stHeading1 text1">@type2</span>
                                                }
                                            </div>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(objListStructureGeneralDetails[0].StructureClass))
                                    {
                                        <div class="row mt-1">
                                            <div class="col-4 c4Helper pl-0">
                                                <label for="text14" class="label2">Class</label>
                                            </div>
                                            <div class="col-8 c8Helper pl-0">
                                                <span id="text14" class="stHeading1 text1">@objListStructureGeneralDetails[0].StructureClass</span>
                                            </div>
                                        </div>
                                    }
                                    @if ((!string.IsNullOrEmpty(objListStructureGeneralDetails[cnt - 1].StructureAlternateNameOne)) && (objListStructureGeneralDetails[cnt - 1].StructureAlternateNameOne.Trim() != ",,"))
                                    {
                                        string[] arrAltNames = objListStructureGeneralDetails[cnt - 1].StructureAlternateNameOne.Split(',');
                                        string altName1 = null, altName2 = null, altName3 = null;
                                        altName1 = arrAltNames[0];
                                        if (arrAltNames.Length > 1)
                                        {
                                            altName2 = !string.IsNullOrEmpty(arrAltNames[1]) ? ", " + arrAltNames[1] : null;
                                            altName1 = altName1 + altName2;
                                        }
                                        if (arrAltNames.Length > 2)
                                        {
                                            altName3 = !string.IsNullOrEmpty(arrAltNames[2]) ? ", " + arrAltNames[2] : null;
                                            altName1 = altName1 + altName3;
                                        }
                                        <div class="row mt-1">
                                            <div class="col-4 c4Helper pl-0">
                                                <label for="text15" class="label2">Alternate Names</label>
                                            </div>
                                            <div class="col-8 c8Helper pl-0">
                                                <span id="text15" class="stHeading1 text1">@altName1</span>
                                            </div>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(objListStructureGeneralDetails[0].Description))
                                    {
                                        <div class="row mt-1">
                                            <div class="col-4 c4Helper pl-0">
                                                <label for="text15" class="label2">Description</label>
                                            </div>
                                            <div class="col-8 c8Helper pl-0">
                                                <span id="text15" class="stHeading1 text1">@objListStructureGeneralDetails[0].Description</span>
                                            </div>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(objListStructureGeneralDetails[0].Notes))
                                    {
                                        <div class="row mt-1">
                                            <div class="col-4 c4Helper pl-0">
                                                <label for="text15" class="label2">Notes</label>
                                            </div>
                                            <div class="col-8 c8Helper pl-0">
                                                <span id="text15" class="stHeading1 text1">@objListStructureGeneralDetails[0].Notes</span>
                                            </div>
                                        </div>
                                    }
                                    @if (objListStructureGeneralDetails[0].Length != 0)
                                    {
                                        <div class="row mt-1">
                                            <div class="col-4 c4Helper pl-0">
                                                <label for="text15" class="label2">Length</label>
                                            </div>
                                            <div class="col-8 c8Helper pl-0">
                                                <span id="text15" class="stHeading1 text1">@objListStructureGeneralDetails[0].Length m</span>
                                            </div>
                                        </div>
                                    }

                                </div>
                                <div class="col-6 colHelper1" id="structureDimension">

                                </div>

                            </div>

                        </span>
                        <div id="bottomSection">

                        </div>
                        <div id="causionReport">

                        </div>
                        <div class="button mb-2 mt-4" id="backButtonId" style="display:none;">
                            <button class="btn outline-btn-primary btn-normal" id="BackStructureList" type="button" aria-pressed="true">
                                BACK
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div id="mySidenav" class="sidenav">
        <a href="#" class="closebtn" id="closing">&times;</a>
        <a href="#" class="header-user mt-5">
            <img src="~/Content/assets/p-icon.png"  class="mr-4" width="35">John Doe
        </a>
        <hr>
        <a href="#" class="mt-3 mb-3">
            <img src="~/Content/assets/images/preference.png"  class="mr-4" width="35">Preferences
        </a>
        <a href="#" class="mt-3 mb-3">
            <img src="~/Content/assets/images/change-password.png"  class="mr-4" width="35">Change password
        </a>
        <a href="#" class="mt-3 mb-3">
            <img src="~/Content/assets/images/logout.png"  class="mr-4" width="35">Logout
        </a>
    </div>
</section>
<div id="filter-Section">

</div>


@{
    long lOSGREast = 0, lOSGRNorth = 0, lSectionId = 0;
    if (objListStructureGeneralDetails != null && objListStructureGeneralDetails.Count > 0)
    {
        lOSGREast = objListStructureGeneralDetails[cnt - 1].OSGREast;
        lOSGRNorth = objListStructureGeneralDetails[cnt - 1].OSGRNorth;

        lSectionId = objListStructureSections[0].SectionId;

    }

}
@*@Html.Hidden("hdnSectionID", null, new { @Id = hdnSectionID })*@
@Html.Hidden("hdnSectionID", lSectionId)
@Html.Hidden("OSGREast", lOSGREast)
@Html.Hidden("OSGRNorth", lOSGRNorth)

@{
    <input type="hidden" value="@ViewBag.StructureId" id="hf_StructureId" name="hf_StructureId" />
  
}
@Html.Hidden("hf_SectionType", sectionType)
<input type="hidden" value="@ViewBag.ESRN" id="hf_ESRN" name="hf_ESRN" />
@Html.Hidden("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", objListStructureGeneralDetails)

@if (objListStructureGeneralDetails != null && objListStructureGeneralDetails.Count > 0)
{
    @Html.Hidden("hf_StructureName", objListStructureGeneralDetails[cnt - 1].StructureName)


}
'@if (objListStructureGeneralDetails != null && objListStructureGeneralDetails.Count > 0)
{
    @Html.Hidden("hf_ESRnum", objListStructureGeneralDetails[cnt - 1].ESRN)


}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/jquery.validate.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/ReviewSummary.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/StructureReviewSummaryLeftPanel.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/StructureHistory.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/GeneralStructure.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/StructureMostOnerousVehicleList.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/SearchMostOnerousVehiclePanel.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/ReviewSummaryPopup.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/StructureImposedContraint.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/StructureDimensions.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/SVData.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/ManageICAUsage.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/ConfigureBandings.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/ICAVehicle.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/StructureSectionSpan.js?V@(Session["ProjectVersion"])"></script>

<script src="~/Scripts/Movements/jQuery.policesoafilter.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Movements/MovementInboxList.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Movements/PoliceMovementInbox.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Movements/MoveInboxAdvancedSearch.js?V@(Session["ProjectVersion"])"></script>

<script src="~/Scripts/Structures/ReviewCautionsList.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/CreateCaution.js?V@(Session["ProjectVersion"])"></script>

<script src="~/Scripts/Structures/CautionAddReport.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/StructureCautionHistory.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/ViewCaution.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Application/ViewVehicleDetails.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Structures/HBToSVConversion.js?V@(Session["ProjectVersion"])"></script>