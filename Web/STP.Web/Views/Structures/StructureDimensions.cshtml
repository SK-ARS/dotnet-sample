@{
    Layout = null;
}
@using STP.Domain.Structures;
@model STP.Domain.Structures.DimensionConstruction
@Html.ValidationSummary(true)
<style>
    .ah1 {
        justify-content: center !important;
    }

    .btn-layout1 {
        width: 14rem !important;
        padding: 0.675rem 0.75rem !important;
    }

    .outline-btn-primary:hover, .btn-outline-primary:hover {
        background-color: #275795 !important;
        color: white !important;
    }

    .outline-btn-primary:hover {
        color: rgba(39, 87, 149, 1);
    }

    .mr-r1 {
        margin-right: 1rem;
    }
</style>
@if (Model == null)
{
    <h4><span style="color: red">@Resources.Resource.WrongStructureMsg</span></h4>
}
else
{
    List<STP.Domain.Structures.SpanData> objListSpanData = ViewBag.objListSpanData;

    using (Html.BeginForm("EditDimCONSTRAINTS", "Structures", FormMethod.Post, new { Id = "DimensionInfo", structureId = ViewBag.structureId, sectionId = ViewBag.sectionId }))
    {
        <span id='managedimensiosId' style="display: none;">
            <div id="dimensionView">
                <div class="row">
                    @if (ViewBag.strucType == 2 || ViewBag.strucType == 1)
                    {
                        <div class="col-lg-6 col-md-12 col-sm-12 colHelper1 pl-0">
                            <div class="row mt-3">
                                <div class="col-lg-4 col-md-3 col-sm-12 pl-0">
                                    <label for="maSpacingId" class="text-normal">@Resources.Resource.Description</label>
                                </div>
                                <div class="col-lg-8 col-md-8 col-sm-12">
                                    @Html.TextAreaFor(m => m.Desc, 6, 6, new { @class = "w-100", @cols = "30", @rows = "6", @placeholder = "Network Rail" })
                                </div>
                            </div>
                            <div class="row mt-3">
                                <div class="col-lg-4 col-md-3 col-sm-12 pl-0">
                                    <label for="maSpacingId" class="text-normal">@Resources.Resource.ObjCarried</label>
                                </div>
                                <div class="col-lg-6 col-md-6 col-sm-12">
                                    @Html.TextBoxFor(m => m.ObjectCarried, null, new { @class = "edit-normal span-type-text" })
                                </div>
                            </div>
                            <div class="row mt-3">
                                <div class="col-lg-4 col-md-3 col-sm-12 pl-0">
                                    <label for="maSpacingId" class="text-normal">@Resources.Resource.ObjCrossed</label>
                                </div>
                                <div class="col-lg-6 col-md-6 col-sm-12">
                                    @Html.TextBoxFor(m => m.ObjectCrossed, null, new { @class = "edit-normal span-type-text" })
                                </div>
                            </div>
                            @if (ViewBag.strucType == 1)
                            {
                                <div class="row mt-3">
                                    <div class="col-lg-4 col-md-3 col-sm-12 pl-0">
                                        <label for="maSpacingId" class="text-normal">@Resources.Resource.SkewAngle</label>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12" >
                                        @Html.TextBoxFor(m => m.SkewAngle, null, new { @class = "edit-normal", @maxLength = "10" })
                                        <span id="skewAngleValidate" class="error invalid-feedback" style="display:none">Please enter valid skew angle</span>
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-2 text-normal">
                                        deg
                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-4 col-md-3 col-sm-12 pl-0">
                                        <label for="maSpacingId" class="text-normal">@Resources.Resource.Length</label>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12" id="lenghvalidate">
                                        @Html.TextBoxFor(m => m.Length, null, new { @class = "edit-normal" })
                                        <span id="lengthValidate" class="error invalid-feedback" style="display:none">Please enter valid length</span>
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-2 text-normal">
                                        m
                                    </div>
                                    @Html.ValidationMessageFor(m => m.Length)
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-4 col-md-3 col-sm-12 pl-0">
                                        <label for="maSpacingId" class="text-normal">@Resources.Resource.MaxSpanLen</label>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12" >
                                        @Html.TextBoxFor(m => m.MaxLength, null, new { @class = "edit-normal" })
                                        <span id="maxSpanValidate" class="error invalid-feedback" style="display:none">Please enter valid max span length</span>
                                    </div>
                                    <div class="col-lg-2 col-md-2 col-sm-2 text-normal">
                                        m
                                    </div>
                                    @Html.ValidationMessageFor(m => m.MaxLength)
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-4 col-md-3 col-sm-12 pl-0">
                                        <label for="maSpacingId" class="text-normal">@Resources.Resource.NumSpan</label>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12" >
                                        @Html.TextBoxFor(m => m.SpansCount, null, new { @class = "edit-normal", maxlength = "10" })
                                        <span id="numSpanValidate" class="error invalid-feedback" style="display:none">Please enter valid number of spans</span>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.SpansCount)
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-4 col-md-3 col-sm-12 pl-0">
                                        <label for="maSpacingId" class="text-normal">@Resources.Resource.NumDecks</label>
                                    </div>
                                    <div class="col-lg-6 col-md-6 col-sm-12" >
                                        @Html.TextBoxFor(m => m.DecksCount, null, new { @class = "edit-normal", maxlength = "10" })
                                        <span id="numDeckValidate" class="error invalid-feedback" style="display:none">Please enter valid number of decks</span>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.DecksCount)
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-4 col-md-3 col-sm-12 pl-0">
                                        <label for="maSpacingId" class="text-normal pt-3">@Resources.Resource.ConstructType</label>
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-6">
                                        @Html.DropDownListFor(m => m.ConstructionType1, ViewBag.ConstructTypeList as SelectList, "Select type", new { @class = "form-select text-normal select1 structure-dim-dropdown" })
                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-6">
                                        @Html.TextBoxFor(m => m.TxtConstructionType1, null, new { @id = "TxtConstructionType1", @name = "TxtConstructionType1 ", @class = "edit-normal span-type-text" })
                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-4 col-md-3 col-sm-12">
                                        <label for="maSpacingId" class="text-normal pt-3"></label>
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-6">
                                        @Html.DropDownListFor(m => m.ConstructionType2, ViewBag.ConstructTypeList as SelectList, "Select type", new { @class = "form-select text-normal select1 structure-dim-dropdown" })
                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-6">
                                        @Html.TextBoxFor(m => m.TxtConstructionType2, null, new { @id = "TxtConstructionType2", @class = "edit-normal span-type-text" })
                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-4 col-md-3 col-sm-12">
                                        <label for="maSpacingId" class="text-normal pt-3"></label>
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-6">
                                        @Html.DropDownListFor(m => m.ConstructionType3, ViewBag.ConstructTypeList as SelectList, "Select type", new { @class = "form-select text-normal select1 structure-dim-dropdown" })
                                    </div>
                                    <div class="col-lg-3 col-md-3 col-sm-6">
                                        @Html.TextBoxFor(m => m.TxtConstructionType3, null, new { @id = "TxtConstructionType3", @class = "edit-normal span-type-text" })
                                    </div>
                                </div>
                            }

                        </div>
                    }
                    <div class="col-lg-6 col-md-12 col-sm-12 colHelper1 pl-0">
                        @if (ViewBag.strucType == 1)
                        {
                            <div>
                                <div class="row mt-3">
                                    <div class="col-lg-3 col-md-3 col-sm-12">
                                        <label for="maSpacingId" class="text-normal pt-3">@Resources.Resource.DeckMaterial</label>
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-6">
                                        @Html.DropDownListFor(m => m.DeckMaterial1, ViewBag.DeckMaterialList as SelectList, "Select type", new { @class = "form-select text-normal select1 structure-dim-dropdown" })
                                    </div>
                                    <div class="col-lg-4 col-md-4 col-sm-6">
                                        @Html.TextBoxFor(m => m.TxtDeckMaterial1, null, new { @id = "TxtDeckMaterial1", @class = "edit-normal span-type-text" })
                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-3 col-md-3 col-sm-12">
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-6">
                                        @Html.DropDownListFor(m => m.DeckMaterial2, ViewBag.DeckMaterialList as SelectList, "Select type", new { @class = "form-select text-normal select1 structure-dim-dropdown" })
                                    </div>
                                    <div class="col-lg-4 col-md-4 col-sm-6">
                                        @Html.TextBoxFor(m => m.TxtDeckMaterial2, null, new { @id = "TxtDeckMaterial2", @class = "edit-normal span-type-text" })
                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-3 col-md-3 col-sm-12">
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-6">
                                        @Html.DropDownListFor(m => m.DeckMaterial3, ViewBag.DeckMaterialList as SelectList, "Select type", new { @class = "form-select text-normal select1 structure-dim-dropdown" })
                                    </div>
                                    <div class="col-lg-4 col-md-4 col-sm-6">
                                        @Html.TextBoxFor(m => m.TxtDeckMaterial3, null, new { @id = "TxtDeckMaterial3", @class = "edit-normal span-type-text" })
                                    </div>
                                </div>
                            </div>
                            <div>
                                <div class="row mt-3">
                                    <div class="col-lg-3 col-md-3 col-sm-12">
                                        <label for="maSpacingId" class="text-normal pt-3">Bearings</label>
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-6">
                                        @Html.DropDownListFor(m => m.BearingsType1, ViewBag.Bearings1List as SelectList, "Select type", new { @class = "form-select text-normal select1 structure-dim-dropdown" })
                                    </div>
                                    <div class="col-lg-4 col-md-4 col-sm-6">
                                        @Html.TextBoxFor(m => m.TxtBearingsType1, null, new { @id = "TxtBearingsType1", @class = "edit-normal span-type-text" })
                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-3 col-md-3 col-sm-12">
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-6">
                                        @Html.DropDownListFor(m => m.BearingsType2, ViewBag.Bearings1List as SelectList, "Select type", new { @class = "form-select text-normal select1 structure-dim-dropdown" })
                                    </div>
                                    <div class="col-lg-4 col-md-4 col-sm-6">
                                        @Html.TextBoxFor(m => m.TxtBearingsType2, null, new { @id = "TxtBearingsType2", @class = "edit-normal span-type-text" })
                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-3 col-md-3 col-sm-12">
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-6">
                                        @Html.DropDownListFor(m => m.BearingsType3, ViewBag.Bearings1List as SelectList, "Select type", new { @class = "form-select text-normal select1 structure-dim-dropdown" })
                                    </div>
                                    <div class="col-lg-4 col-md-4 col-sm-6">
                                        @Html.TextBoxFor(m => m.TxtBearingsType3, null, new { @id = "TxtBearingsType3", @class = "edit-normal span-type-text" })
                                    </div>
                                </div>
                            </div>
                            <div>
                                <div class="row mt-3">
                                    <div class="col-lg-3 col-md-3 col-sm-12">
                                        <label for="maSpacingId" class="text-normal pt-3">@Resources.Resource.Foundations</label>
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-6">
                                        @Html.DropDownListFor(m => m.FoundationType1, ViewBag.FoundationsList as SelectList, "Select type", new { @class = "form-select text-normal select1 structure-dim-dropdown" })
                                    </div>
                                    <div class="col-lg-4 col-md-4 col-sm-6">
                                        @Html.TextBoxFor(m => m.TxtFoundationType1, null, new { @id = "TxtFoundationType1", @class = "edit-normal span-type-text" })
                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-3 col-md-3 col-sm-12">
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-6">
                                        @Html.DropDownListFor(m => m.FoundationType2, ViewBag.FoundationsList as SelectList, "Select type", new { @class = "form-select text-normal select1 structure-dim-dropdown" })
                                    </div>
                                    <div class="col-lg-4 col-md-4 col-sm-6">
                                        @Html.TextBoxFor(m => m.TxtFoundationType2, null, new { @id = "TxtFoundationType2", @class = "edit-normal span-type-text" })
                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-lg-3 col-md-3 col-sm-12">
                                    </div>
                                    <div class="col-lg-5 col-md-5 col-sm-6">
                                        @Html.DropDownListFor(m => m.FoundationType3, ViewBag.FoundationsList as SelectList, "Select type", new { @class = "form-select text-normal select1 structure-dim-dropdown" })
                                    </div>
                                    <div class="col-lg-4 col-md-4 col-sm-6">
                                        @Html.TextBoxFor(m => m.TxtFoundationType3, null, new { @id = "TxtFoundationType3", @class = "edit-normal span-type-text" })
                                    </div>
                                </div>
                            </div>

                            <div class="row mt-3">
                                <div class="col-lg-4 col-md-4 col-sm-12">
                                    <label for="maSpacingId" class="text-normal">@Resources.Resource.CarryWidth</label>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-12">
                                    @Html.TextBoxFor(m => m.CarrigeWayWidth, null, new { @class = "edit-normal" })
                                    <span id="carriageValidate" class="error invalid-feedback" style="display:none">Please enter valid carriageway widths</span>
                                    @Html.HiddenFor(m => m.CarrigeWayId, new { id = "hdn_CarrNo" })
                                </div>
                                <div class="col-lg-2 col-md-2 col-sm-2 text-normal">
                                    m
                                </div>
                            </div>
                            <div class="row mt-3">
                                <div class="col-lg-4 col-md-4 col-sm-12">
                                    <label for="maSpacingId" class="text-normal">@Resources.Resource.DeckWidth</label>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-12" >
                                    @Html.TextBoxFor(m => m.DeckWidth, null, new { @class = "edit-normal" })
                                    <span id="deckWidthValidate" class="error invalid-feedback" style="display:none">Please enter valid deck widths</span>
                                    @Html.HiddenFor(m => m.DeckId, new { id = "hdn_DeckID" })
                                </div>
                                <div class="col-lg-2 col-md-2 col-sm-2 text-normal">
                                    m
                                </div>
                            </div>
                        }
                        @if (ViewBag.strucType == 3)
                        {
                            <div class="row mt-3" id="level_cross">
                                <div class="col-lg-3 col-md-3 col-sm-12 pl-0">
                                    <label for="maSpacingId" class="text-normal">Chainage</label>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6">
                                    @Html.TextBoxFor(m => m.Chainage, new { @class = "edit-normal" })
                                </div>
                            </div>
                        }

                    </div>
                </div>
                @if (ViewBag.strucType == 1)
                {
                    <div class="main-table" id="tableSOA">
                        @if (ViewBag.Helpdest_redirect != "true")
                        {
                            <table class="mt-5">
                                <thead class="table-soa">
                                <th class="table-soa text-color3 stHeading1 m-0">Spans</th>
                                <th class="table-soa text-color3 stHeading1 m-0 pr-0 pl-0">Span position</th>
                                <th class="table-soa text-color3 stHeading1 m-0">Span length</th>
                                <th class="table-soa text-color3 stHeading1 m-0">Span description</th>
                                <th class="table-soa text-color3 stHeading1 m-0">Span structure type</th>
                                <th class="table-soa text-color3 stHeading1 m-0">Span construction type</th>
                                <th class="table-soa text-color3 stHeading1 m-0">Span deck material</th>
                                <th class="table-soa" style="width: 15%;">
                                    <span>
                                        <img id="addSpan" src="/Content/assets/images/Group 999.svg" class="mr-2 pb-2"
                                             width="35" title="Add span">
                                    </span>
                                </th>
                                </thead>
                                @if (objListSpanData != null)
                                {
                                    int spnCnt = 0;

                                    if (objListSpanData.Count > 0)
                                    {
                                        <tbody>
                                            @foreach (var items in objListSpanData)
                                            {
                                                spnCnt = Convert.ToInt32(spnCnt) + 1;
                                                <tr>
                                                    <td class="table-soa stHeading1 text1">Span @spnCnt</td>
                                                    <td class="table-soa stHeading1 text1 pr-0 pl-0">@items.Position</td>
                                                    <td class="table-soa stHeading1 text1">@items.Length m</td>
                                                    <td class="table-soa stHeading1 text1">@items.Description</td>
                                                    <td class="table-soa stHeading1 text1 span-type-values">
                                                        @items.StructType1
                                                        @if (!string.IsNullOrEmpty(items.StructType2))
                                                        {
                                                            @items.StructType2
                                                        }

                                                        @if (!string.IsNullOrEmpty(items.StructType3))
                                                        {
                                                            @items.StructType3
                                                        }
                                                    </td>
                                                    <td class="table-soa stHeading1 text1 span-type-values">
                                                        @items.ConstructionType1
                                                        @if (!string.IsNullOrEmpty(items.ConstructionType2))
                                                        {
                                                            @items.ConstructionType2
                                                        }

                                                        @if (!string.IsNullOrEmpty(items.ConstructionType3))
                                                        {
                                                            @items.ConstructionType3
                                                        }
                                                    </td>
                                                    <td class="table-soa stHeading1 text1 span-type-values">
                                                        @items.DeckMaterial1
                                                        @if (!string.IsNullOrEmpty(items.DeckMaterial2))
                                                        {
                                                            @items.DeckMaterial2
                                                        }

                                                        @if (!string.IsNullOrEmpty(items.DeckMaterial3))
                                                        {
                                                            @items.DeckMaterial3
                                                        }
                                                    </td>
                                                    <td class="table-soa" style="white-space: nowrap;">
                                                        <span>
                                                            <img Position="@items.Position" src="/Content/assets/images/delete-icon.svg" class="mr-2 pb-2 deleteSpan"
                                                                 width="20" title="Delete">
                                                        </span>
                                                        <span><img Position="@items.Position" src="/Content/assets/images/edit-icon.svg" class="mr-2 editDimension" width="20" style="margin-bottom:9px;" title="Edit"></span>
                                                    </td>
                                                </tr>
                                            }

                                        </tbody>
                                    }
                                }
                            </table>
                        }
                    </div>
                }

                <div class="row ah1 mt-5">

                    <button type="button" id="btnSaveData" class="btn outline-btn-primary btn-normal btn-layout1 mr-r1 mb-2">SAVE</button>
                    <button type="button" id="btnSuccess" class="btn outline-btn-primary btn-normal btn-layout1 mb-2 mr-r1 ml2">CANCEL</button>
                </div>
            </div>
            <div id="spanSection">

            </div>
        </span>

    }

}
@Html.Hidden("hdnDeleteSpanNo")
@{
    <input type="hidden" value="@ViewBag.Helpdest_redirect" id="hf_Helpdest_redirect" name="hf_Helpdest_redirect" />
    @Html.Hidden("hf_DeckId", Model.DeckId)
    @Html.Hidden("hf_CarrigeWayId", Model.CarrigeWayId)
    @Html.Hidden("hf_EncodeDeckId", Html.Raw(Json.Encode(Model.DeckId)))
    @Html.Hidden("hf_EncodeCarrigeWayId", Html.Raw(Json.Encode(Model.CarrigeWayId)))
    <input type="hidden" value="@ViewBag.strucType" id="hf_structType" name="hf_structType" />
    <input type="hidden" value="@ViewBag.structureId" id="hf_structureId" name="hf_structureId" />
    <input type="hidden" value="@ViewBag.sectionId" id="hf_sectionId" name="hf_sectionId" />
    <input type="hidden" value="@ViewBag.structName" id="hf_structName" name="hf_structName" />
    <input type="hidden" value="@ViewBag.ESRN" id="hf_ESRN" name="hf_ESRN" />
}
@*<script src="~/Scripts/Structures/StructureDimensions.js?V@(Session["ProjectVersion"])"></script>*@
