
@{
    Layout = null;
}
@{
    bool dimension = false;
    bool constraints = false;
    bool ica = false;

    STP.Web.Controllers.ConstraintController objConstraintController = new STP.Web.Controllers.ConstraintController();

    STP.Domain.Structures.DimensionConstruction objDimentionConstruction = ViewBag.DimentionConstruction;

    List<STP.Domain.Structures.SpanData> objListSpanData = ViewBag.ListSpanData;

    string feet = null, inch = null;
    string signed_value = "";
}

@functions{
    public string getDisplayString(double? mtrs, double? feet)
    {
        string dis_mtrs = " ";
        double inches = 0;
        double feet1 = 0;
        string returnstr = "";

        if (mtrs == null || mtrs == 0)
        {
            {
                if (feet != null && feet != 0)
                {
                    mtrs = feet * 0.3048;
                    dis_mtrs = string.Format("{0:0.00}", mtrs);
                    double value = (double)feet;
                    feet1 = ((int)value);
                    double deci = Math.Round((value - (int)value) * 12);
                    inches = deci;

                }

            }
        }
        else if (feet == null || feet == 0)
        {
            dis_mtrs = Convert.ToString(mtrs);
            feet = (double)mtrs * 3.28;

            double value = (double)feet;
            feet1 = ((int)value);
            double deci = Math.Round((value - (int)value) * 12);
            inches = deci;

        }

        returnstr = dis_mtrs + " m " + " / " + feet1 + "'";
        if (inches != 0)
            returnstr = returnstr + "  " + inches + "''";
        return returnstr;
    }

}
<div id="dimesionSection">
    <div class="cardSOA1">
        <h6 class="text-color3 stHeading1 m-0">
            Structure dimensions and construction
        </h6>
    </div>
    <div class="row mt-3">
        <div class="col-4 pl-0"> 
        </div>
        <div class="col-8 pl-0">
        </div>
    </div>
    @if (objDimentionConstruction != null && !string.IsNullOrEmpty(objDimentionConstruction.Desc))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text11" class="label2">@Resources.Resource.Description</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text11" class="stHeading1 text1">@objDimentionConstruction.Desc</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && !string.IsNullOrEmpty(objDimentionConstruction.ObjectCarried))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text11" class="label2">@Resources.Resource.ObjCarried</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text11" class="stHeading1 text1">@objDimentionConstruction.ObjectCarried</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && !string.IsNullOrEmpty(objDimentionConstruction.ObjectCrossed))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text22" class="label2">@Resources.Resource.ObjCrossed</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text22" class="stHeading1 text1">@objDimentionConstruction.ObjectCrossed</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && objDimentionConstruction.SkewAngle != null)
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text33" class="label2">@Resources.Resource.SkewAngle</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text33" class="stHeading1 text1">@objDimentionConstruction.SkewAngle deg</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && (objDimentionConstruction.Length != null && (int)objDimentionConstruction.Length != 0))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text44" class="label2">@Resources.Resource.Length</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text44" class="stHeading1 text1">@objDimentionConstruction.Length m</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && (objDimentionConstruction.MaxLength != null && (int)objDimentionConstruction.MaxLength != 0))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.MaxSpanLen</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@objDimentionConstruction.MaxLength m</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && !string.IsNullOrEmpty(objDimentionConstruction.Chainage))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">Chainage</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@objDimentionConstruction.Chainage</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && (objDimentionConstruction.SpansCount != null && (int)objDimentionConstruction.SpansCount != 0))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.NumSpan</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@objDimentionConstruction.SpansCount</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && (objDimentionConstruction.DecksCount != null && (int)objDimentionConstruction.DecksCount != 0))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.NumDecks</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@objDimentionConstruction.DecksCount</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && ((!string.IsNullOrEmpty(objDimentionConstruction.ConstructionType1)) || (!string.IsNullOrEmpty(objDimentionConstruction.ConstructionType2)) || (!string.IsNullOrEmpty(objDimentionConstruction.ConstructionType3))))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.ConstructType</label>
            </div>
            <div class="col-8 pl-0">
                @{
                    string ConstructionType2 = objDimentionConstruction.ConstructionType2, ConstructionType3 = objDimentionConstruction.ConstructionType3;

                    string ConstructionType = @objDimentionConstruction.ConstructionType1;
                    if (ConstructionType2 != "")
                        ConstructionType = ConstructionType + ", " + ConstructionType2;

                    if (ConstructionType3 != "")
                        ConstructionType = ConstructionType + ", " + ConstructionType3;
                }
                <span id="text55" class="stHeading1 text1 span-type-values">@ConstructionType</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && ((!string.IsNullOrEmpty(objDimentionConstruction.DeckMaterial1)) || (!string.IsNullOrEmpty(objDimentionConstruction.DeckMaterial2)) || (!string.IsNullOrEmpty(objDimentionConstruction.DeckMaterial3))))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.DeckMaterial</label>
            </div>
            <div class="col-8 pl-0">
                @{

                    string DeckMaterial2 = objDimentionConstruction.DeckMaterial2, DeckMaterial3 = objDimentionConstruction.DeckMaterial3;
                    string DeckMaterial = @objDimentionConstruction.DeckMaterial1;

                    if (DeckMaterial2 != "")
                        DeckMaterial = DeckMaterial + ", " + DeckMaterial2;

                    if (DeckMaterial3 != "")
                        DeckMaterial = DeckMaterial + ", " + DeckMaterial3;

                }
                <span id="text55" class="stHeading1 text1 span-type-values">@DeckMaterial</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && ((!string.IsNullOrEmpty(objDimentionConstruction.BearingsType1)) || (!string.IsNullOrEmpty(objDimentionConstruction.BearingsType2)) || (!string.IsNullOrEmpty(objDimentionConstruction.BearingsType3))))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.Bearings</label>
            </div>
            <div class="col-8 pl-0">
                @{
                    string BearingsType2 = objDimentionConstruction.BearingsType2, BearingsType3 = objDimentionConstruction.BearingsType3;
                    string BearingsType = objDimentionConstruction.BearingsType1;
                    if (BearingsType2 != "")
                    {
                        BearingsType = BearingsType + ", " + BearingsType2;
                    }
                    if (BearingsType3 != "")
                    {
                        BearingsType = BearingsType + ", " + BearingsType3;
                    }
                }
                <span id="text55" class="stHeading1 text1 span-type-values">@BearingsType</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && ((!string.IsNullOrEmpty(objDimentionConstruction.FoundationType1)) || (!string.IsNullOrEmpty(objDimentionConstruction.FoundationType2)) || (!string.IsNullOrEmpty(objDimentionConstruction.FoundationType3))))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.Foundations</label>
            </div>
            <div class="col-8 pl-0">
                @{
                    string FoundationType2 = objDimentionConstruction.FoundationType2, FoundationType3 = objDimentionConstruction.FoundationType3;
                    string FoundationType = objDimentionConstruction.FoundationType1;

                    if (FoundationType2 != "")
                    {
                        FoundationType = FoundationType + ", " + FoundationType2;
                    }

                    if (FoundationType3 != "")
                    {
                        FoundationType = FoundationType + ", " + FoundationType3;
                    }
                }
                <span id="text55" class="stHeading1 text1 span-type-values">@FoundationType</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && (objDimentionConstruction.CarrigeWayWidth != null && (int)objDimentionConstruction.CarrigeWayWidth != 0))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.CarryWidth</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@objDimentionConstruction.CarrigeWayWidth m</span>
            </div>
        </div>
    }
    @if (objDimentionConstruction != null && (objDimentionConstruction.DeckWidth != null && (int)objDimentionConstruction.DeckWidth != 0))
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.DeckWidth</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@objDimentionConstruction.DeckWidth m</span>
            </div>
        </div>
    }
</div>

@if (objListSpanData != null)
{
    int spnCnt = 0;
    dimension = true;

    if (objListSpanData.Count > 0)
    {
        <div class="main-table" id="tableSOA">
            <table class="mt-5 cardSOA1 table-white-bg" style="background-color:white !important">
                <thead class="table-soa">
                    <tr>
                        <th class="table-soa text-color3 stHeading1 m-0">Spans</th>
                        <th class="table-soa text-color3 stHeading1 m-0">Span length</th>
                        <th class="table-soa text-color3 stHeading1 m-0">Span description</th>
                        <th class="table-soa text-color3 stHeading1 m-0">Span structure type</th>
                        <th class="table-soa text-color3 stHeading1 m-0">Span construction type</th>
                        <th class="table-soa text-color3 stHeading1 m-0">Span deck material</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var items in objListSpanData)
                    {
                        spnCnt = Convert.ToInt32(spnCnt) + 1;
                        <tr>
                            <td class="table-soa stHeading1 text1">Span @spnCnt</td>
                            <td class="table-soa stHeading1 text1">@items.Length m</td>
                            <td class="table-soa stHeading1 text1">@items.Description</td>
                            <td class="table-soa stHeading1 text1 span-type-values">
                                @items.StructType1
                                @if (!string.IsNullOrEmpty(items.StructType2))
                                {
                                    @items.StructType2
                                }

                                @if (!string.IsNullOrEmpty(items.StructType3))
                                {
                                    @items.StructType3
                                }
                            </td>
                            <td class="table-soa stHeading1 text1 span-type-values">
                                @items.ConstructionType1
                                @if (!string.IsNullOrEmpty(items.ConstructionType2))
                                {
                                    @items.ConstructionType2
                                }

                                @if (!string.IsNullOrEmpty(items.ConstructionType3))
                                {
                                    @items.ConstructionType3
                                }
                            </td>
                            <td class="table-soa stHeading1 text1 span-type-values">
                                @items.DeckMaterial1
                                @if (!string.IsNullOrEmpty(items.DeckMaterial2))
                                {
                                    @items.DeckMaterial2
                                }

                                @if (!string.IsNullOrEmpty(items.DeckMaterial3))
                                {
                                    @items.DeckMaterial3
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
}
@{
    STP.Domain.Structures.ImposedConstraints objImposedConstraints = ViewBag.ImposedConstraintas;
}
@if (objImposedConstraints != null)
{
<div class="col-12 pl-3" id="imposedSection">
    <div class="cardSOA1">
        <h6 class="text-color3 stHeading1 m-0">
            Structure imposed constraints
        </h6>
    </div>
    <div class="row mt-3">
        <div class="col-4 pl-0">
        </div>
        <div class="col-8 pl-0">
        </div>
    </div>
    @if ((objImposedConstraints.Height != null && (int)objImposedConstraints.Height != 0))
    {
        constraints = true;
        <div class="row mt-1">            
            <div class="col-4 pl-0">
                <label for="text11" class="label2">@Resources.Resource.Height</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text11" class="stHeading1 text1">@objImposedConstraints.Height m</span>
            </div>
        </div>
    }
    @if ((objImposedConstraints.Width != null && (int)objImposedConstraints.Width != 0))
    {
        constraints = true;
        <div class="row mt-1">            
            <div class="col-4 pl-0">
                <label for="text22" class="label2">@Resources.Resource.Width</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text22" class="stHeading1 text1">@objImposedConstraints.Width m</span>
            </div>
        </div>
    }
    @if ((objImposedConstraints.Length != null && (int)objImposedConstraints.Length != 0))
    {
        constraints = true;
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text33" class="label2">@Resources.Resource.Length</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text33" class="stHeading1 text1">@objImposedConstraints.Length m</span>
            </div>
        </div>
    }
    @if ((objImposedConstraints.GrossWeight != null && (int)objImposedConstraints.GrossWeight != 0))
    {
        constraints = true;
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text44" class="label2">@Resources.Resource.GrossWeight</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text44" class="stHeading1 text1">@objImposedConstraints.GrossWeight kg</span>
            </div>
        </div>
    }
    @if ((objImposedConstraints.AxleWeight != null && (int)objImposedConstraints.AxleWeight != 0))
    {
        constraints = true;
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.AxleWeight</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@objImposedConstraints.AxleWeight kg</span>
            </div>
        </div>
    }
    @if ((objImposedConstraints.HighwaySkew != null))
    {
        constraints = true;
        <div class="row mt-1">           
            <div class="col-4 pl-0">
                <label for="text55" class="label2">Highway skew</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@objImposedConstraints.HighwaySkew degree</span>
            </div>
        </div>
    }
    @if ((objImposedConstraints.VerticalAlignment.EntryDistance != null && objImposedConstraints.VerticalAlignment.EntryDistance != 0) && (objImposedConstraints.VerticalAlignment.EntryHeight != null && objImposedConstraints.VerticalAlignment.EntryHeight != 0)
                && (objImposedConstraints.VerticalAlignment.MaxDistance != null && objImposedConstraints.VerticalAlignment.MaxDistance != 0) && (objImposedConstraints.VerticalAlignment.MaxHeight != null && objImposedConstraints.VerticalAlignment.MaxHeight != 0)
                  && (objImposedConstraints.VerticalAlignment.ExitDistance != null && objImposedConstraints.VerticalAlignment.ExitDistance != 0) && (objImposedConstraints.VerticalAlignment.ExitHeight != null && objImposedConstraints.VerticalAlignment.ExitHeight != 0))
    {
        dimension = true;
        constraints = true;
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">Vertical / Horizontal alignment</label>
            </div>
            <div class="col-7 pl-0">
                <table>
                    <thead class="table-soa">
                        <tr>
                            <th class="table-soa text-color3 stHeading1 m-0" style="padding-left: 0.2rem !important">Entry</th>
                            <th class="table-soa text-color3 stHeading1 m-0" style="padding-left: 0.2rem !important">Max</th>
                            <th class="table-soa text-color3 stHeading1 m-0" style="padding-left: 0.2rem !important">Exit</th>
                            <th class="table-soa text-color3 stHeading1 m-0" style="padding-left: 0.2rem !important"></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="table-soa stHeading1 text1" style="padding-left: 0.2rem !important">@objImposedConstraints.VerticalAlignment.EntryDistance m &#64; @objImposedConstraints.VerticalAlignment.EntryHeight m</td>
                            <td class="table-soa stHeading1 text1" style="padding-left: 0.2rem !important">@objImposedConstraints.VerticalAlignment.MaxDistance m &#64; @objImposedConstraints.VerticalAlignment.MaxHeight m</td>
                            <td class="table-soa stHeading1 text1" style="padding-left: 0.2rem !important">@objImposedConstraints.VerticalAlignment.ExitDistance m &#64; @objImposedConstraints.VerticalAlignment.ExitHeight m</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    }
    @if ((objImposedConstraints.MaxWeightOverMinDistance != null && objImposedConstraints.MaxWeightOverMinDistance.TonnesOver != ""))
    {
        constraints = true;
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.MaxWeightOvrDst</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@objImposedConstraints.MaxWeightOverMinDistance.TonnesOver kg</span>
                <span>&nbsp;&nbsp;--6-1</span>
                <span>&nbsp;&nbsp;--6-3</span>
            </div>
        </div>
    }
    @if ((objImposedConstraints.MaxWeightOverMinDistanceDistance != null && objImposedConstraints.MaxWeightOverMinDistanceDistance != ""))
    {
        constraints = true;

        string[] arrWeight = objImposedConstraints.MaxWeightOverMinDistanceWeight.Split(',');
        string[] arrDistance = objImposedConstraints.MaxWeightOverMinDistanceDistance.Split(',');

        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.MaxWeightOvrDst</label>
            </div>
            @for (int i = 0; i < arrWeight.Length; i++)
            {
                <div class="col-8 pl-0">
                    <span id="text55" class="stHeading1 text1">@arrWeight[i] kg &#64; @arrDistance[i] m</span>
                </div>
                <div class="col-4 pl-0">
                </div>        
            }
        </div>
    }
    @if (objImposedConstraints.HALoading != null)
    {
        constraints = true;
        string strHALoading = objImposedConstraints.HALoading == 1 ? "True" : "False or Unknown";

        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.FullHALoad</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@strHALoading</span>
            </div>
        </div>
    }
    @if (objImposedConstraints.HBWithLiveLoad != null && (int)objImposedConstraints.HBWithLiveLoad != 0)
    {
        constraints = true;
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.HBRateWithLoad</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@objImposedConstraints.HBWithLiveLoad</span>
            </div>
        </div>
    }
    @if (objImposedConstraints.HBWithoutLiveLoad != null && (int)objImposedConstraints.HBWithoutLiveLoad != 0)
    {
        constraints = true;
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.HBRateWithoutLoad</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@objImposedConstraints.HBWithoutLiveLoad</span>
            </div>
        </div>
    }
    @if (
                (objImposedConstraints.SignedHeight.HeightMeter != null && (int)objImposedConstraints.SignedHeight.HeightMeter != 0) ||
                (objImposedConstraints.SignedHeight.HeightFeet != null && (int)objImposedConstraints.SignedHeight.HeightFeet != 0) ||
                 (objImposedConstraints.SignedHeight.HeightInches != null && (int)objImposedConstraints.SignedHeight.HeightInches != 0)
                )
    {
        constraints = true;

        objImposedConstraints.SignedHeight.HeightMeter = objImposedConstraints.SignedHeight.HeightMeter == null ? 0 : objImposedConstraints.SignedHeight.HeightMeter;
        signed_value = objImposedConstraints.SignedHeight.HeightMeter + " m";
        feet = Convert.ToString(objImposedConstraints.SignedHeight.HeightFeet);
        inch = Convert.ToString(objImposedConstraints.SignedHeight.HeightInches);
        <div class="row mt-1">
            @if (!string.IsNullOrEmpty(feet))
            {
                signed_value = signed_value + " / " + feet + "'";
            }
            @if (!string.IsNullOrEmpty(inch))
            {
                signed_value = signed_value + " " + inch + "''";
            }
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.SignedHeight</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@signed_value</span>
            </div>
        </div>
    }
    else if (objImposedConstraints.SignedHeight.HeightMeter != null && (int)objImposedConstraints.SignedHeight.HeightMeter == 0)
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.SignedHeight</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">No signed constraint</span>
            </div>
        </div>
    }
    @if (
                (objImposedConstraints.SignedWidth.WidthMeter != null && (int)objImposedConstraints.SignedWidth.WidthMeter != 0) ||
                (objImposedConstraints.SignedWidth.WidthFeet != null && (int)objImposedConstraints.SignedWidth.WidthFeet != 0) ||
                (objImposedConstraints.SignedWidth.WidthInches != null && (int)objImposedConstraints.SignedWidth.WidthInches != 0)
                )
    {
        constraints = true;

        feet = Convert.ToString(objImposedConstraints.SignedWidth.WidthFeet);
        inch = Convert.ToString(objImposedConstraints.SignedWidth.WidthInches);

        objImposedConstraints.SignedWidth.WidthMeter = objImposedConstraints.SignedWidth.WidthMeter == null ? 0 : objImposedConstraints.SignedWidth.WidthMeter;

        signed_value = objImposedConstraints.SignedWidth.WidthMeter + " m";
        if (!string.IsNullOrEmpty(feet))
        {
            signed_value = signed_value + " / " + feet + "'";
        }
        if (!string.IsNullOrEmpty(inch))
        {
            signed_value = signed_value + " " + inch + "''";
        }
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.SignedWidth</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@signed_value</span>
            </div>
        </div>

    }
    else if (objImposedConstraints.SignedWidth.WidthMeter != null && (int)objImposedConstraints.SignedWidth.WidthMeter == 0)
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.SignedWidth</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">No signed constraint</span>
            </div>
        </div>
    }
    @if (
                (objImposedConstraints.SignedLength.LengthMeter != null && (int)objImposedConstraints.SignedLength.LengthMeter != 0) ||
                (objImposedConstraints.SignedLength.LengthFeet != null && (int)objImposedConstraints.SignedLength.LengthFeet != 0) ||
                (objImposedConstraints.SignedLength.LengthInches != null && (int)objImposedConstraints.SignedLength.LengthInches != 0)
                )
    {
        constraints = true;

        feet = Convert.ToString(objImposedConstraints.SignedLength.LengthFeet);
        inch = Convert.ToString(objImposedConstraints.SignedLength.LengthInches);

        objImposedConstraints.SignedLength.LengthMeter = objImposedConstraints.SignedLength.LengthMeter == null ? 0 : objImposedConstraints.SignedLength.LengthMeter;

        signed_value = objImposedConstraints.SignedLength.LengthMeter + " m";
        if (!string.IsNullOrEmpty(feet))
        {
            signed_value = signed_value + " / " + feet + "'";
        }
        if (!string.IsNullOrEmpty(inch))
        {
            signed_value = signed_value + " " + inch + "''";
        }
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.SignedLen</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@signed_value</span>
            </div>
        </div>

    }
    else if (objImposedConstraints.SignedLength.LengthMeter != null && (int)objImposedConstraints.SignedLength.LengthMeter == 0)
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2"> @Resources.Resource.SignedLen</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">No signed constraint</span>
            </div>
        </div>

    }
    @if (objImposedConstraints.SignedGrossWeightObj.GrossWeight != null && (int)objImposedConstraints.SignedGrossWeightObj.GrossWeight != 0)
    {
        constraints = true;
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.SignedGrossWeight</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@objImposedConstraints.SignedGrossWeightObj.GrossWeight kg</span>
            </div>
        </div>

    }
    else if (objImposedConstraints.SignedGrossWeightObj.GrossWeight != null && (int)objImposedConstraints.SignedGrossWeightObj.GrossWeight == 0)
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.SignedGrossWeight</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">No signed constraint</span>
            </div>
        </div>

    }
    @if (objImposedConstraints.SignedAxleWeight.AxleWeight != null && (int)objImposedConstraints.SignedAxleWeight.AxleWeight != 0)
    {
        constraints = true;
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.SignedAxleWeight</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">@objImposedConstraints.SignedAxleWeight.AxleWeight kg</span>
            </div>
        </div>
        
    }
    else if (objImposedConstraints.SignedAxleWeight.AxleWeight != null && (int)objImposedConstraints.SignedAxleWeight.AxleWeight == 0)
    {
        <div class="row mt-1">
            <div class="col-4 pl-0">
                <label for="text55" class="label2">@Resources.Resource.SignedAxleWeight</label>
            </div>
            <div class="col-8 pl-0">
                <span id="text55" class="stHeading1 text1">No signed constraint</span>
            </div>
        </div>
        
    }

</div>
}
@if (!constraints) { 
}
@if (Convert.ToString(ViewBag.sectionType) == "underbridge")
{

    STP.Domain.Structures.ManageStructureICA objManageStructureICA = ViewBag.ManageStructureICA;
    <div class="row" id="icaMethods">
        <div class="col-12 colHelper1">
            <div class="cardSOA1">
                <h6 class="text-color3 stHeading1 m-0">Enabled ICA methods</h6>
            </div>
        </div>
        <div class="col-6 colHelper1">            
            <div class="row mt-3">
                <div class="col-7 pl-0">
                    <label for="text111" class="label2">@Resources.Resource.ICAMethod</label>
                </div>
                <div class="col-5 pl-0">
                    <span id="text111" class="stHeading1 text1">@Resources.Resource.WeightScreen</span>
                </div>
            </div>
            <div class="row mt-1">
                <div class="col-7 pl-0">
                    <label for="text222" class="label2">
                        @Resources.Resource.BandingLimit
                    </label>
                </div>
                <div class="col-5 pl-0">

                    @if ((objManageStructureICA.CustomWSBandLimitMin == null) && (objManageStructureICA.CustomWSBandLimitMax == null))
                    {
                        <span id="text222" class="stHeading1 text1">
                            @objManageStructureICA.DefaultWSBandLimitMin - @objManageStructureICA.DefaultWSBandLimitMax (default)
                        </span>
                    }
                    else
                    {
                        <span id="text222" class="stHeading1 text1">
                            @objManageStructureICA.CustomWSBandLimitMin - @objManageStructureICA.CustomWSBandLimitMax
                        </span>
                    }

                </div>
            </div>
            @if (1 == 1)
            {
                <div class="row mt-1">
                    <div class="col-7 pl-0">
                        <label for="text333" class="label2">@Resources.Resource.GrossWeight</label>
                    </div>
                    <div class="col-5 pl-0">

                        @if (objManageStructureICA.EnableGrossWeight == null)
                        {
                            ica = true;
                            <span id="text333" class="stHeading1 text1">
                                Not available (Disabled)
                            </span>
                        }
                        else if (objManageStructureICA.EnableGrossWeight == 1)
                        {
                            ica = true;
                            <span id="text333" class="stHeading1 text1">
                                Available (Enabled)
                            </span>

                        }
                        else
                        {
                            ica = true;
                            <span id="text333" class="stHeading1 text1">
                                Available (Disabled)
                            </span>
                        }

                    </div>
                </div>
            }
            @if (1 == 1)
            {
                <div class="row mt-1">
                    <div class="col-7 pl-0">
                        <label for="text444" class="label2">@Resources.Resource.AxleWeight</label>
                    </div>
                    <div class="col-5 pl-0">

                        @if (objManageStructureICA.EnableAxleWeight == null)
                        {
                            ica = true;
                            <span id="text444" class="stHeading1 text1">
                                Not available (Disabled)
                            </span>
                        }
                        else if (objManageStructureICA.EnableAxleWeight == 1)
                        {
                            ica = true;
                            <span id="text444" class="stHeading1 text1">
                                Available (Enabled)
                            </span>

                        }
                        else
                        {
                            ica = true;
                            <span id="text444" class="stHeading1 text1">
                                Available (Disabled)
                            </span>
                        }

                    </div>
                </div>
            }
            @if (1 == 1)
            {
                <div class="row mt-1">
                    <div class="col-7 pl-0">
                        <label for="text555" class="label2">@Resources.Resource.WeightOvrDst</label>
                    </div>
                    <div class="col-5 pl-0">
                        @if (objManageStructureICA.EnableWeightOverDist == null)
                        {
                            ica = true;
                            <span id="text555" class="stHeading1 text1">
                                Not available (Disabled)
                            </span>

                        }
                        else if (objManageStructureICA.EnableWeightOverDist == 1)
                        {
                            ica = true;
                            <span id="text555" class="stHeading1 text1">
                                Available (Enabled)
                            </span>

                        }
                        else
                        {
                            ica = true;
                            <span id="text555" class="stHeading1 text1">
                                Available (Disabled)
                            </span>
                        }

                    </div>
                </div>
            }
            @if (1 == 1)
            {
                <div class="row mt-1">
                    <div class="col-7 pl-0">
                        <label for="text1212" class="label2">@Resources.Resource.AWRScreen</label>
                    </div>
                    <div class="col-5 pl-0">

                        @if (objManageStructureICA.EnableAWR == null)
                        {
                            ica = true;
                            <span id="text1212" class="stHeading1 text1">
                                Not available (Disabled)
                            </span>

                        }
                        else if (objManageStructureICA.EnableAWR == 1)
                        {
                            ica = true;
                            <span id="text1212" class="stHeading1 text1">
                                Available (Enabled)
                            </span>

                        }
                        else
                        {
                            ica = true;
                            <span id="text1212" class="stHeading1 text1">
                                Available (Disabled)
                            </span>
                        }

                    </div>
                </div>
            }
        </div>
        <div class="col-6 colHelper1">
            
            <div class="row mt-3">
                <div class="col-7 pl-0">
                    <label for="text111" class="label2">@Resources.Resource.ICAMethod</label>
                </div>
                <div class="col-5 pl-0">
                    <span id="text111" class="stHeading1 text1">@Resources.Resource.SVScreen</span>
                </div>
            </div>
            @if (1 == 1)
            {
                <div class="row mt-1">
                    <div class="col-7 pl-0">
                        <label for="text222" class="label2">
                            @Resources.Resource.BandingLimit
                        </label>
                    </div>
                    <div class="col-5 pl-0">
                        @if ((objManageStructureICA.CustomSVBandLimitMin == null) && (objManageStructureICA.CustomSVBandLimitMax == null))
                        {
                            <span id="text222" class="stHeading1 text1">
                                @objManageStructureICA.DefaultSVBandLimitMin - @objManageStructureICA.DefaultSVBandLimitMax (default)
                            </span>
                        }
                        else
                        {
                            <span id="text222" class="stHeading1 text1">
                                @objManageStructureICA.CustomSVBandLimitMin - @objManageStructureICA.CustomSVBandLimitMax
                            </span>
                        }

                    </div>
                </div>
            }
            @if (1 == 1)
            {
                <div class="row mt-1">
                    <div class="col-7 pl-0">
                        <label for="text333" class="label2">@Resources.Resource.SV80</label>
                    </div>
                    <div class="col-5 pl-0">
                        @if (objManageStructureICA.EnableSV80 == null)
                        {
                            ica = true;
                            <span id="text333" class="stHeading1 text1">
                                Not available (Disabled)
                            </span>

                        }
                        else if (objManageStructureICA.EnableSV80 == 1)
                        {
                            ica = true;
                            <span id="text333" class="stHeading1 text1">
                                Available (Enabled)
                            </span>

                        }
                        else
                        {
                            ica = true;
                            <span id="text333" class="stHeading1 text1">
                                Available (Disabled)
                            </span>
                        }

                    </div>
                </div>
            }
            @if (1 == 1)
            {
                <div class="row mt-1">
                    <div class="col-7 pl-0">
                        <label for="text444" class="label2">@Resources.Resource.SV100</label>
                    </div>
                    <div class="col-5 pl-0">
                        @if (objManageStructureICA.EnableSV100 == null)
                        {
                            ica = true;
                            <span id="text444" class="stHeading1 text1">
                                Not available (Disabled)
                            </span>

                        }
                        else if (objManageStructureICA.EnableSV100 == 1)
                        {
                            ica = true;
                            <span id="text444" class="stHeading1 text1">
                                Available (Enabled)
                            </span>

                        }
                        else
                        {
                            ica = true;
                            <span id="text444" class="stHeading1 text1">
                                Available (Disabled)
                            </span>
                        }

                    </div>
                </div>
            }
            @if (1 == 1)
            {
                <div class="row mt-1">
                    <div class="col-7 pl-0">
                        <label for="text555" class="label2">@Resources.Resource.SV150</label>
                    </div>
                    <div class="col-5 pl-0">
                        @if (objManageStructureICA.EnableSV150 == null)
                        {
                            ica = true;
                            <span id="text555" class="stHeading1 text1">
                                Not available (Disabled)
                            </span>

                        }
                        else if (objManageStructureICA.EnableSV150 == 1)
                        {
                            ica = true;
                            <span id="text555" class="stHeading1 text1">
                                Available (Enabled)
                            </span>

                        }
                        else
                        {
                            ica = true;
                            <span id="text555" class="stHeading1 text1">
                                Available (Disabled)
                            </span>
                        }


                    </div>
                </div>
            }
            @if (1 == 1)
            {
                <div class="row mt-1">
                    <div class="col-7 pl-0">
                        <label for="text1212" class="label2">@Resources.Resource.SVTrain</label>
                    </div>
                    <div class="col-5 pl-0">
                        @if (objManageStructureICA.EnableSVTrain == null)
                        {
                            ica = true;
                            <span id="text1212" class="stHeading1 text1">
                                Not available (Disabled)
                            </span>

                        }
                        else if (objManageStructureICA.EnableSVTrain == 1)
                        {
                            ica = true;
                            <span id="text1212" class="stHeading1 text1">
                                Available (Enabled)
                            </span>

                        }
                        else
                        {
                            ica = true;
                            <span id="text1212" class="stHeading1 text1">
                                Available (Disabled)
                            </span>
                        }

                    </div>
                </div>
            }
        </div>
    </div>
    if (!ica)
    {
    }
}
@{
    List<STP.Domain.Structures.SvReserveFactors> objViewSVData = ViewBag.ViewSVData;
}
@if (objViewSVData.Count <= 0)
{

}
<div class="main-table" id="tableSVData">
    <div class="col-12 colHelper1 pl-3">
        <div class="cardSOA1">
            <h6 class="text-color3 stHeading1 m-0">SV data</h6>
        </div>
    </div>
    <table class="mt-1 cardSOA1 table-white-bg" style="background-color:white !important">
        <thead class="table-soa">
            <tr>
                @if (objViewSVData.Count <= 0)
                {
                    <th class="table-soa text-color3 stHeading1 m-0">
                        No SV Data
                    </th>

                }
                else
                {
                    <th class="table-soa text-color3 stHeading1 m-0"></th>
                    foreach (var items in objViewSVData)
                    {
                        string vehicleType = "";
                        switch (items.VehicleType)
                        {
                            case 340002:
                                vehicleType = "SV-80";
                                break;

                            case 340003:
                                vehicleType = "SV-100";
                                break;

                            case 340004:
                                vehicleType = "SV-150";
                                break;

                            case 340005:
                                vehicleType = "SV-TRAIN";
                                break;

                            case 340006:
                                vehicleType = "SV-TT";
                                break;
                        }
                        <th class="table-soa text-color3 stHeading1 m-0">@vehicleType</th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="table-soa stHeading1 text1">@Resources.Resource.WithLoad</td>
                @foreach (var items in objViewSVData)
                {
                    <td class="table-soa stHeading1 text1">@items.SVLiveLoad</td>
                }
            </tr>
            <tr>
                <td class="table-soa stHeading1 text1">@Resources.Resource.WithoutLoad</td>
                @foreach (var items in objViewSVData)
                {
                    <td class="table-soa stHeading1 text1">@items.SVNoLoad</td>
                }
            </tr>
        </tbody>
    </table>
</div>
