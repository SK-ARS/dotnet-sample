@using PagedList.Mvc
@model STP.Domain.Structures.DelegationList

@{

}

@{
    long arrId = Convert.ToInt64(ViewBag.arrangId);
    int orgId = Convert.ToInt32(ViewBag.OrgToId);

}

@Html.Hidden("OrgToId", orgId)


<body style="overflow-y: auto;" id="soa-structure-delgation">

    <div class="row mb-4">
        <div class="col-sm-12 col-md-6 col-lg-5 pr-0">
            <label class="text-normal">Delegation Arrangement Name  </label>
        </div>
        <div class="col-sm-12 col-md-6 col-lg-7 input-field">
           
            @Html.LabelFor(m => m.ArrangementName,": "+ Model.ArrangementName, htmlAttributes:
                   new { @class = "edit-normal" })
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-sm-12 col-md-6 col-lg-5 pr-0">
            <label class="text-normal">Organisation Name</label>
        </div>
        <div class="col-sm-12 col-md-6 col-lg-7 input-field">
            @Html.LabelFor(m => m.OrganisationName, ": " + Model.OrganisationName, htmlAttributes:
                    new { @class = "edit-normal" })
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-sm-12 col-md-6 col-lg-5 pr-0">
            <label class="text-normal">Contact Name</label>
        </div>
        <div class="col-sm-12 col-md-6 col-lg-7 input-field">
            @Html.LabelFor(m => m.ContactName, ": " + Model.ContactName, htmlAttributes:
                  new { @class = "edit-normal" })
        </div>
    </div>
    <div class="row mb-4">
        <div class="col-sm-12 col-md-6 col-lg-5 pr-0">
            <label class="text-normal" style="vertical-align: sub;">Allow Sub Delegation?</label>

        </div>
        <div class="col-sm-12 col-md-6 col-lg-7 input-field text-normal">
            @if (Model.AllowSubDelegation == 1)
            {
                @Html.LabelFor(m => m.AllowSubDelegation, ": " + "Yes", htmlAttributes: new { @class = "edit-normal" })
            }
            else
            {
                @Html.LabelFor(m => m.AllowSubDelegation, ": " + "No", htmlAttributes: new { @class = "edit-normal" })

            }
        </div>
    </div>
    <div class="row mb-4">
            <div class="col-sm-12 col-md-6 col-lg-5 pr-0">
                <label class="text-normal" style="vertical-align: sub;">
                    Copy Movements<br>Notifications
                    to Me?
                </label>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-7 input-field text-normal">
                @if (Model.RetainNotification == 1)
                {
                    @Html.LabelFor(m => m.RetainNotification, ": " + "Yes", htmlAttributes:new { @class = "edit-normal" })
                }
                else
                {
                    @Html.LabelFor(m => m.RetainNotification, ": " + "No", htmlAttributes:  new { @class = "edit-normal" })

                }
            </div>
        </div>
    <div class="row mb-4">
            <div class="col-sm-12 col-md-6 col-lg-5 pr-0">
                <label class="text-normal" style="vertical-align: sub;">
                    Receive Notifications
                    When<br>Delegation Arrangements fails?
                </label>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-7 input-field text-normal">
                <div class="col-sm-12 col-md-6 col-lg-7 input-field text-normal">
                    @if (Model.AcceptFailure == 1)
                    {
                        @Html.LabelFor(m => m.AcceptFailure, ": " + "Yes", htmlAttributes:
                         new { @class = "edit-normal" })
                    }
                    else
                    {
                        @Html.LabelFor(m => m.AcceptFailure, ": " + "No", htmlAttributes:
                         new { @class = "edit-normal" })

                    }
                </div>
            </div>
        </div>
    
</body>
