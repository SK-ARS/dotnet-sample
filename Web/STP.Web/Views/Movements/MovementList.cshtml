@using STP.Domain.MovementsAndNotifications.Movements
@{
    bool ISNotify = false;
    if (ViewBag.IsNotify != null)
    {
        ISNotify = ViewBag.IsNotify;
    }
    bool VR1Appl = false;
    if (ViewBag.VR1route != null)
    {
        VR1Appl = ViewBag.VR1route;
    }
    ViewBag.PageMenuName = (int)STP.Common.Enums.WebMenuEnum.MOVEMENTS;

    MovementsFilter objMovementFilter = new MovementsFilter();
    if (Session["g_SearchData"] != null)
    {
        objMovementFilter = (MovementsFilter)Session["g_SearchData"];
    }
    else
    {
        objMovementFilter.NeedsAttention = true;
    }
}
@Html.Hidden("IsNotify", ISNotify)
@Html.Hidden("VR1Appl", VR1Appl)
<div id="divforsofilter">

</div>

@if (ViewBag.MovementListForSO == true && ISNotify == false)
{

    <h4>
        Vehicle configuration from previous movement
    </h4>


}

@{
    bool NeedsAttentionFlag = false;
    int appType = 1;
    STP.Domain.MovementsAndNotifications.Movements.MovementsFilter objmovementFilt = new STP.Domain.MovementsAndNotifications.Movements.MovementsFilter();
    if (ViewBag.MovementFilter != null)
    {
        objmovementFilt = ViewBag.MovementFilter;
        NeedsAttentionFlag = objmovementFilt.NeedsAttention;
    }
    else
    {
        objmovementFilt.NeedsAttention = true;
        objmovementFilt.IncludeHistoric = true;
        NeedsAttentionFlag = true;
    }

    int SortOrgId = 0;
    if (ViewBag.OrgID != null)
    {
        SortOrgId = ViewBag.OrgID;
    }
    var sortOrder = ViewBag.SortOrder != null ? (int)ViewBag.SortOrder : 11;
    var sortType = ViewBag.SortType != null ? (int)ViewBag.SortType : 0;
}
@Html.Hidden("SortOrgId", SortOrgId)
@Html.Hidden("ApplicationType", appType)
@Html.Hidden("objMovementSearch", objmovementFilt)
@Html.Hidden("Logged_In", Session["Logged_In"])
@Html.Hidden("userTypeId", Session["userTypeId"])
@Html.Hidden("hfNeedsAttentionFlag", NeedsAttentionFlag)
<style>
    #filters.sidenav {
        padding-top: 0px;
    }

    #org_filter_btn .btn.btn-outline-primary:hover {
        color: white;
        background-color: rgba(39, 87, 149, 1);
    }

    #org_filter_btn .btn.btn-outline-primary:focus {
        color: white;
    }
</style>

<!DOCTYPE html>
<html lang="en">

<head>
</head>

<body style="overflow-y: auto;">
    <section id="banner">
        @{
            Html.RenderAction("HotNews", "Information");
        }
        <div class="container-fluid" id="banner-container">
            <div>
                <div class="header">

                    <div id="outsideFilterMoveInbox">


                        @*@using (Ajax.BeginForm("SetSearchData", "Movements", FormMethod.Post, new AjaxOptions { OnFailure = "OnFailure", OnBegin = "OnBegin" }, new { @id = "outsideFilterMoveInbox" }))
                            {*@
                        <div class="row align-items-center">
                            <div class="col-lg-4 col-md-4 col-sm-12" style="display:flex;">
                                <div class="button mr-0">
                                    <button class="btn btn-outline-primary btn-normal" type="button" aria-pressed="true" id="PlanMovement">
                                        NEW MOVEMENT
                                    </button>
                                </div>
                                <div class="button mr-0">
                                    <div class="pb-2">
                                        <button class="validationmsg dropdwon_new folder-action" id="movements" role="button" data-bs-toggle="dropdown" aria-expanded="false"
                                                style="width: 14rem;padding: 0.2rem 0rem;">
                                            Select Action
                                        </button>
                                        <ul class="dropdown-menu plan_mom_drop" aria-labelledby="movements" style="min-width:243px;">
                                            <li><a class="edit-normal" id="btnRemoveFromFolder" href="#">Remove From Folder</a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-3 col-md-3 col-sm-6">
                                <div class="title">
                                    MOVEMENTS
                                </div>
                            </div>

                            <div class="col-lg-3 col-md-3 col-sm-12">
                                <div id="table-head" class="align-items-center">
                                    <span class="details mt-2 pl-2 pr-3">
                                        ESDAL Reference No
                                    </span>
                                    <input class="text-highlight mr-r1 txt-ml-esdal-ref-search" id="ESDALReference" type="text" autocomplete="off" name="ESDALReference" aria-label="ESDALReference">
                                    <span>
                                        <img src="~/Content/assets/images/search-icon.svg" width="20">
                                    </span>
                                </div>
                            </div>
                            <div class="col-lg-2 col-md-2 col-sm-12">
                                <div id="table-head" class="align-items-center justify-content-evenly">
                                    <span class="details mt-2 pl-2">
                                        Show movements<br>that need attention
                                    </span>
                                    @{
                                        var isChecked = objMovementFilter != null ? objMovementFilter.NeedsAttention : false;
                                    }
                                    <label class="switch">
                                        <input type="checkbox" @(isChecked ? "checked" : "") id="NeedsAttention" name="NeedsAttention" value="true">
                                        <div class="slider round">
                                            <!--ADDED HTML -->
                                            <span class="on">ON</span>
                                            <span class="off">OFF</span>
                                            <!--END-->
                                        </div>
                                    </label>
                                </div>
                            </div>

                            <div class="col-lg-2 col-md-2" style="display:none">
                                <div class="esdal3mov-check">
                                    <input type="checkbox" value="" id="esdal3MovmentsChk">
                                    <label class="form-check-label details mt-2 pl-2" for="esdal3MovmentsChk">
                                        Show ESDAL 3 movements
                                    </label>
                                </div>
                            </div>
                        </div>
                        @*}*@
                    </div>
                </div>
                <div class="Header_text" style="display:none;">
                    <p>
                        The following filters are automatically applied to your movement list - <span id="spn_move_filters"></span>, Folder matches '<span id="folder_name"></span>',
                        <br /><span id="filter_sort_order"></span>
                        <br /><b>
                            Any movements which have not been allocated an ESDAL<sup>4</sup> Reference will be shown at the very top of the list.
                            <br />NOTES: You can alter these using the filter options at the bottom of the page if you wish.
                        </b>
                    </p>
                </div>
            </div>

            <div class="movement-inbox">
                @Html.Partial("_FolderManagement")

                <div class="div_so_movement flex-fill" style="overflow-x:auto;">
                    @{
                        switch (appType)
                        {
                            case 1:

                                if (ViewBag.VR1route == true)
                                {
                                    Html.RenderAction("SOMovementList", new { page = ViewBag.page, pageSize = ViewBag.pageSize, MovementListForSO = false, OrgID = ViewBag.OrgID, VR1route = ViewBag.VR1route, structureID = ViewBag.structureID, structureNm = ViewBag.StructureNm, ESRN = ViewBag.ESRN, IsNotify = ViewBag.IsNotify, IsSOvehicle = ViewBag.IsSOvehicle, IsSOroute = ViewBag.IsSOroute, IsNotifyRoute = ViewBag.IsNotifyRoute, sortType = ViewBag.sortType, sortOrder = ViewBag.sortOrder });
                                }
                                else
                                {
                                    Html.RenderAction("SOMovementList", new { page = ViewBag.page, pageSize = ViewBag.pageSize, MovementListForSO = ViewBag.MovementListForSO, showrtveh = ViewBag.showrtveh, OrgID = ViewBag.OrgID, VR1route = ViewBag.VR1route, structureID = ViewBag.structureID, structureNm = ViewBag.StructureNm, ESRN = ViewBag.ESRN, IsNotify = ViewBag.IsNotify, IsSOvehicle = ViewBag.IsSOvehicle, IsSOroute = ViewBag.IsSOroute, IsNotifyRoute = ViewBag.IsNotifyRoute, prevMovImport = ViewBag.PrevMovImport, sortType = ViewBag.sortType, sortOrder = ViewBag.sortOrder });
                                }
                                break;
                            default:
                                break;
                        }
                    }
                </div>

            </div>

        </div>

    </section>

    <!-- filter settings -->
    <div id="movementFilters" class="sidenav filter-sidenav so-movementlist-filter">
        <div class="row sidenav-header mt-3">
            <div class="col-11 text-center">
                <div class="text-normal-hyperlink mt-3" style="font-size: x-large;">
                    FILTER
                </div>
            </div>
            <div class="col-1 pl-0" style="position: none;">
                <a href="#" class="close-filter-icon-common" data-target="movementFilters" id="closeMovementFilters">&times;</a>
            </div>
        </div>
        <hr style="margin-top: 0;">
        <div class="sort-portal">
            <div class="filter-list" id="filter_haulier_movement">
                @using (Ajax.BeginForm("SetSearchData", "Movements", FormMethod.Post, new AjaxOptions { OnSuccess = "FilterSuccessHaulier", OnFailure = "OnFailure", OnBegin = "OnBegin" }, new { @id = "frmFilterMoveInbox", prevMovImport = ViewBag.PrevMovImport, }))
                {
                    Html.RenderAction("SOMovementFilter", new { IsNotify = ISNotify });
                    <input type="hidden" name="SortOrderValue" id="SortOrderValue" value="@sortOrder" />
                    <input type="hidden" name="SortTypeValue" id="SortTypeValue" value="@sortType" />

                    switch (appType)
                    {
                        case 1:
                            if (ViewBag.MovementListForSO == true)
                            {
                                var IsMovementListForSO = ViewBag.MovementListForSO;
                                Html.RenderAction("SOAdvancedSearch", new { MovementListForSO = IsMovementListForSO, ShowPrevSortRoute = ViewBag.showrtveh, planMovement = ViewBag.PlanMovement });

                            }
                            else
                            {
                                Html.RenderAction("SOAdvancedSearch", new { planMovement = ViewBag.PlanMovement });
                            }
                            break;
                        default:
                            break;
                    }

                    <div class="row pt-6 pl-0 pr-2" id="org_filter_btn">

                        <div class="col-lg-8 col-md-8 col-sm-12 filter-entry">
                            <!-- <div class="header mt-4"> -->
                            <div class="button mr-0 mb-2">
                                <button class="btn btn-outline-primary btn-normal" style="width:100%;" type="button" id="SearchHaulierList" role="button" aria-pressed="true">
                                    SEARCH
                                </button>
                            </div>
                            <!-- </div> -->
                        </div>
                        <div class="pl-0 col-lg-4 col-md-4 col-sm-12 filter-entry">
                            <!-- <div class="header mt-4"> -->
                            <div class="button mr-0 mb-2">
                                <button class="btn btn-outline-primary btn-normal" style="width: 101%; margin-left: 13px;" type="button" id="ClearHaulierAdvancedData" role="button" aria-pressed="true">
                                    CLEAR
                                </button>
                            </div>
                            <!-- </div> -->
                        </div>
                    </div>
                }
            </div>


        </div>
    </div>
    <!-- end of filter settings -->

    <script src="/Scripts/Movements/MovementList.js?V@(Session["ProjectVersion"])"></script>
    <script src="~/Scripts/Movements/jQuery.hauliertfilter.js?V@(Session["ProjectVersion"])"></script>
    <script src="~/Scripts/Movements/SOMovementList.js?V@(Session["ProjectVersion"])"></script>
    <script src="~/Scripts/Movements/SOAdvancedSearch.js?V@(Session["ProjectVersion"])"></script>
    <script src="~/Scripts/Movements/planMovement.js?V@(Session["ProjectVersion"])"></script>
    <script src="~/Scripts/Movements/planCandidate.js?V@(Session["ProjectVersion"])"></script>
    <script src="~/Scripts/Movements/_MovementRouteVehicle.js?V@(Session["ProjectVersion"])"></script>
    <script src="~/Scripts/Movements/_MovementRouteVehicleAssignment.js?V@(Session["ProjectVersion"])"></script>
    <script src="~/Scripts/Movements/MovementCloneReviseRenotif.js?V@(Session["ProjectVersion"])"></script>
    <style>
        .folder-action {
            width: 14rem !important;
            padding: 0.2rem 0rem !important;
        }

            .folder-action::after {
                top: 0.25rem !important;
            }
    </style>

</body>

</html>
