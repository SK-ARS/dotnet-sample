@using STP.Domain.Routes;
@using STP.Domain.VehiclesAndFleets.Configuration;
@using STP.Domain.Workflow
@{
    var VehicleList = (List<AppVehicleConfigList>)ViewBag.MovementSelectedVehicles;
    var Routelist = (List<AppRouteList>)ViewBag.MovementRouteList;
    var RouteVehicleList = (List<MovementVehicleList>)ViewBag.RouteVehicleList;

    var RouteIdArr = Routelist.Select(x => x.RouteID).ToArray();
    var VehicleIdArr = VehicleList.Select(x => x.VehicleId).ToArray();
    var planMovePayLoad = new PlanMvmntPayLoad();
    if (ViewBag.PlanMovementPayload != null)
    {
        planMovePayLoad = (PlanMvmntPayLoad)ViewBag.PlanMovementPayload;
    }

    List<long> alreadyMappedVehicleIds = new List<long>();

    if (VehicleList != null && RouteVehicleList != null && RouteVehicleList.Count > 0)
    {

        var routeVehicleListWithVehicles = RouteVehicleList.Where(x => x.VehicleList != null && x.VehicleList.Any()).Select(x => x.VehicleList).ToList();
        foreach (var vehicleDetails in routeVehicleListWithVehicles)
        {
            foreach (var vehicle in vehicleDetails)
            {
                var existingVehicle = VehicleList.FirstOrDefault(x => x.VehicleId == vehicle.VehicleId);
                if (existingVehicle != null)
                {
                    alreadyMappedVehicleIds.Add(existingVehicle.VehicleId);
                }
            }
        }
    }
}
<style>
    .divcls {
        width: 100%;
        min-height: 128px;
        border-radius: 6px;
    }

    .route-details-drag {
        color: rgba(39, 87, 149, 1) !important;
    }

        .route-details-drag .route-part {
            display: inline-block;
            padding: 5px 8px;
            font-weight: 600;
            background: rgba(39, 87, 149, 1) !important;
            color: #fff !important;
            border-radius: 3px;
            margin-right: 10px;
            font-size: 14px;
        }
    .drop_vehicle.drop-vehicle-highlight {
        border: 3px dashed rgba(39, 87, 149, 1);
        background: #f1f1f1;
    }
</style>
@if (VehicleList != null && RouteVehicleList != null && RouteVehicleList.Count > 0)
{
    <span class="title mb-2" style="display: block;">Drag the Vehicle and Drop to the Highlighted location</span>
 }
<div class="d-flex">
    <div class="pr-4">
        <div id="content-header" style="position: sticky; top: 40px;">
            @foreach (var vehicle in VehicleList.Where(x => x.ParentVehicleId == 0))
            {
                var isVehicleAlreadyMapped = true;// alreadyMappedVehicleIds.Any(x => x == vehicle.VehicleId);
                <div class="pb-2 mr-r1" id="@vehicle.VehicleId">
                    @if (isVehicleAlreadyMapped)
                    {
                        <div class="filter_button py-2 divdrag1 noDrop drag_vehicle"
                             id="drag_@vehicle.VehicleId" draggable="true"
                             alt="Drag the Vehicle and Drop to the Highlighted location" title="Drag the Vehicle and Drop to the Highlighted location">
                            <div class="d-flex justify-content-center">
                                @foreach (var image in vehicle.VehicleNameList)
                                {
                                    var ImageName = "~/Content/images/Common/MasterPage/componet_icons/" + image + "_small.png";
                                    <img class="pr-2"
                                         src="@Url.Content(ImageName)"
                                         alt="vehicle-2" draggable="false">}

                            </div>
                            <span class="details">@vehicle.VehicleName</span>
                        </div>}
                </div>}



        </div>
    </div>
    <div class="flex-grow-1">
        @if (RouteVehicleList != null && RouteVehicleList.Count > 0)
        {
            foreach (var route in RouteVehicleList.OrderBy(x => x.RoutePartNo))
            {

                <div class="row ml-1 mr-1" style="border: 1px solid rgba(39, 87, 149, 1); border-radius:8px; padding:10px 0; margin-bottom:10px;">

                    <div class="col-lg-5 col-md-5">
                        <div class="mb-2 route-details-drag">
                            <span class="route-part"> ROUTE PART @route.RoutePartNo</span>  @route.RoutePartName
                        </div>
                        <div class="row mb-2">
                            <div class="col-sm-12 col-md-2 col-lg-1 col-xs-4 pr-0">
                                <label class="text-normal">Start</label>
                            </div>
                            <div class="col-sm-12 col-md-8 col-lg-11 col-xs-7 pr-0 d-flex">
                                <img class="mr-2" src="~/Content/assets/Icons/map-startpoint.svg" width="15" alt="Start Point">
                                <input class="edit-normal pl-0 pr-0" type="text" name="from"
                                       value="@route.FromAddress">
                            </div>
                        </div>

                        <div class="row mb-2">
                            <div class="col-sm-12 col-md-2 col-lg-1 pr-0">
                                <label class="text-normal">End</label>
                            </div>
                            <div class="col-sm-12 col-md-8 col-lg-11 pr-0 d-flex">
                                <img class="mr-2" src="~/Content/assets/Icons/map-endpoint.svg" width="15" alt="End Point">
                                <input class="edit-normal pl-0 pr-0" type="text" name="from"
                                       value="@route.ToAddress">
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-7 col-md-7"
                         id="content-header">
                        <div class="row divcls ml-1 drop_vehicle" id="route_@route.RoutePartId"
                             style="background-color: #f1f0e8" ; width="100%">

                            @{ int i = 1;
                                foreach (var item in route.VehicleList)
                                {
                                    long vehicleId = item.ParentVehicleId == 0 ? item.VehicleId : item.ParentVehicleId;
                                    var vehicle = VehicleList.FirstOrDefault(x => x.VehicleId == vehicleId);//VehicleNameList is not available in mapped list
                                    var routePartIdVehicleId = route.RoutePartId + "_" + vehicle.VehicleId;
                                    <div class=" filter_button pt-3 pb-3 divdrag1 noDrop vchl-width drag_start" id="@routePartIdVehicleId"
                                         draggable="false" data-id="@vehicle.VehicleId"
                                         style="margin: 10px; position: relative; background: #fff;">
                                        <div class="d-flex justify-content-center">
                                            @foreach (var image in vehicle.VehicleNameList)
                                            {
                                                var ImageName = "~/Content/images/Common/MasterPage/componet_icons/" + image + "_small.png";
                                                <img class="pr-2 mt-2"
                                                     src="@Url.Content(ImageName)"
                                                     alt="vehicle-2" draggable="false"><br>}

                                        </div>
                                        <span class="details">@vehicle.VehicleName</span>
                                        <img class="removedraggedvehicle" id="clsID@(i)" src="/Content/assets/images/Group 16.svg" width="20" alt="closeIcon"
                                             data-vehiclecntr='@routePartIdVehicleId'>
                                    </div> i++;
                                } }
                        </div>
                    </div>
                </div>}
        }

    </div>
</div>

<style>
    #content-header .details {
        vertical-align: bottom;
        font-size: 16px !important;
        font-family: lato_bold !important;
    }
</style>
@{
    @Html.Hidden("hf_RouteIdArray", Html.Raw(Json.Encode(RouteIdArr)))
    @Html.Hidden("hf_AlreadyMappedVehicleIds", Html.Raw(Json.Encode(alreadyMappedVehicleIds)))
    @Html.Hidden("hf_VehicleIdArr", Html.Raw(Json.Encode(VehicleIdArr)))
    @Html.Hidden("hf_IsNotif", planMovePayLoad.IsNotif)
    @Html.Hidden("hf_IsSupplimentarySaved", planMovePayLoad.IsSupplimentarySaved)
}