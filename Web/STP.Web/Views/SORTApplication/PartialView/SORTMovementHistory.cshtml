
@using PagedList.Mvc
@model PagedList.IPagedList<STP.Domain.MovementsAndNotifications.Movements.MovementHistory>
@{ int listCount = 0;
    listCount = (int)Session["PageSize"];
}
@{
    var pageNum = ViewBag.page;
    int pageSize = 10;
    if (ViewBag.pageSize != null)
    {
        pageSize = ViewBag.pageSize;
    }
}
@{
    var sortOrder = ViewBag.SortOrder != null ? (int)ViewBag.SortOrder : 1;//date
    var sortType = ViewBag.SortType != null ? (int)ViewBag.SortType : 1;//desc
}
@Html.Hidden("sortOrder", sortOrder)
@Html.Hidden("sortType", sortType)
@*@Html.Hidden("Ver_No", Ver_No)*@
<!--main-content -->
@*<section id="banner">
    <div class="container-fluid" id="banner-container">
        <div id="vehicles">*@
@*<div id="sort-menu-list">
        <div class="row">
            <div class="column">
                <div class="card">
                    <span class="text-normal-hyperlink">Application details</span>
                </div>
            </div>
            <div class="column">
                <div class="card active-card">
                    <span class="text-normal-hyperlink">History</span>
                </div>
            </div>
        </div>
    </div>*@
@*<div class="main-sort-content" style="background-color: white;">*@
@*<div class="main-title">
        <span class="edit-normal"> SGRE/2 - </span>
        <span class="text-normal"> SO - Agreed redeclared - History</span>
    </div>*@
@*@{
        var sortOrder = ViewBag.SortOrder != null ? (int)ViewBag.SortOrder : 1;//date
        var sortType = ViewBag.SortType != null ? (int)ViewBag.SortType : 1;//desc
    }*@
<input type="hidden" name="sortOrder" id="SortOrderValue" value="@sortOrder" />
<input type="hidden" name="sortType" id="SortTypeValue" value="@sortType" />
<div class="row pt-4">
    <div class="main-table movements" id="distribution-status">

        <table class="esdal-table">

            <thead>
                <tr>
                    <th style="border-radius: 40px 0 0 0;" id="table-head">
                        <span class="sorting spnSortIconItem @GetSortDefaultClass(sortType,sortOrder,1)" data-action="HistorySort" data-sortval="1"> Revision no.</span>
                        <span>
                            @*<img src="/Content/assets/images/down-chevlon.svg" width="15" height="6">*@
                        </span>
                    </th>
                    <th style="width: 7%;">
                        
                        <span class="sorting spnSortIconItem @GetSortDefaultClass(sortType,sortOrder,3)" data-action="HistorySort" data-sortval="3"> Version no.</span>
                    </th>
                    <th style="width: 15%;">
                        <span class="sorting spnSortIconItem @GetSortDefaultClass(sortType,sortOrder,2)" data-action="HistorySort" data-sortval="2">  Date & time</span>

                    </th>
                    <th>Events</th>
                    <th style="width: 30%;">Details</th>
                    <th style="background-color: rgba(39, 87, 149, 1) !important;">Route created from</th>
                </tr>
            </thead>

            @foreach (var item in Model)
            {
                <tr>
                    <td class="text-color1">@item.LatestRevisionNumber</td>
                    <td class="text-color1">
                        @if (item.NotificationVersionNumber != 0)
                        {
                            @item.NotificationVersionNumber
                        }
                    </td>
                    <td class="text-color1">@item.NotificationDate</td>
                    <td class="text-color1">@item.ActionType</td>
                    <td class="text-color1">@item.Description</td>
                    <td class="text-color1">Haulier Version</td>
                </tr>
            }
            @if (Model.Count == 0)
            {
                <tr>
                    <td colspan="6" style="text-align:center">
                        <span class="error" style="color:red;">@Resources.Resource.NoRecordFound</span>
                    </td>
                </tr>
            }


        </table>
    </div>
</div>
@if (Model.Count != 0)
{
    <div class="row pagination-container-new" id="sortMovHistPagination">
        <div class="col-lg-3">
            @if (Model.TotalItemCount > 0)
            {
                <div class="text-color2 total-records-number">
                    Total number of records : @Model.TotalItemCount
                </div>
                @Html.Hidden("TotalPages", Model.PageCount)}
        </div>
        if (listCount < @ViewBag.TotalCount)
        {
        <div class="col-lg-4 text-center">
            <div class="table-pagination" id="SORTHistory">
                @Html.PagedListPager(Model, page => Url.Action("SORTMovementHistory",
                            new
                            {
                                page,
                                B7vy6imTleYsMr6Nlv7VQ =
                                             STP.Web.Helpers.EncryptionUtility.Encrypt(
                                             "&Haul_num=" + ViewBag.Haul_num +
                                             "&esdalref=" + ViewBag.esdalref +
                                             "&versionno=" + ViewBag.versionno +
                                              "&sortOrder=" + sortOrder +
                                              "&sortType=" + sortType +
                                             "&projId=" + ViewBag.projId)
                            }
                                             ), new PagedListRenderOptions
                            {
                                DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                                DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                                LinkToPreviousPageFormat = "<img src='/Content/assets/images/left-chevlon.svg' width='10'>",
                                LinkToNextPageFormat = "<img src='/Content/assets/images/right-chevlon.svg' width='10'>",
                                DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                                DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                                MaximumPageNumbersToDisplay = 3,
                                DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                                EllipsesFormat = "...",
                                LinkToFirstPageFormat = "<div style='position:absolute;'><img src='/Content/assets/images/left-chevlon.svg' width='10'><img src='/Content/assets/images/left-chevlon.svg' width='10'></div>",
                                LinkToLastPageFormat = "<div style='position:absolute;'><img src='/Content/assets/images/right-chevlon.svg' width='10'><img src='/Content/assets/images/right-chevlon.svg' width='10'></div>"
                            })
            </div>
        </div> }

        @if (Model.TotalItemCount > 10)
        {
            <div class="col-lg-3 col-md-3 col-sm-12 text-normal pr-0 absolute SORTInbox-Pag" style="padding-left: 5%;">
                Number of items to display per page
                <select class="form-select mb-3 sort-history-page-change" style="width:inherit !important;"  aria-label=".form-select-lg example" id="pageSizeSelect">
                    <option val="10" @(pageSize == 10 ? "selected" : "")>10</option>
                    <option val="20" @(pageSize == 20 ? "selected" : "")>20</option>
                    <option val="50" @(pageSize == 50 ? "selected" : "")>50</option>
                    <option val="100" @(pageSize == 100 ? "selected" : "")>100</option>
                </select>
            </div>
        }
    </div>
}
@{
    string GetSortDefaultClass(int sortTypeVal, int sortOrderVal, int valToCheck)
    {
        var sortClass = ""; //0-asc, 1-desc ,
        if (sortOrderVal == valToCheck)
        {
            sortClass = sortTypeVal == 1 ? "sorting_desc" : "sorting_asc";
        }
        return sortClass;
    }
}
<script src="~/Scripts/Application/JQuery.SORTMovements-1.0.2.js"></script>
<script src="~/Scripts/SORTApplication/SORTListMovemnets.js"></script>
