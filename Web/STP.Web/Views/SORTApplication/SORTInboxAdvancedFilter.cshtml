@model STP.Domain.MovementsAndNotifications.Movements.SortAdvancedMovementFilter
<style>
    #viewSORTAdvHaulier span {
        color: #5C5C5C;
        font-size: 15px;
    }

    #viewSORTAdvHaulier .edit-normal {
        padding-left: 0.5rem;
    } 
</style>
@Html.HiddenFor(m => m.FolderId, new { @id = "FolderID" })
<div class="mt-4 mb-4 filters"  data-targetid="viewSORTAdvHaulier" style="border: none; width: auto !important;">  
    <div id="table-head" >
        <div class="col-10 col-md-10 col-sm-10">
            <span>
                Advanced Search
            </span>
        </div>
        <div class="col-2 col-md-2 col-sm-2 pl-3">
            <img id="chevlon-up-icon2" class="chevlon-up-icon" src="~/Content/assets/images/up-chevlon-filter.svg" width="15"
                 style="display: none;">
            <img id="chevlon-down-icon2" class="chevlon-down-icon" src="~/Content/assets/images/down-chevlon-filter.svg" width="15"
                 style="display: block">
        </div>
    </div>
</div>
<div id="viewSORTAdvHaulier" class="pl-4 viewSORTAdvHaulier" style="display: none;">
    @if (ViewBag.IsPrevtMovementsVehicleRoute == false && ViewBag.IsPrevtMovementsVehicle == false)
    {
        <div class="row pb-3">
            <div class="col-lg-3 col-sm-4 col-md-4 text-normal">
                <span>Job Reference</span>
            </div>
            <div class="col-lg-6 col-sm-7 col-md-7 pr-0 pl-0">
                <div class="pr-0 pl-0 mr-0 ml-0 mb-0 input-field">
                    @Html.TextBoxFor(m => m.JobReference, new { @class = "edit-normal", placeholder = "Job Reference" })
                </div>
            </div>
        </div>
    }
    @if (ViewBag.IsPrevtMovementsVehicleRoute == true || ViewBag.IsPrevtMovementsVehicle == true)
    {
        <div class="row pb-3">
            <div class="col-lg-3 col-sm-4 col-md-4 text-normal">
                <span>ESDAL Reference</span>
            </div>
            <div class="col-lg-6 col-sm-7 col-md-7 pr-0 pl-0">
                <div class="pr-0 pl-0 mr-0 ml-0 mb-0 input-field">
                    @Html.TextBoxFor(m => m.ESDALReferenceNumber, new { @class = "edit-normal", placeholder = "ESDAL Reference" })
                </div>
            </div>
        </div>
        <div class="row pb-3">
            <div class="col-lg-3 col-sm-4 col-md-4 text-normal">
                <span>Haulier Name</span>
            </div>
            <div class="col-lg-6 col-sm-7 col-md-7 pr-0 pl-0">
                <div class="pr-0 pl-0 mr-0 ml-0 mb-0 input-field">
                    @Html.TextBoxFor(m => m.HaulierName, new { @class = "edit-normal", placeholder = "Haulier Name" })
                </div>
            </div>
        </div>
    }
    <div class="row pb-3">
        <div class="col-lg-3 col-sm-4 col-md-4 text-normal">
            <span>Special Order</span>
        </div>
        <div class="col-lg-6 col-sm-7 col-md-7 pr-0 pl-0">
            <div class="pr-0 pl-0 mr-0 ml-0 mb-0 input-field">
                @Html.TextBoxFor(m => m.SONum, new { @class = "edit-normal", placeholder = "Special Order" })
            </div>
        </div>
    </div>

    @if (ViewBag.IsPrevtMovementsVehicleRoute == false && ViewBag.IsPrevtMovementsVehicle == false)
    {
        <div class="row pb-3">
            <div class="col-lg-3 col-sm-4 col-md-4 text-normal">
                <span>VR1 number</span>
            </div>
            <div class="col-lg-6 col-sm-7 col-md-7 pr-0 pl-0">
                <div class="pr-0 pl-0 mr-0 ml-0 mb-0 input-field">
                    @Html.TextBoxFor(m => m.VRNum, new { @class = "edit-normal", placeholder = "VR1 Number" })
                </div>
            </div>
        </div>

    }
    <div class="row pb-3">
        <div class="col-lg-3 col-sm-4 col-md-4 text-normal">
            <span>Keyword</span>
        </div>
        <div class="col-lg-6 col-sm-7 col-md-7 pr-0 pl-0">
            <div class="pr-0 pl-0 mr-0 ml-0 mb-0 input-field">
                @Html.TextBoxFor(m => m.Keywords, new { @class = "edit-normal", placeholder = "Keyword" })
            </div>
        </div>
    </div>
    <div class="row pb-3">
        <div class="col-lg-3 col-sm-4 col-md-4 text-normal">
            <span>Load Details</span>
        </div>
        <div class="col-lg-6 col-sm-7 col-md-7 pr-0 pl-0">
            <div class="pr-0 pl-0 mr-0 ml-0 mb-0 input-field">
                @Html.TextBoxFor(m => m.LoadDetails, new { @class = "edit-normal", placeholder = "Load Details" })
            </div>
        </div>
    </div>
    <div class="row pb-3">
        <div class="col-lg-3 col-sm-4 col-md-4 text-normal">
            <span>Start Point</span>
        </div>
        <div class="col-lg-6 col-sm-7 col-md-7 pr-0 pl-0">
            <div class="d-flex justify-content-start">
                <div class="mr-2 input-field d-flex" style="flex :1 100%" ;>
                    @Html.TextBoxFor(m => m.StartPoint, new { @class = "edit-normal", placeholder = "Start Point" })
                </div>
                <div class="d-flex">
                    @Html.DropDownListFor(model => model.LogicOpr, new List<SelectListItem>
                     {
                        new SelectListItem{ Text="AND", Value = "1" },
                        new SelectListItem{ Text="OR", Value = "2" },

                     }, "-Select-", new { @class = "form-select mini-select ml-2", @style = "font-size:13px;" })
                    </div>
                </div>
            </div>
        </div>
    <div class="row pb-3">
        <div class="col-lg-3 col-sm-4 col-md-4 text-normal">
            <span>End Point</span>
        </div>
        
        <div class="col-lg-6 col-sm-7 col-md-7 pr-0 pl-0">
            <div class="pr-0 pl-0 mr-0 ml-0 mb-0 input-field">
                @Html.TextBoxFor(m => m.EndPoint, new { @class = "edit-normal", placeholder = "End Point" })
            </div>
        </div>
           
        </div>

    @if (ViewBag.IsPrevtMovementsVehicleRoute == false && ViewBag.IsPrevtMovementsVehicle == false)
    {
        <div class="row pb-3 pt-2">
            <div class="col-lg-3 col-sm-5 col-md-5 text-normal">
                <span>Application Type</span>
            </div>
            <div class="col-lg-4 col-sm-4 col-md-4 mr-0 pr-0">
                @Html.DropDownListFor(m => m.ApplicationType, new List<SelectListItem>
               { new SelectListItem{Text="Special order", Value="1"},
               new SelectListItem{Text="VR 1", Value="2"}}, "-------Select-------", new { @class = "form-select mb-3 mr-0 mb-0" })
            </div>
            <div class="d-flex col-lg-5 cpl-md-3 sm-sm-3">
                <div class="d-flex ml-0">
                    @*@Html.TextBox("GrossWeight", null, new { @class = "isnumeric edit-normal", @placeholder = "Gross weight" })
                        <div class="text-normal pt-1 pl-1">kg</div>*@
                </div>
            </div>
        </div>
    }


    <div id="VehicleFilterDiv" class="mb-3">
        @Html.Hidden("QueryString")
        <div class="row pb-3 pt-2 VehicleFilter" id="VehicleFilterDataSORT">
            <div class="col-lg-3 col-sm-3 col-md-3">
                @Html.DropDownList("VehicleDimensionCount", null, new { @class = "form-select measure-dropdown Sort-VehicleDimension" })
            </div>
            <div class="col-lg-9 col-sm-9 col-md-9 mr-0">
                <div class="d-flex justify-content-between">
                    @Html.DropDownList("OperatorCount", null, new { @class = "form-select mb-3 mr-0 mb-0 Sort-OperatorCount", @style = "overflow: scroll;"})

                    <div class="d-flex ml-2">
                        @Html.TextBox("gross_weight_max_kg", null, new { @class = "isnumeric text-decorate edit-normal vehicletextbox" })
                        <span class="text-normal pt-1 pl-1 gross_weightUnit">kg</span>
                    </div>
                    <div class="text-normal pl-2 pr-2 pt-1 gross_weights1" style="display: none !important;">
                        <span>&</span>
                    </div>
                    <div class="d-flex pl-0 gross_weights1" style="display: none !important;">
                        @Html.TextBox("gross_weight_max_kg1", null, new { @class = "isnumeric text-decorate edit-normal gross_weights1 vehicletextbox1" })
                        <span class="text-normal pt-1 pl-1 gross_weights1 gross_weights1Unit">kg</span>
                    </div>
                    <div class="d-flex">
                        <select id="sortoperator" class="form-select mini-select ml-2 vehicleOperator" style="font-size:13px;">
                            <option value="0">Select</option>
                            <option value="1">AND</option>
                            <option value="2">OR</option>
                        </select>
                    </div>
                    <div class="d-flex">
                        <span id="errormsg" class="error invalid-feedback" style="display:none;color:red;font-size:16px;">*</span>
                    </div>
                    <div class="d-flex">
                        <a href="javascript:void(0)" style="font-size: 19px;padding: 0px;" id="SORTAddOption" 
                           >+</a>
                        <a href="javascript:void(0)" style="font-size: 19px; padding: 0px; display: none;" id="SORTRemoveOption">Ã—</a>
                    </div>
                </div>
            </div>
        </div>
    </div>    

    <div class="row">
        <div class="col-lg-12 col-sm-12 col-md-12 col-xs-12">
        </div>
    </div>
</div>
<div id="div_normal_hidden"></div>

