
@using PagedList.Mvc
@using STP.Domain.SecurityAndUsers
@using STP.Domain.MovementsAndNotifications.Movements
@using STP.Common.EncryptDecrypt
@model PagedList.IPagedList<STP.Domain.MovementsAndNotifications.Movements.MovementsInbox>
@{
    int pageNum = 10;
    int str_id = 0;
    string str_ESRN = "", str_nm = "";

    if (ViewBag.pageSize != null)
    {
        pageNum = ViewBag.pageSize;

    }
    str_id = ViewBag.structureID;
    str_ESRN = ViewBag.ESRN;
    str_nm = ViewBag.StructureNm;

    UserInfo ObjUserInfo = (UserInfo)Session["UserInfo"];

    var objMovementsInboxFilter = (MovementsInboxFilter)ViewBag.V_objMovementsInboxFilter;//Session["g_moveInboxFilter"];

}
@{

    bool createSuccess = false;
    bool setpreference = false;
    if (ViewBag.saveMsg != null && ViewBag.saveMsg == "1")
    {
        createSuccess = true;
    }

    if (ViewBag.SetPreferenceMessage != null && ViewBag.SetPreferenceMessage == "1")
    {
        setpreference = true;
    }


}
@Html.Hidden("CreateAlert", createSuccess)
@Html.Hidden("SetPreferenceMessage", setpreference)
@Html.Hidden("Logged_In", Session["Logged_In"])
@Html.Hidden("userTypeId", Session["userTypeId"])

<body style="overflow-y: auto;" id="helpdesk">
    <section id="banner">
        <div class="container-fluid" id="banner-container">
            <div id="main">
                @{
                    Html.RenderAction("News", "Information");
                }

            </div>
            @*<div id="banner-scetion-2">
            <div>
                <div class="row">
                    <div class="col-lg-11 col-md-11 col-sm-11 table-heading">
                        Most Recent ‘Imminent’ or ‘Unopened by Organisation’ Movements
                    </div>

                </div>
            </div>
            <div class="main-table" id="portal-table">
                <table>
                    <thead>
                        <tr>
                            <th style="padding-left:25px">Viewed</th>
                            <th>ESDAL Reference</th>
                            <th>Type</th>
                            <th>Message Type</th>
                            <th>Status</th>
                            <th>Movement Date</th>
                            <th>Received</th>
                            <th>Organisation</th>
                            <th>Suitability</th>
                        </tr>
                    </thead>
                    @if (Model.Count > 0)
                    {
                        foreach (var item in Model)
                        {
                <tr>
                    <td class="text-color1">
                        @if (item.IsUnopened == 1)
                        {
                            if (ObjUserInfo.UserId == item.UserId)
                            {
                                <img src="~/Content/assets/Icons/unopened.svg" title="Unopened by me" width="25">
                            }
                            else
                            {
                                <img src="~/Content/assets/Icons/unopened.svg" title="Unopened by organisation" width="25">
                            }
                        }
                        else
                        {
                            if (ObjUserInfo.UserId == item.UserId)
                            {
                                <img src="~/Content/assets/images/view-icon.svg" title="Opened by user" width="25">
                            }
                            else
                            {
                                <img src="~/Content/assets/images/view-icon.svg" title="Opened by organisation" width="25">
                            }
                        }
                    </td>
                    <td class="text-color1">@item.ESDALReference</td>
                    <td class="text-color1">@item.Type</td>
                    <td class="text-color2">
                        @if (item.MessageType == "NE Notification" || item.MessageType == "NE Renotification")
                        {
                            <a href="@Url.Action("NE_Notification", "NENNotification", new { NEN_ID = MD5EncryptDecrypt.EncryptDetails(Convert.ToString(item.NENId)), Notificationid = MD5EncryptDecrypt.EncryptDetails(Convert.ToString(item.NotificationId)), esdal_ref = MD5EncryptDecrypt.EncryptDetails(item.ESDALReference), route = MD5EncryptDecrypt.EncryptDetails(item.MessageType), inboxId = MD5EncryptDecrypt.EncryptDetails(Convert.ToString(item.InboxItemId)), inboxItemStat = MD5EncryptDecrypt.EncryptDetails(Convert.ToString(item.InboxItemStatus)) })" class="text-decoration-link">@item.MessageType</a>
                        }


                        else
                        {
                            if (item.MessageType == "NE agreed notification")  //message type changed for the RM#10753
                            {
                                <a href="@Url.Action("AuthorizeMovementGeneral", "Movements", new { Notificationid = MD5EncryptDecrypt.EncryptDetails(Convert.ToString(item.NotificationId)), esdal_ref = MD5EncryptDecrypt.EncryptDetails(item.ESDALReference), route = MD5EncryptDecrypt.EncryptDetails(item.MessageType), inboxId = MD5EncryptDecrypt.EncryptDetails(Convert.ToString(item.InboxItemId)),FromInboxflag = 1 })" class="text-decoration-link">NE Notification</a>
                            }
                            else if (item.MessageType == "NE agreed renotification")
                            {
                                <a href="@Url.Action("AuthorizeMovementGeneral", "Movements", new { Notificationid = MD5EncryptDecrypt.EncryptDetails(Convert.ToString(item.NotificationId)), esdal_ref = MD5EncryptDecrypt.EncryptDetails(item.ESDALReference), route = MD5EncryptDecrypt.EncryptDetails(item.MessageType), inboxId = MD5EncryptDecrypt.EncryptDetails(Convert.ToString(item.InboxItemId)),FromInboxflag = 1 })" class="text-decoration-link">NE Renotification</a>
                            }
                            else
                            {
                                <a href="@Url.Action("AuthorizeMovementGeneral", "Movements", new { Notificationid = MD5EncryptDecrypt.EncryptDetails(Convert.ToString(item.NotificationId)), esdal_ref = MD5EncryptDecrypt.EncryptDetails(item.ESDALReference), route = MD5EncryptDecrypt.EncryptDetails(item.MessageType), inboxId = MD5EncryptDecrypt.EncryptDetails(Convert.ToString(item.InboxItemId)),FromInboxflag = 1 })" class="text-decoration-link">@item.MessageType</a>
                            }

                        }
                    </td>
                    <td class="text-color1" style="padding-left: 20px;">
                        @if (item.IsUnopened == 1)
                        {

                            if (item.UserAssignId == ObjUserInfo.UserId)
                            {
                                <img src="~/Content/assets/images/solid-user.svg" title="Assigned to me" width="25">
                            }
                        }
                        else
                        {

                            switch (Convert.ToInt32(item.Status))
                            {
                                case 313001:
                                    //delegation failure
                                    <img src="~/Content/assets/images/cancelled.svg"  title="Delegation failure" width="25">
                                    break;
                                case 313002:
                                    //withdrawn
                                    <img src="~/Content/assets/Icons/application-withdrawn.svg"  title="Withdrawn" width="25">
                                    break;
                                case 313003:
                                    //declined
                                    <img src="~/Content/assets/Icons/declined.svg"  title="Declined" width="25">
                                    break;
                                case 313004:
                                    //undecided
                                    <img src="~/Content/assets/images/user-setting.svg"  title="Unspecified" width="25">
                                    break;
                                case 313005:
                                    //accepted
                                    <img src="~/Content/assets/images/completed.svg"  title="Accepted" width="25">
                                    break;
                                case 313006:
                                    //rejected
                                    <img src="~/Content/assets/images/cancelled.svg"  title="Rejected" width="25">
                                    break;
                                case 313007:
                                    //unspecified
                                    <img src="~/Content/assets/images/user-setting.svg"  title="Unspecified" width="25">
                                    break;
                                default:
                                    break;
                            }
                            if (item.UserAssignId == ObjUserInfo.UserId)
                            {
                                <img src="~/Content/assets/images/solid-user.svg" title="Assigned to me" width="25">
                            }
                        }
                        @if (item.ImminentMovement == 1)
                        {
                            <img src="~/Content/assets/images/warning.svg" title="Imminent movement" width="25">
                        }
                    </td>

                    <td class="text-color1">@item.FromDate <span style="text-transform: lowercase">To</span> @item.ToDate </td>
                    <td class="text-color1">@item.ReceivedDate</td>
                    <td class="text-color1">@item.StructName</td>
                    @switch (item.ICAStatus)
                    {
                        case "277001":
                            break;
                        case "277002":
                            <td><img src="~/Content/assets/images/yes-icon.svg" width="20" title="Suitable"></td>
                            break;
                        case "277003":
                            <td class="text-color1" style="font-size: 30px; cursor: default;" title="Marginally suitable">?</td>
                            break;
                        case "277004":
                            <td><img src="~/Content/assets/images/no-icon.svg" width="20" title="Unsuitable"></td>
                            break;
                        case "277005":
                            <td class="text-color1" style="font-size: 30px; cursor: default; color: red; " title="Assessment not applicable">!</td>
                            break;
                    }
                </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5">
                                @Resources.Resource.NoRecord
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>*@
        </div>
    </section>
</body>
<script src="~/Scripts/jQueryPopUpWarningNew.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Home/SOA.js?V@(Session["ProjectVersion"])"></script>