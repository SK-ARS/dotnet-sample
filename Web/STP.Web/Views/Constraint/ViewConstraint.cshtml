@model STP.Domain.RoadNetwork.Constraint.ConstraintModel
@{
    string ConstraintID = Convert.ToString(ViewBag.ConstraintID);
    //string ViewConstraintsdetails = Convert.ToString(ViewBag.strViewConstraintsdetails);
    //bool chk_isdeleted = ViewBag.chk_Isdeleted;
    bool flageditmode = ViewBag.flageditmode;
    Layout = null;
}
@{
    bool isAdmin = false;
    int portalType = 0;
    long orgId = 0;
    if (Session["UserInfo"] != null)
    {
        var user = (STP.Domain.SecurityAndUsers.UserInfo)Session["UserInfo"];
        portalType = user.UserTypeId;
        orgId = user.OrganisationId;

        if (portalType == 696006 || user.IsAdmin == 1)
        {
            isAdmin = true;
        }
    }
}
@{
    int userTypeID = 0;
    if (Session["UserInfo"] != null)
    {
        var sessionValues = (STP.Domain.SecurityAndUsers.UserInfo)Session["UserInfo"];
        userTypeID = sessionValues.UserTypeId;
    }
    string constraintName = "";
    if (Model!=null && Model.DirectionName != "" && Model.DirectionName!=null)
    {
        constraintName = Convert.ToString(Model.DirectionName).Substring(0, 1).ToUpper() + Convert.ToString(Model.DirectionName).Substring(1).ToLower();

    }

   
}
@*@System.Web.Optimization.Scripts.Render("~/bundles/ViewConstraint")*@

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ViewConstraint</title>
</head>
<body style="overflow-y: auto;" id="soa-structure-detail">
    <style>
        #dialogue {
            height: auto !important;
        }
    </style>
    <div class="view-constraint">
        @Html.Hidden("ConstraintID", ConstraintID)
        @*@Html.Hidden("ViewConstraintsdetails", ViewConstraintsdetails)*@
        @Html.Hidden("flageditmode", flageditmode)



        <!--main content -->
        <section id="banner" class="map-icons" style="position: absolute; width: 50rem; height: auto;">


            <!-- <div id="mySidenav1" class="sidenav" style="position: absolute;left: 0;padding-top: 0;display: block;"> -->
            <div id="CloseViewCons" class="row">
                <div class="card" style="width: 30rem; height: auto; border-radius: 5px;">
                    <div class="row edit-normal pt-3 pr-2">
                        <span class="text-normal pr-2" style="font-family: lato_light;font-size:22px;">

                            @if (Model != null && Model.ConstraintId != 0)
                            {
                                <span>
                                    @Resources.Resource.View
                                    @Html.Raw(Convert.ToString(Model.DirectionName).Substring(0, 1).ToUpper() + Convert.ToString(Model.DirectionName).Substring(1).ToLower())
                                    @Resources.Resource.Constraint
                                    @Html.DisplayFor(model => model.ConstraintCode)
                                </span>
                            }
                            else
                            {
                                <span>@Resources.Resource.Viewconstraint</span>
                            }


                            <span class="text-normal pr-1 btn-vc-closs-view-dtls" style="cursor:pointer;color:rgba(39, 87, 149, 1);font-size:50px;float:right;margin-top: -23px;font-family: lato_light;">
                                ×
                            </span>
                            <!-- <span class="text-normal pr-4"
                                style="margin-top:-15px;text-align: end;float:right;font-size: x-large;padding-top: -10px;">
                                &times;
                            </span> -->
                        </span>
                    </div>
                    <!-- add-caution -->
                    <!-- end of add-caution -->
                    <!-- check-caution -->
                    <!-- check-caution -->
                    <div id="check-caution" style="background: white;">
                        <div class="row mt-4 main-entry">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div class="row mb-1">
                                    <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal" style="font-family: lato_bold;">Constraint ID</label>
                                    </div>
                                    <div class="col-sm-4 col-md-4 col-lg-4 input-field text-normal" style="font-family: lato_bold;">
                                        @Html.DisplayFor(model => model.ConstraintCode)
                                    </div>
                                    @if (ViewBag.Helpdest_redirect != "true")
                                    {
                                        if (ViewBag.flageditmode == true)
                                        {
                                            if (ViewBag.orgId == orgId)
                                            {
                                                <div class="col-sm-2 col-md-1 col-lg-1 input-field text-normal btn-vc-edit-constraint">
                                                    <img src="~/Content/assets/images/edit-icon.svg" class="mr-4" width="25" style="cursor: pointer; margin: auto;">
                                                </div>
                                                <div class="col-sm-2 col-md-1 col-lg-1 input-field text-normal btn-vc-delete" data-constraintname="@Model.ConstraintName.Replace("'", "")">
                                                    <img src="~/Content/assets/images/delete-icon.svg" class="mr-4" width="20" style="cursor: pointer; margin: auto;">
                                                </div>
                                            }
                                        }
                                    }

                                </div>
                                <div class="row mb-1">
                                    <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal">Owner</label>
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-7 input-field text-normal">
                                        @Html.DisplayFor(model => model.OrganisationName)
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal">Name</label>
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-7 input-field text-normal">
                                        @Html.DisplayFor(model => model.ConstraintName)
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal">Type</label>
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-5 text-normal">
                                        @if (!string.IsNullOrEmpty(Model.ConstraintTypeName))
                                        {
                                            @Html.Raw(Convert.ToString(Model.ConstraintTypeName).Substring(0, 1).ToUpper() + Convert.ToString(Model.ConstraintTypeName).Substring(1).ToLower())
                                        }
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal">Start date</label>
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-5 text-normal">
                                        @if (Model.StartDate.ToString("dd/MM/yyyy") != "01/01/0001")
                                        {
                                            @Html.Raw(Model.StartDate.ToString("dd/MM/yyyy"))
                                        }
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal">End date</label>
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-5 text-normal">
                                        @if (Model.EndDate.ToString("dd/MM/yyyy") != "01/01/0001")
                                        {
                                            @Html.Raw(Model.EndDate.ToString("dd/MM/yyyy"))
                                        }
                                    </div>
                                </div>
                                @if (ViewBag.UOM == 692001)
                                {
                                    <div class="row mb-1">
                                        <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                            <label class="text-normal">Height</label>
                                        </div>
                                        <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal">
                                            @if (Model.MaxHeightMtrs != 0)
                                            {
                                                @Html.DisplayFor(model => model.MaxHeightMtrs) <span>m</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="row mb-1">
                                        <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                            <label class="text-normal">Width</label>
                                        </div>
                                        <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal">
                                            @if (Model.MaxWidthMeters != 0)
                                            {
                                                @Html.DisplayFor(model => model.MaxWidthMeters) <span>m</span>
                                            }
                                        </div>
                                    </div>
                                    <div class="row mb-1">
                                        <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                            <label class="text-normal">Length</label>
                                        </div>
                                        <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal">
                                            @if (Model.MaxLengthMeters != 0)
                                            {
                                                @Html.DisplayFor(model => model.MaxLengthMeters) <span>m</span>
                                            }
                                        </div>
                                    </div>

                                }
                                @if (ViewBag.UOM == 692002)
                                {
                                    <div class="row mb-1">
                                        <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                            <label class="text-normal">Height</label>
                                        </div>
                                        <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal">
                                            @if (Model.MaxHeightFT != 0)
                                            {
                                                if (Model.MaxHeightFT != 0)
                                                {
                                                    int FeetH = (int)Model.MaxHeightFT;
                                                    int Height = 0;
                                                    float InchH = Model.MaxHeightFT - FeetH;
                                                    InchH = InchH * 12;
                                                    Height = (int)InchH;
                                                    <span>@FeetH <span>feet</span>  @Height <span>inch</span> </span>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="row mb-1">
                                        <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                            <label class="text-normal">Width</label>
                                        </div>
                                        <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal">
                                            @if (Model.MaxWidthFeet != 0)
                                            {
                                                if (Model.MaxWidthFeet != 0)
                                                {
                                                    int FeetW = (int)Model.MaxWidthFeet;
                                                    float InchW = Model.MaxWidthFeet - FeetW;
                                                    int Width = 0;
                                                    InchW = InchW * 12;
                                                    Width = (int)InchW;
                                                    <span>@FeetW <span>feet</span>  @Width <span>inch</span> </span>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="row mb-1">
                                        <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                            <label class="text-normal">Length</label>
                                        </div>
                                        <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal">
                                            @if (Model.MaxLengthMeters != 0)
                                            {
                                                if (Model.MaxLengthFeet != 0)
                                                {
                                                    int FeetL = (int)Model.MaxLengthFeet;
                                                    float InchL = Model.MaxLengthFeet - FeetL;
                                                    int Length = 0;
                                                    InchL = InchL * 12;
                                                    Length = (int)InchL;
                                                    <span>@FeetL <span>feet</span>  @Length <span>inch</span> </span>
                                                }
                                                @*@Html.DisplayFor(model => model.MaxLengthMeters) <span>m</span>*@
                                            }
                                        </div>
                                    </div>

                                }


                                <div class="row mb-1">
                                    <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal">Gross weight</label>
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal">
                                        @if (Model.GrossWeight != 0)
                                        {
                                            @Html.DisplayFor(model => model.GrossWeight) <span class="text-color1 ml-2">t</span>
                                        }
                                    </div>
                                </div>
                                <div class="row mb-1">
                                    <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal">Axle weight</label>
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal">
                                        @if (Model.AxleWeight != 0)
                                        {
                                            @Html.DisplayFor(model => model.AxleWeight) <span class="text-color1 ml-2">t</span>
                                        }
                                    </div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal">Owner is contact</label>
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal">
                                        @if (Model.OwnerIsContact == 0)
                                        {
                                            <span>No</span>
                                        }
                                        else if (Model.OwnerIsContact == 1)
                                        {
                                            <span>Yes</span>
                                        }
                                    </div>
                                </div>
                                <div class="row pt-4" style="padding-right: 38px;">
                                    <div class="col-sm-4 col-md-6 col-lg-4 pl-0">
                                        <div class="button">
                                            <button class="btn btn-outline-primary btn-normal btn-vc-review-cautions" role="button"
                                                    aria-pressed="true">
                                                CAUTIONS
                                            </button>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-4 pl-0">
                                        <div class="button ">
                                            <button class="btn btn-outline-primary btn-normal btn-vc-review-cantacts" role="button"
                                                    aria-pressed="true">
                                                CONTACTS
                                            </button>
                                        </div>
                                    </div>
                                    <div class="col-sm-4 col-md-5 col-lg-4  pl-0">
                                        <div class="button">
                                            <button class="btn btn-outline-primary btn-normal btn-vc-view-history" role="button"
                                                    aria-pressed="true">
                                                HISTORY
                                            </button>
                                        </div>
                                    </div>
                                </div>

                                @if (ViewBag.flageditmode == true)
                                {
                                    if (userTypeID != 696001)
                                    {
                                        <div class="row mb-4" style="display:none">
                                            <a class="text-normal" style="text-align: center; padding-left: inherit; color: blue; text-decoration: underline;" href="/Constraint/ShowNotificationsExceedingConstraint?constraintID=@ViewBag.ConstraintID">Notifications exceeding this constraint</a>
                                        </div>

                                    }
                                }


                            </div>
                        </div>
                    </div>
                </div>
                <!-- </div> -->
                <!-- end of check-caution -->
            </div>



        </section>


        <div class="modal fade" id="exampleModalCenter1" tabindex="-1" role="dialog"
             aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header pt-0">

                    </div>
                    <div class="modal-body">
                        <img src="~/Content/assets/images/warning-icon2.svg" width="30">
                        <div class="edit-normal">
                            <span>Constraint creation failed.</span><br>
                            You do not have sufficient privilege
                            to create constraints in the selected roads.
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">OK</button>
                    </div>
                </div>
            </div>
        </div>



        <div class="modal fade show" id="DeleteConstPopup" tabindex="-1" role="dialog"
             aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header pt-0">

                    </div>

                    <div class="modal-body pt-0">
                        <img src="~/Content/assets/images/warning-icon2.svg" width="30">

                        <div class="edit-normal">
                            Do you want to delete @Model.ConstraintName and the related cautions?
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary btn-vc-delete-data" data-dismiss="modal">YES</button>
                        <button type="button" class="btn btn-secondary btn-vc-close-delete-popup" data-bs-dismiss="modal">NO</button>

                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--end of main content -->
    @*<script src="~/Scripts/Constraint/ViewConstraint.js?V@(Session["ProjectVersion"])"></script>*@
</body>
</html>

