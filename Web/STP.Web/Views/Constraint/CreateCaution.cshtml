@using STP.Web.Custom.Views
@model STP.Domain.RoadNetwork.Constraint.ConstraintModel

@{
    Layout = null;
    int FirstCautionFlag = @ViewBag.FirstCautionFlag;

    int UOM = ViewBag.UOM;
}


<div id="soa-structure-detail" class="create-caution">
    @Html.Hidden("ConstraintID", Model.ConstraintId)
    <style>

        .error {
            color: red;
            display: none;
            font-size: 12px;
            width: max-content;
        }
        .txtmultiwidth {
            width: 206px;
            height: 67px;
        }

        .error {
            color: red;
            display: none;
            font-size: 12px;
        }

        .LeftpanelConst {
            height: auto !important;
            min-height: 46rem !important;
            width: 26rem !important;
        }

        .vl {
            height: 24px;
        }

        #dialogue {
            height: 50rem !important;
            box-shadow: inherit !important;
            width: auto !important;
            margin-left: 0px !important;
            margin-top: 132px !important;
        }
        button.fontStyle.active {
            background: linear-gradient(0deg, #3581e1, #ffffff) !important;
        }
    </style>
    @Html.Hidden("UOM", UOM)
    <!--main content -->

<section id="banner" class="map-icons">
    <!-- add-caution -->
    <div class="card LeftpanelConst" style="position: absolute;" id="add-caution">
        <div class="card-content">
            <div class="title">
                @if (ViewBag.mode == "add")
                {

                    <label>Add Caution </label>
                }
                else
                {
                    <label>Edit Caution </label>

                }
            </div>
            @if (ViewBag.FirstCautionFlag != 1)
            {
                @*<span aria-hidden="true" data-icon="&#xe0f3;" id="span-close" class="span-close" ></span>*@
            }
            <div class="row mt-1 main-entry">
                <div class="col-lg-12 col-md-12 col-sm-12">
                    @using (Html.BeginForm("CautionAddReport", "Constraint", FormMethod.Post, new { Id = "CautionInfo" }))
                    {
                        <div class="row mb-2">
                            @Html.HiddenFor(model => model.SelectedTypeName, new { Id = "SelectedTypeName" })
                            @Html.HiddenFor(model => model.ConstraintId, new { Id = "CONSTRAINT_ID" })
                            @Html.HiddenFor(model => model.ConstraintCode, new { Id = "CONSTRAINT_CODE" })
                            @Html.HiddenFor(model => model.ConstraintName, new { Id = "CONSTRAINT_NAME" })
                            @Html.HiddenFor(model => model.CautionId, new { Id = "CAUTION_ID" })
                            @*@Html.HiddenFor(model => model.DirectionName, new { Id = "HdnText" })*@

                            <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                <label class="text-normal">Owner</label>
                            </div>
                            <div class="col-sm-4 col-md-5 col-lg-7 input-field">
                                <label class="text-normal">@Model.OrganisationName</label>
                                @Html.HiddenFor(model => model.OwnerOrganisationId)
                                @Html.HiddenFor(model => model.OrganisationName)


                                @if (ViewBag.UOM == 692001)
                                {
                                    @Html.HiddenFor(model => model.MaxHeight)
                                    @Html.HiddenFor(model => model.MaxWidth)
                                    @Html.HiddenFor(model => model.MaxLength)
                                    @Html.HiddenFor(model => model.MinSpeed)
                                    @Html.HiddenFor(model => model.MaxGrossWeight)
                                    @Html.HiddenFor(model => model.MaxAxleWeight)
                                }
                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                <label class="text-normal">@Resources.Resource.Name  *</label>
                            </div>
                            <div class="col-sm-4 col-md-5 col-lg-7 input-field">
                                @Html.TextBoxFor(model => model.CautionName, null, new { @class = "edit-normal" })<br>
                                <span id="spanCautionName" class="error" style="display:none">The name is required</span>
                            </div>
                        </div>
                        <div class="row pt-3">
                            <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                <label class="text-normal">Action</label>
                            </div>
                            <div class="col-sm-4 col-md-3 col-lg-3 pl-0 input-field text-normal">
                                <div class="form-check">
                                    @Html.RadioButtonFor(model => model.SelectedType, ActionType.StandardCaution, new { @class = "form-check-input mr-1 mt-2" })
                                    <label class="form-check-label text-normal" for="flexRadioDefault1">
                                        Standard action
                                    </label>
                                </div>
                            </div>
                            <div class="col-sm-4 col-md-3 col-lg-4 pl-0 input-field text-normal">
                                <div class="form-check">

                                    @Html.RadioButtonFor(model => model.SelectedType, ActionType.SpecificAction, new { @class = "form-check-input mr-1 mt-2" })
                                    <label class="form-check-label text-normal" for="flexRadioDefault1">
                                        Specific action
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                @*<label class="text-normal">Action</label>*@
                            </div>
                            @Html.HiddenFor(model => model.SelectedType, new { id = "hdnStandardCaution" })

                            <div class="col-sm-4 col-md-5 col-lg-5 message-text">
                                <div class="cardHelperSOA mt-0 pr-3" id="textNote">
                                    <fieldset style="height: 27px; width: 207px;">
                                        <div class="btn-group" role="group" aria-label="..." style="height: 27px; width: 206px;">
                                            <button type="button" class="fontStyle" data-type="bold"
                                                    title="Bold Highlighted Text" style="height: 25px;">
                                                <b>B</b>
                                                @Html.CheckBoxFor(model => model.Bold, new { type = "hidden", Id = "chkBold" })
                                            </button>
                                            <div class="vl"></div>
                                            <button type="button" class="fontStyle" data-type="underline"
                                                    style="height: 25px;">
                                                <u class="underline1">U</u>
                                                @Html.CheckBoxFor(model => model.UnderLine, new { type = "hidden", Id = "chkUnderline" })
                                            </button>
                                            <div class="vl"></div>
                                            <button type="button" class="fontStyle" data-type="italic"
                                                    style="height: 25px;"
                                                    title="Italicize Highlighted Text">
                                                <i>I</i>
                                                @Html.CheckBoxFor(model => model.Italic, new { type = "hidden", Id = "chkItalic" })

                                            </button>
                                            <div class="vl"></div>
                                        </div>
                                    </fieldset>
                                    @if (Model.SelectedType.ToString() == "SpecificAction")
                                    {
                                <div id="Description" contenteditable="true" style="background: white;overflow: auto;" class="multiLineTextBox txtmultiwidth">
                                    @*@Model.DirectionName*@
                                    @if (Model.DirectionName != null)
                                    {
                                        string directionName = Model.DirectionName.Replace("<Bold", "<b").Replace("</Bold>", "</b>").Replace("<Italic", "<i").Replace("</Italic>", "</i>").Replace("<Underline", "<u").Replace("</Underline>", "</u>");
                                        @Html.Raw(directionName)
                                    }
                                </div>
                                    }
                                    else
                                    {
                                        <div id="Description" style="background: lightgray" class="multiLineTextBox txtmultiwidth">
                                            @*@Model.DirectionName*@
                                            @if (Model.DirectionName != null)
                                            {
                                                @Html.Raw(string.Format(Model.DirectionName))
                                            }
                                        </div>
                                    }


                                </div>
                            </div>

                        </div>
                        <div class="row mb-2">
                        </div>
                        <div class="row mb-2">
                        </div> <div class="row mb-2">
                        </div>
                        <div class="row mb-2">
                            <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                <label class="text-normal">@Resources.Resource.Height</label>
                            </div>
                            <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal" style="padding: inherit;">

                                @if (Convert.ToString(Model.Height == null ? string.Empty : Model.Height).Trim().Length > 0)
                                {
                                    @Html.TextBoxFor(model => model.Height, new { @class = "numberwidth edit-normal" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(model => model.Height, new { @Value = "", @class = "numberwidth edit-normal" })
                                }
                                @if (ViewBag.UOM == 692001)
                                {
                                    <label>m</label>
                                }
                                else
                                {
                                    <label>ft/in</label>
                                    @*<div class="divclass">@Resources.Resource.Feet / @Resources.Resource.Inches</div>*@
                                }
                                <span id="spMAX_HEIGHT_MTRS" class="error">Please enter valid height</span>

                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                <label class="text-normal">Width</label>
                            </div>
                            <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal" style="padding: inherit;">

                                @if (Convert.ToString(Model.Width == null ? string.Empty : Model.Width).Trim().Length > 0)
                                {
                                    @Html.TextBoxFor(model => model.Width, new { @class = "numberwidth edit-normal" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(model => model.Width, new { @Value = "", @class = "numberwidth edit-normal" })
                                }
                                @if (ViewBag.UOM == 692001)
                                {
                                    <label>m</label>
                                }
                                else
                                {
                                    <label> ft/in</label>
                                    @*<div class="divclass">@Resources.Resource.Feet / @Resources.Resource.Inches</div>*@
                                }
                                <span id="spMAX_WIDTH_MTRS" class="error">Please enter valid width</span>

                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                <label class="text-normal">Length</label>
                            </div>
                            <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal" style="padding: inherit;">

                                @if (Convert.ToString(Model.Length == null ? string.Empty : Model.Length).Trim().Length > 0)
                                {
                                    @Html.TextBoxFor(model => model.Length, new { @class = "numberwidth edit-normal" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(model => model.Length, new { @Value = "", @class = "numberwidth edit-normal" })
                                }
                                @if (ViewBag.UOM == 692001)
                                {
                                    <label>m</label>
                                }
                                else
                                {
                                    <label> ft/in</label>
                                    @*<div class="divclass">@Resources.Resource.Feet / @Resources.Resource.Inches</div>*@
                                }
                                <span id="spMAX_LENGTH_MTRS" class="error">Please enter valid length</span>

                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                <label class="text-normal">Gross weight</label>
                            </div>
                            <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal" style="padding: inherit;">

                                @if (Model.GrossWeight > 0)
                                {
                                    @Html.TextBoxFor(model => model.GrossWeight, new { @class = "numberwidth edit-normal" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(model => model.GrossWeight, new { @Value = "", @class = "numberwidth edit-normal" })
                                }
                                <label>t</label>
                                <span id="spMAX_GROSS_WEIGHT_KGS" class="error">Please enter valid weight</span>

                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                <label class="text-normal">Axle weight</label>
                            </div>
                            <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal" style="padding: inherit;">
                                @if (Model.AxleWeight > 0)
                                {
                                    @Html.TextBoxFor(model => model.AxleWeight, new { @class = "numberwidth edit-normal" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(model => model.AxleWeight, new { @Value = "", @class = "numberwidth edit-normal" })
                                }
                                <label>t</label>
                                <span id="spMAX_AXLE_WEIGHT_KGS" class="error">Please enter valid axle weight</span>

                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                <label class="text-normal">Speed</label>
                            </div>
                            <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal" style="padding: inherit;">

                                @if (Model.Speed != null)
                                {
                                    if (Convert.ToString(Model.Speed).Trim().Length > 0)
                                    {
                                        @Html.TextBoxFor(model => model.Speed, new { @class = "numberwidth edit-normal" })
                                    }
                                    else
                                    {
                                        @Html.TextBoxFor(model => model.Speed, new { @Value = "", @class = "numberwidth edit-normal" })
                                    }
                                }
                                else
                                {
                                    @Html.TextBoxFor(model => model.Speed, new { @Value = "", @class = "numberwidth edit-normal" })
                                }


                                @if (ViewBag.UOM == 692001)
                                {
                                    <label>kph</label>
                                }

                                else
                                {
                                    <label>mph</label>
                                }

                                <span id="spMIN_SPEED_KPH" class="error">Please enter valid speed</span>

                            </div>
                        </div>
                        <div class="row mb-4" style="height: 45px; margin-bottom: 0px !important;">
                            <div class="col-sm-4 col-md-6 col-lg-5 pr-0">
                                <label class="text-normal">Owner is contact</label>
                            </div>
                            <div class="col-sm-4 col-md-5 col-lg-5 input-field text-normal" style="padding: inherit;">
                                @Html.CheckBoxFor(model => model.CreatorIsContact)

                            </div>
                        </div>
                            <div class="row pt-4">
                                <div class="col-sm-4 col-md-5 col-lg-4 pl-0" style="margin-left:0%!important">
                                    <div class="button">
                                        <button class="btn btn-outline-primary btn-normal btn-back-addcausion justify-content-center" role="button" type="button" aria-pressed="true" style="width:81% !important" ;>
                                            BACK
                                        </button>
                                    </div>
                                </div>
                                <div class="col-sm-4 col-md-5 col-lg-4 pl-0">
                                    <div class="button ">
                                        <button class="btn btn-outline-primary btn-normal btn-add-caution-report" role="button" type="button" aria-pressed="true" style="width:81% !important" ;>
                                            SAVE
                                        </button>
                                    </div>
                                </div>
                                @if (ViewBag.FirstCautionFlag != 1)
                                {
                                    <div class="col-sm-4 col-md-5 col-lg-4  pl-0">
                                        <div class="button">
                                            <button class="btn btn-outline-primary btn-normal btn-close-create-caution" type="button" aria-pressed="true" style="width:81% !important" ;>
                                                CANCEL
                                            </button>
                                        </div>
                                    </div>
                                }
                            </div>

                        
                            }
                        </div>
            </div>
        </div>
    </div>
    <!-- end of add-caution -->

    <img id="card-swipecon1" src="/Content/assets/images/card-swipe-on.svg" class="btn-open-nav" width="30" style="cursor: pointer; margin-left: 0px; margin-top: 210px;">
    <img id="card-swipecon2" src="/Content/assets/images/card-swipe-off.svg" class="btn-close-nav" width="30" style="cursor: pointer; margin-left: 381px; margin-top: 210px;">


    <div id="soa-portal-map">
    </div>
</section>
    <!--end of main content -->
    <input type="hidden" value="@ViewBag.FirstCautionFlag" id="hfFirstCautionFlag" name="hfFirstCautionFlag" />
</div>



<script src="~/Scripts/Constraint/CreateCaution.js?V@(Session["ProjectVersion"])"></script>
