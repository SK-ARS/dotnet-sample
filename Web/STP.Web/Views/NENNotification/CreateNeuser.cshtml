@using System.Web.Optimization
@using STP.Domain
@model STP.Domain.MovementsAndNotifications.Notification.NeHaulierList

@{
    long AuthKeyId = 0;
    if (ViewBag.AuthKeyId != null)
    {
        AuthKeyId = ViewBag.AuthKeyId;
    }

    @Html.Hidden("AuthKeyId", AuthKeyId)
    var mode = ViewBag.mode;

}
@if (ViewBag.mode == "View")
{
    <tr class="bgColor1" id="description">
        <td class="pt-6 pb-6 pl-6" colspan="5" style="background-color: white !important;">
            <div id="desc-all-entr" style="width: 100%;">

                <div class="pb-3 wd-align">
                    <div class="text-normal wd20">
                        NEN Haulier Name*
                    </div>
                    @Html.TextBoxFor(m => m.HaulierName, new { @id = "HaulName", @class = "edit-normal wd20 in", @readonly = "true" }
                  )

                </div>
                <div class="pb-3 wd-align">
                    <div class="text-normal wd20">
                        Authentication Key
                    </div>
                    @Html.TextBoxFor(m => m.AuthenticationKey, new { @id = "AuthKey", @class = "edit-normal wd20 in", @readonly = "true" })

                </div>
                <div class="pb-3 wd-align">
                    <div class="text-normal wd20">
                        Organisation Name*
                    </div>
                    @Html.TextBoxFor(m => m.OrgniseName, new { @id = "OrgNam", @class = "wd20 edit-normal in", @readonly = "true" })

                </div>
                <div class="pb-3 wd-align">
                    <div class="text-normal wd20">
                        NEN Limit (default 2000)
                    </div>
                    @Html.TextBoxFor(m => m.NeLimit, new { @id = "NeLimit", @class = "wd20 edit-normal in", @readonly = "true" })

                </div>
                <div class="pb-3 wd-align">
                    <div class="text-normal wd20">
                        Is Valid
                    </div>

                    <div class="wd20">
                        @if (Model.AuthenticationKey != "")
                        {
                            <img src="~/Content/assets/images/yes-icon.svg" width="20">

                        }
                        else
                        {
                            <img src="~/Content/assets/images/no-icon.svg" width="20">

                        }
                    </div>
                </div>
            </div>
        </td>
        <td style="background-color: white !important;vertical-align: baseline;">
            <img src="~/Content/assets/images/up-chevlon-filter.svg" width="20" class="btnViewDescription"  data-neauthkey="@Model.NeAuthKey">
        </td>
    </tr>
}
else if (ViewBag.mode == "edit")
{
    using (Html.BeginForm("SaveNeUser", "NENNotification", new { mode = ViewBag.mode, orgID = ViewBag.orgID, sortApp = ViewBag.sortApp }, FormMethod.Post, new { @id = "form_Organisation" }))
    {
        @Html.ValidationSummary(true)
    
        <tr class="bgColor1" id="description">
            <td class="pt-6 pb-6 pl-6" colspan="5" style="background-color: white !important;">
                <div id="desc-all-entr" style="width: 100%;">

                    <div class="pb-3 wd-align">
                        <div class="text-normal wd20">
                            NEN Haulier Name*
                        </div>
                        <div class="wd20">
                            @Html.TextBoxFor(m => m.HaulierName, new { @id = "HaulName", @class = "edit-normal", @onkeypress = "generateAuthKey(" + ViewBag.AuthKeyId + ")" })
                            @Html.ValidationMessageFor(m => m.HaulierName, null, new { @class = "error" })

                            <span id="err_required_haulname" class="error invalid-feedback"></span>

                        </div>

                    </div>
                    <div class="pb-3 wd-align">
                        <div class="text-normal wd20">
                            Authentication Key
                        </div>
                        <div class="wd20">
                            @Html.TextBoxFor(m => m.AuthenticationKey, new { @id = "AuthKey", @maxlength = "20", @class = "edit-normal" })

                            @Html.ValidationMessageFor(m => m.AuthenticationKey, null, new { @class = "error", @id = "errmsg_OrgCode" })
                            <span id="err_OrgCode_exists" class="error invalid-feedback"></span>

                        </div>
                    </div>
                    <div class="pb-3 wd-align">
                        <div class="text-normal wd20">
                            Organisation Name*
                        </div>
                        <div class="wd20">
                            @Html.TextBoxFor(m => m.OrgniseName, new { @id = "OrgNam", @class = "edit-normal", @onkeypress = "OrgKeypress(event, this)" })

                            @Html.ValidationMessageFor(m => m.OrgniseName, null, new { @class = "error" })
                            <span id="err_required_orgname" class="error invalid-feedback"></span>

                        </div>
                    </div>
                    <div class="pb-3 wd-align">
                        <div class="text-normal wd20">
                            NEN Limit (default 2000)
                        </div>
                        <div class="wd20">
                            @Html.TextBoxFor(m => m.NeLimit, new { @id = "NeLimit", @maxlength = "10", @class = "details1" })
                            <span id="err_number_nelimit" class="error invalid-feedback"></span>
                        </div>
                    </div>
                    <div class="pb-3 wd-align">
                        <div class="text-normal wd20">
                            Is Valid
                        </div>

                        <div class="wd20">
                            @Html.CheckBoxFor(m => m.IsValNen, new { @id = "IsValidNe", @class = "checkbox" })

                        </div>
                    </div>
                    <div class="flexer justify-content-center mt-5" style="margin-left: auto;margin-right: auto;">
                        <button type="button" class="btn outline-btn-primary SOAButtonHelper mr-2 btnSaveNeUserEdit" data-keyid="@ViewBag.AuthKeyId">SAVE</button>
                        <button id="btn_reset" type="button" class="btn outline-btn-primary SOAButtonHelper ml-2 btnEditReset" data-keyid="@ViewBag.AuthKeyId">RESET</button>

                    </div>
                </div>
            </td>
            <td style="background-color: white !important;vertical-align: baseline;">
                <img src="~/Content/assets/images/up-chevlon-filter.svg" width="20" class="btnViewDescription" data-neauthkey="@Model.NeAuthKey">
            </td>
        </tr>

    }

}
else
{
    using (Html.BeginForm("SaveNeUser", "NENNotification", new { mode = ViewBag.mode, orgID = ViewBag.orgID, sortApp = ViewBag.sortApp }, FormMethod.Post, new { @id = "form_Organisation" }))
    {
        @Html.ValidationSummary(true)

       
        <div id="desc-entry" class="pl-3 pr-3 pt-4 pb-4 mt-3" style="width: 100%;background-color: white;">
            <div class="row mb-1" id="table-head">

                <span class="text-normal pr-2" style="font-family: lato_light; font-size: 25px; display: none;" id="createNewTitle">
                    New NE User
                    <span class="text-normal pr-1 btnReload" style="color:rgba(39, 87, 149, 1);font-size:50px;float:right;margin-top: -23px;font-family: lato_light;cursor:pointer;">
                        ×
                    </span>

                </span>
                <span class="text-normal pr-2" style="font-family: lato_light;font-size:25px; display:none;" id="editTitle">
                    Edit NE User
                    <span class="text-normal pr-1 btnReload" style="color:rgba(39, 87, 149, 1);font-size:50px;float:right;margin-top: -23px;font-family: lato_light;cursor:pointer;" >
                        ×
                    </span>

                </span>
            </div>
            <div class="pb-3 wd-align">
                <div class="text-normal wd40">
                    NEN Haulier Name*
                </div>
                @if (ViewBag.mode == "save")
                {
                    <div class="wd60">
                        @Html.TextBoxFor(m => m.HaulierName, new { @id = "HaulName", @class = "edit-normal", @onkeypress = "EncryDecry(event, this)", @onkeydown = "EncryDecry()" })
                        @Html.ValidationMessageFor(m => m.HaulierName, null, new { @class = "error" })

                        <span id="err_required_haulname" class="error invalid-feedback"></span>

                    </div>
                }

            </div>
            <div class="pb-3 wd-align">
                <div class="text-normal wd40">
                    Authentication Key
                </div>
                <div class="wd60">
                    @Html.TextBoxFor(m => m.AuthenticationKey, new { @id = "AuthKey", @maxlength = "20", @class = "edit-normal" })

                    @Html.ValidationMessageFor(m => m.AuthenticationKey, null, new { @class = "error", @id = "errmsg_OrgCode" })
                    <span id="err_OrgCode_exists" class="error invalid-feedback"></span>

                </div>
            </div>
            <div class="pb-3 wd-align">
                <div class="text-normal wd40">
                    Organisation Name*
                </div>
                <div class="wd60">
                    @Html.TextBoxFor(m => m.OrgniseName, new { @id = "OrgNam", @class = "edit-normal", @onkeypress = "OrgKeypress(event, this)" })

                    @Html.ValidationMessageFor(m => m.OrgniseName, null, new { @class = "error" })
                    <span id="err_required_orgname" class="error invalid-feedback"></span>

                </div>
            </div>
            <div class="pb-3 wd-align">
                <div class="text-normal wd40">
                    NEN Limit (default 2000)
                </div>
                <div class="wd60">
                    @Html.TextBoxFor(m => m.NeLimit, new { @id = "NeLimit", @maxlength = "10", @class = "details1" })
                    <span id="err_number_nelimit" class="error invalid-feedback"></span>
                </div>
            </div>
            <div class="pb-3 wd-align">
                <div class="text-normal wd40">
                    Is Valid
                </div>
                <div class="wd60">
                    @Html.CheckBoxFor(m => m.IsValNen, new { @id = "IsValidNe", @class = "checkbox" })

                </div>
            </div>
            <div class="flexer justify-content-center mt-5" style="margin-left: auto;margin-right: auto;">
                <button id="SaveNeUser" type="button" class="btn outline-btn-primary SOAButtonHelper mr-2">SAVE</button>
                <button id="btn_reset" type="button" class="btn outline-btn-primary SOAButtonHelper ml-2">RESET</button>

            </div>
        </div>
    }

}
@if (ViewBag.mode != "View" && ViewBag.mode != "edit")
{

}

@{
<input type="hidden" value="@ViewBag.mode" id="hf_mode" name="hf_mode" />
<input type="hidden" value="@ViewBag.AuthKey" id="hf_AuthKey" name="hf_AuthKey" />
<input type="hidden" value="@ViewBag.AuthKeyId" id="hf_AuthKeyId" name="hf_AuthKeyId" />
}

