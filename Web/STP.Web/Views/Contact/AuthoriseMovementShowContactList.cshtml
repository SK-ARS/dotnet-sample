@using PagedList.Mvc
@model PagedList.IPagedList<STP.Domain.SecurityAndUsers.ContactModel>

@{

    if (!Request["lang"].IsEmpty())
    {
        Culture = UICulture = Request["lang"];
    }

    int pageSize = ViewBag.pageSize;
    int? pageNum = ViewBag.page;
    int totalPageCount = Model.PageCount;
    int totalItemCount = Model.TotalItemCount;
    int TotalCount = Convert.ToInt32(ViewBag.TotalCount);

    int listCount = 0;
    listCount = (int)ViewBag.pageSize;

    string analysisID = Convert.ToString(ViewBag.analysisID);
    string NotificationID = Convert.ToString(ViewBag.NotificationID);
    string ESDALRefNumber = Convert.ToString(ViewBag.ESDALRefNumber);
    string Type = Convert.ToString(ViewBag.Type);

    Session["analysisID"] = analysisID;
    Session["NotificationID"] = NotificationID;
    Session["ESDALRefNumber"] = ESDALRefNumber == null ? null : ESDALRefNumber.Replace("~", "#");
    Session["Type"] = Type;

    @Html.Hidden("pageSizeVal", pageSize)
    @Html.Hidden("pageNum", pageNum)
    @Html.Hidden("hdnConstraintID", analysisID)
    @Html.Hidden("hdnNotificationID", NotificationID)
    @Html.Hidden("hdnESDALRefNumber", ESDALRefNumber == null ? null : ESDALRefNumber.Replace("~", "#"))
    @Html.Hidden("hdnType", Type)
}
@{
    var sortOrder = ViewBag.SortOrder != null ? (int)ViewBag.SortOrder : 1;//1-type
    var sortType = ViewBag.SortType != null ? (int)ViewBag.SortType : 0;//0-asc
}
@{
    bool isAdmin = false;
    int portalType = 0;
    if (Session["UserInfo"] != null)
    {
        var user = (STP.Domain.SecurityAndUsers.UserInfo)Session["UserInfo"];
        portalType = user.UserTypeId;
        if (portalType == 696006 || user.IsAdmin == 1)
        {
            isAdmin = true;
        }
    }

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AuthoriseMovementShowContactList</title>

    <style>

        tr:nth-child(even), #soa-structure-delgation .main-table table tr:nth-child(even) {
            background-color: #f4f6fa !important;
        }

        /* .movements td:nth-child(1) {
                text-align: left;
                padding-left: 1%;
                cursor: pointer;
            }*/
    </style>

</head>
<body>
    <div id="contact-list" class="mb-4 mt-3 pt-4" style="width: 70%;display: none;">
        <div class="main-table movements" style="width: 70%;">
            <table class="esdal-table">
                <thead>
                    <tr>
                        <th>
                            <span class="sorting spnSortIconItem @GetSortDefaultClass(sortType,sortOrder,1)" data-action="ContactSorting" data-sortval="1">Contact name </span>
                        </th>
                        <th>Organisation</th>
                    </tr>
                </thead>
                @if (ViewBag.TotalCount > 0)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-color2" style="text-align:left">
                                @if (item.ContactId > 0)
                                {
                                    <a href="#" id="view-contact" data-contactid="@item.ContactId" data-true="true"  class="text-decoration-link">
                                        @Html.DisplayFor(modelItem => item.FullName)
                                    </a>
                                }
                                else
                                {
                                    <span style="color:black">
                                        @Html.DisplayFor(modelItem => item.FullName)
                                    </span>
                                }
                            </td>
                            <td class="text-color1">
                                @Html.DisplayFor(modelItem => item.Organisation)
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr class="bottombordernone">
                        <td colspan="5">
                            <div class="norecord" style="color: red;text-align: center;">@Resources.Resource.NoRecordFound</div>
                        </td>
                    </tr>
                }

            </table>
        </div>
        @if (listCount < totalItemCount)
        {
            if (Model.Count > 0)
            {
                <div class="row pagination-container-new">
                    <div class="col-lg-3"></div>
                    <div class="col-lg-6 text-center">
                        <div id="reviewCausionPaginator" class="table-pagination">
                            @Html.PagedListPager(Model, page => Url.Action("AuthoriseMovementShowContactList",
                      new
                      {
                          B7vy6imTleYsMr6Nlv7VQ =
                                                            STP.Web.Helpers.EncryptionUtility.Encrypt(
                                                            "page=" + page +
                                                            "&pageSize=" + pageSize +
                                                            "&analysisID=" + @ViewBag.analysisID +
                                                            "&NotificationID=" + ViewBag.NotificationID +
                                                            "&ESDALRefNumber=" + ViewBag.ESDALRefNumber +
                                                            "&Type=" + ViewBag.Type)
                      }),
                      new PagedListRenderOptions
                      {
                          DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                          DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                          LinkToPreviousPageFormat = "<img src='/Content/assets/images/left-chevlon.svg' width='10'>",
                          LinkToNextPageFormat = "<img src='/Content/assets/images/right-chevlon.svg' width='10'>",
                          DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                          DisplayLinkToLastPage = PagedListDisplayMode.Never,
                          MaximumPageNumbersToDisplay = 3,
                          DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                          EllipsesFormat = "..."
                      })
                            @*</div>
                                </div>*@
                        </div>
                        @Html.Hidden("pageSizeVal", pageSize)
                        @Html.Hidden("pageNum", pageNum)
                        @Html.Hidden("TotalPages", totalPageCount)
                    </div>
                    <div class="col-lg-3"></div>
                </div>
            }
        }
    </div>
</body>
</html>
@{
    string GetSortDefaultClass(int sortTypeVal, int sortOrderVal, int valToCheck)
    {
        var sortClass = ""; //0-asc, 1-desc ,
        if (sortOrderVal == valToCheck)
        {
            sortClass = sortTypeVal == 1 ? "sorting_desc" : "sorting_asc";
        }
        return sortClass;
    }
}

   
@*<script src="~/Scripts/CspJs/Contact/AuthoriseMovementShowContactList.js?V@(Session["ProjectVersion"])"></script>*@
