@using PagedList.Mvc
@model PagedList.IPagedList<STP.Domain.SecurityAndUsers.ContactListModel>

@{
    int pageSize = 10;
    if (ViewBag.pageSize != null)
    {
        pageSize = ViewBag.pageSize;
    }
    int? pageNum = ViewBag.page;
    int totalItemCount = Model.TotalItemCount;
    int totalPageCount = Model.PageCount;
    bool isContact = false;
    if (TempData["Iscontact"].ToString() == "1")
    {
        isContact = true;
    }

    ViewBag.Title = "ContactList";


    if (!Request["lang"].IsEmpty())
    {
        Culture = UICulture = Request["lang"];
    }

    //Layout = "~/Views/Shared/_Layout.cshtml";
    var searchColumn = ViewBag.searchColumn;
    var searchValue = ViewBag.searchValue;
    string fromAnnotation = ViewBag.FromAnnotation != null ? ViewBag.FromAnnotation.ToString() : "False";

    var SearchListInfo = new List<STP.Domain.SecurityAndUsers.ContactSearchModel>
    {
                        new STP.Domain.SecurityAndUsers.ContactSearchModel {SearchColumn = "1", SearchValue = "Contact name"},
                        new STP.Domain.SecurityAndUsers.ContactSearchModel {SearchColumn = "2", SearchValue = "Organisation"},
                        //new STP.Domain.Contact.ContactModel {searchType = "3", searchName = "Role" },
                        new STP.Domain.SecurityAndUsers.ContactSearchModel {SearchColumn = "4", SearchValue= "Phone" },
                        new STP.Domain.SecurityAndUsers.ContactSearchModel {SearchColumn = "5", SearchValue = "E-mail" },
                    };

    ViewBag.SearchInfo = new SelectList(SearchListInfo, "searchType", "searchName");
}
@{
    Layout = null;
}
@{
    int listCount = 0;

    @Html.Hidden("listCount", listCount)
    var sessionValues = (STP.Domain.SecurityAndUsers.UserInfo)Session["UserInfo"];
    if (Session["UserInfo"] != null)
    {
        listCount = (int)Session["PageSize"];

    }
}
<style>
    .filtered-icon {
        background: url('../../Content/assets/Icons/filtered.svg') no-repeat center 90% #2b5795;
        background-size: 1rem;
    }

    ul {
        margin-top: 0;
        margin-bottom: 0rem;
    }

    ol, ul {
        padding-left: 0rem;
    }

    .esdal-filter-icon {
        background: url('../../Content/assets/Icons/filtered.svg') no-repeat center 0 #2b5795;
        background-size: 1rem;
        width: 20px;
        height: 20px;
        display: inline-block;
        position: absolute;
        margin-left: 3px;
    }

    .movements td:nth-child(1) {
        text-align: left;
    }

    .filter-table-icon {
        position: absolute;
        bottom: -13px;
        -webkit-transform: translateX(-50%) translateY(-50%);
        -moz-transform: translateX(-50%) translateY(-50%);
        transform: translateX(-50%) translateY(-50%);
        left: 50px;
    }

    .filter-table-icons {
        position: absolute;
        bottom: -13px;
        -webkit-transform: translateX(-50%) translateY(-50%);
        -moz-transform: translateX(-50%) translateY(-50%);
        transform: translateX(-50%) translateY(-50%);
        left: 17px;
    }
    /* .movements td:nth-child(1)  {
        text-align: left;

    }*/

</style>

@Html.Hidden("listCount", listCount)
@Html.Hidden("pageNum", pageNum)
@Html.Hidden("FromAnnotation", fromAnnotation)
@Html.Hidden("Contactlistpagecount", totalPageCount)
@{
    var sortOrder = ViewBag.SortOrder != null ? (int)ViewBag.SortOrder : 1;//1-type
    var sortType = ViewBag.SortType != null ? (int)ViewBag.SortType : 0;//0-asc
    var isContactFilterEnabled = !string.IsNullOrEmpty(searchColumn) && searchColumn == "1" && !string.IsNullOrEmpty(searchValue);
    var isOrganisationFilterEnabled = !string.IsNullOrEmpty(searchColumn) && searchColumn == "2" && !string.IsNullOrEmpty(searchValue);
    var isPhoneFilterEnabled = !string.IsNullOrEmpty(searchColumn) && searchColumn == "4" && !string.IsNullOrEmpty(searchValue);
    var isEmailFilterEnabled = !string.IsNullOrEmpty(searchColumn) && searchColumn == "5" && !string.IsNullOrEmpty(searchValue);
    var isAllFilterEnabled = isContactFilterEnabled || isOrganisationFilterEnabled ||
        isPhoneFilterEnabled || isEmailFilterEnabled;
}
<div class="main-table movements" id="contactListContainer">
    <div id="contactDivPage" style="display:@(fromAnnotation.ToLower()=="false"?"block":"none");">
        <table id="div_list" class="esdal-table" style="width: 100%;">
            @Html.Hidden("pageSizeVal", pageSize)
            @Html.Hidden("Isconview", isContact)
            <thead>
                <tr>
                    @*<th style="width: 20%;">Contact</th>*@

                    @*@if (TempData["Iscontact"].ToString() != "1")
                        {*@
                    <th>
                        <span class="sorting spnSortIconItem @GetSortDefaultClass(sortType,sortOrder,1)" data-action="ContactSort" data-sortval="1">Contact & Organisation  </span>
                        <span class="filter-table-icon" style="cursor:context-menu;"><img id="filterimageContactOrganization" style="display:@(isContactFilterEnabled||isOrganisationFilterEnabled?"block":"none")" src="~/Content/assets/images/filter-table-icon.svg"></span>

                    </th>
                    <th style="width: 20%;">Phone<span class="filter-table-icons"><img id="filterimagePhone" style="display:@(isPhoneFilterEnabled?"block":"none")" src="~/Content/assets/images/filter-table-icon.svg"></span></th>
                    <th style="width: 20%;">Email<span class="filter-table-icons"><img id="filterimageEmail" style="display:@(isEmailFilterEnabled?"block":"none")" src="~/Content/assets/images/filter-table-icon.svg"></span></th>
                    <th @*style="width: 20%;"*@></th>
                    @*}*@





                    @if (TempData["Iscontact"].ToString() != "1")
                    {
                        <th class="table-filter" style="width: 5%; background-color: white !important; " id="open-filter">
                            <img src="~/Content/assets/images/filter-icon.svg" class="open-filter-icon-common" data-targetContainer=".contact-view-filter" title="Open filter" width="38">
                            <span class="filtered-icon-table "><img id="filterimage_notif_import" src="~/Content/assets/images/filtered-icon.svg" title="Clear filter" style="display:@(isAllFilterEnabled?"block":"none")"></span>
                        </th>
                    }
                    else
                    {
                        <th class="table-filter" style="width: 5%; background-color: white !important;">
                            <img src="~/Content/assets/images/filter-icon.svg" class="open-filter-icon-common" data-targetContainer=".contact-view-filter" title="Open filter" id="open-contact" width="38"><span class="filtered-icon-table "><img id="filterimage" src="~/Content/assets/images/filtered-icon.svg" title="Clear filter" style="display:@(isAllFilterEnabled?"block":"none")"></span>

                        </th>
                    }


                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>

                        <td class="text-color1">
                            <a class="text-color2 text-decoration-link" href="#" id="view-contact2" data-viewcon1="@item.ContactId" style="text-decoration:none">

                                @item.Initials @item.FirstName @item.SurName
                            </a>
                            <br />

                            @{ var OtherOrgNamesarr = item.OtherOrganisation.Split(new string[] { "##" }, StringSplitOptions.None);

                                //var OtherOrgNames = item.OtherOrganisation;
                                //OtherOrgNames = OtherOrgNames.Replace("##", "<br />");
                                //var x= OtherOrgNamesarr.OrderBy(s => OtherOrgNamesarr).ToList();
                                if (sortType == 0)
                                {
                                    var otherorgnameinascending = from num in OtherOrgNamesarr orderby num select num;
                                    var otherorgnameinascendinglist = otherorgnameinascending.ToList();
                                    @item.Organisation
                                    foreach (var ascenndinglist in otherorgnameinascendinglist)
                                    {
                                        <ul>
                                            @if (item.Organisation != ascenndinglist)
                                            {
                                                @ascenndinglist
                                            }

                                        </ul>
                                    }

                                }
                                else
                                {
                                    var otherorgnameinadesc = from num in OtherOrgNamesarr orderby num descending select num;
                                    var otherorgnameinadesclist = otherorgnameinadesc.ToList();
                                    @item.Organisation
                                    foreach (var desclist in otherorgnameinadesclist)
                                    {
                                        <ul>
                                            @if (item.Organisation != desclist)
                                            {
                                                @desclist
                                            }
                                            
                                        </ul>

                                    }

                                }
                            }




                        </td>
                        <td class="text-color1">
                            @if (!string.IsNullOrEmpty(item.PhoneNumber))
                            {
                                <span class="mr-2"><img src="~/Content/assets/Icons/phone.svg" width="25"></span>
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                            }
                        </td>
                        <td class="text-color2">
                            <a class="text-decoration-link" href="mailto:@item.Email" style="text-decoration:none" @*class="text-decoration-link" style="cursor:pointer;"*@>
                                @Html.DisplayFor(modelItem => @item.Email)
                            </a>
                        </td>
                        @if (TempData["Iscontact"].ToString() != "1")
                        {
                            <td colspan="2">
                                <div id="mid_row">
                                    <span id="mid_row_data">
                                        <button class="btn btn-primary btn-normal import-button" aria-hidden="true" title="Import contact" width="20" id="notif" data-notif="@item.ContactId">
                                            IMPORT CONTACT
                                        </button>
                                    </span>
                                </div>
                            </td>
                        }
                        else

                        {
                            <td colspan="2"></td>

                        }

                    </tr>
                }

            </tbody>
        </table>
        <div id="contactPagination">
            <div class="container-fluid">

                @if (@ViewBag.TotalCount > 0)
                {
                    bool isconview = false;

                    if (TempData["Iscontact"].ToString() == "1")
                    {
                        isconview = true;
                    }
                    <div class="row pagination-container-new">
                        <div class="col-lg-3">
                            @if (Model.TotalItemCount > 0)
                            {
                                <div class="text-color2 total-records-number">
                                    Total number of records : @Model.TotalItemCount
                                </div>}
                        </div>
                        <div class="col-lg-6 text-center">
                            @if (listCount < @ViewBag.TotalCount)
                            {

                                <div id="addressBookPaginator" class="table-pagination pagination">
                                    @Html.PagedListPager(Model, page => Url.Action("ContactView",
                                            new
                                                 {
                                                B7vy6imTleYsMr6Nlv7VQ =
                                                    STP.Web.Helpers.EncryptionUtility.Encrypt("page=" + pageNum + "isNotifContact=true" +
                                                                                              "&Iscontactview" + isconview +
                                                                                              "&sortOrder" + sortOrder +
                                                                                              "&sortType" + sortType),
                                                        page
                                                }
                                            ),
                                            new PagedListRenderOptions
                                            {
                                                DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                                                DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                                                LinkToPreviousPageFormat = "<img src='/Content/assets/images/left-chevlon.svg' width='10'>",
                                                LinkToNextPageFormat = "<img src='/Content/assets/images/right-chevlon.svg' width='10'>",
                                                DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                                                DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                                                MaximumPageNumbersToDisplay = 3,
                                                DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                                                EllipsesFormat = "...",
                                                LinkToFirstPageFormat = "<div style='position:absolute;'><img src='/Content/assets/images/left-chevlon.svg' width='10'><img src='/Content/assets/images/left-chevlon.svg' width='10'></div>",
                                                LinkToLastPageFormat = "<div style='position:absolute;'><img src='/Content/assets/images/right-chevlon.svg' width='10'><img src='/Content/assets/images/right-chevlon.svg' width='10'></div>"
                                            })
                                </div>


                            }
                        </div>
                        @if (Model.TotalItemCount > 10)
                        {
                            <div class="col-lg-3 col-md-3 col-sm-12 text-normal pr-0">
                                Number of items to display per page
                                <select class="form-select mb-3" style="width:100px;" aria-label=".form-select-lg example" id="pageSizeSelect">
                                    <option val="10" @(pageSize == 10 ? "selected" : "")>10</option>
                                    <option val="20" @(pageSize == 20 ? "selected" : "")>20</option>
                                    <option val="50" @(pageSize == 50 ? "selected" : "")>50</option>
                                    <option val="100" @(pageSize == 100 ? "selected" : "")>100</option>
                                </select>
                            </div>
                        }
                    </div>
                }

                else
                {
                    <div class="error invalid-feedback" style="display: block !important; text-align: center;">@Resources.Resource.NoRecordFound</div>
                }
            </div>

        </div>


        <div class="button mr-0 mb-2 mt-4">
            @if (TempData["Iscontact"].ToString() != "1")
            {
                <button class="btn outline-btn-primary btn-normal" id="backToAffectedParties" role="button" aria-pressed="true" style="width: 10rem;float: right;">
                    BACK
                </button>
            }
        </div>
        <div id="dialogue">

        </div>
    </div>
    <div id="contactDivPopup" style="height:0rem;display:@(fromAnnotation.ToLower()=="true"?"block":"none");">

        @Html.Hidden("pageSizeVal", pageSize)
        @Html.Hidden("Isconview", isContact)
        <section id="banner">
            <div class="container-fluid" id="banner-container">
            </div>
            <div class="modal" id="exampleModalCenterCnt" tabindex="-1" role="dialog"
                 aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-xl" role="document">
                    <div class="modal-content" style="width: inherit;height: auto;">
                        <div class="modal-header pt-2" style="justify-content: end;">
                            <span aria-hidden="true" class="close" data-dismiss="modal" aria-label="Close" id="closeannotationcontact" style="cursor:pointer;">&times;</span>
                        </div>
                        <div class="modal-body pt-0">
                            <div class="row mb-1 pb-3 pt-3">
                                <span class="text-normal pr-2 text-align-center"
                                      style="font-family: lato_light;font-size:25px;margin-top: -2rem;">
                                    CONTACT DIRECTORY
                                </span>
                            </div>
                            <div class="pl-4 pr-4 pt-6 pb-6 ml-l2 mr-r2"
                                 style="background: linear-gradient(0deg, rgba(255, 255, 255, 1) 0%, rgba(201, 205, 229, 0.44) 100%);border-radius: 10px;">
                                <div class="main-table">
                                    <table>

                                        <tr>
                                            <th style="color:#fff;">
                                                Contact & Organisation<span>
                                                    @*<img src="assets/images/down-chevlon.svg"
                                                        width="15" height="6">*@
                                                </span>
                                            </th>
                                            <th style="color:#fff;">Phone</th>
                                            <th style="color:#fff;">Email</th>
                                            <th></th>
                                            <th id="openannotation" class="table-filter" style="width: 4%;">
                                                <img src="~/Content/assets/images/filter-icon.svg" title="Open filter" width="38">
                                            </th>
                                        </tr>
                                        @foreach (var item in Model)
                                        {
                                            <tr>

                                                <td class="text-color1">
                                                    <a class="text-color2 text-decoration-link" href="#" id="view-contact1" data-viewcontact="@item.ContactId" style="text-decoration:none">

                                                        @item.Initials @item.FirstName @item.SurName
                                                    </a>
                                                    <br />
                                                    @{
                                                        var OtherOrgNames = item.OtherOrganisation;
                                                        OtherOrgNames = OtherOrgNames.Replace("##", "<br />");
                                                    }

                                                    @Html.Raw(OtherOrgNames)

                                                </td>
                                                <td class="text-color1">
                                                    @if (!string.IsNullOrEmpty(item.PhoneNumber))
                                                    {
                                                        <span class="mr-2"><img src="~/Content/assets/Icons/phone.svg" width="25"></span>
                                                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                                                    }
                                                </td>
                                                <td class="text-color2">
                                                    <a class="text-decoration-link" href="mailto:@item.Email" style="text-decoration:none" @*class="text-decoration-link" style="cursor:pointer;"*@>
                                                        @Html.DisplayFor(modelItem => @item.Email)
                                                    </a>
                                                </td>
                                                <td colspan="2">
                                                    <div id="mid_row">
                                                        <span id="mid_row_data">
                                                            <button class="btn btn-primary btn-normal import-button" aria-hidden="true" title="Import contact" id="import" data-import="@item.ContactId" width="20">
                                                                IMPORT CONTACT
                                                            </button>
                                                        </span>
                                                    </div>
                                                </td>

                                            </tr>

                                        }
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="bottom-pagination pb-3">

                            @if (@ViewBag.TotalCount > 0)
                            {
                                bool isconview = false;

                                if (TempData["Iscontact"].ToString() == "1")
                                {
                                    isconview = true;
                                }
                                if (listCount < @ViewBag.TotalCount)
                                {
                                    <div class="pagination" id="addressBookPopupPaginator">
                                        @Html.PagedListPager(Model, page => Url.Action("ContactList",
                                                               new { isNotifContact = true, Iscontactview = isconview, fromAnnotation = true }), new PagedListRenderOptions
                                                               {
                                                                   DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
                                                                   DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
                                                                   LinkToPreviousPageFormat = "<img src='/Content/assets/images/left-chevlon.svg' width='10'>",
                                                                   LinkToNextPageFormat = "<img src='/Content/assets/images/right-chevlon.svg' width='10'>",
                                                                   DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                                                                   DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                                                                   MaximumPageNumbersToDisplay = 3,
                                                                   DisplayEllipsesWhenNotShowingAllPageNumbers = true,
                                                                   EllipsesFormat = "...",
                                                                   LinkToFirstPageFormat = "<div style='position:absolute;'><img src='/Content/assets/images/left-chevlon.svg' width='10'><img src='/Content/assets/images/left-chevlon.svg' width='10'></div>",
                                                                   LinkToLastPageFormat = "<div style='position:absolute;'><img src='/Content/assets/images/right-chevlon.svg' width='10'><img src='/Content/assets/images/right-chevlon.svg' width='10'></div>"
                                                               })
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="error invalid-feedback" style="display: block !important; text-align: center; width:100% ; font-size: .875em !important;">@Resources.Resource.NoRecordFound</div>
                            }
                        </div>
                        <div id="popupFilter">
                        </div>
                    </div>
                </div>

                <!-- end of filter settings -->
            </div>
        </section>
        <input type="hidden" name="SortOrderValue" id="SortOrderValue" value="@sortOrder" />
        <input type="hidden" name="SortTypeValue" id="SortTypeValue" value="@sortType" />
    </div>
</div>
<div id="manageAddressBookPopup"></div>
@{
    string GetSortDefaultClass(int sortTypeVal, int sortOrderVal, int valToCheck)
    {
        var sortClass = ""; //0-asc, 1-desc ,
        if (sortOrderVal == valToCheck)
        {
            sortClass = sortTypeVal == 1 ? "sorting_desc" : "sorting_asc";
        }
        return sortClass;
    }
}
@*<script src="~/Scripts/AddressBook/PartialView/_ManageAddressBookDetails.js?V@(Session["ProjectVersion"])"></script>*@
@using (Html.BeginForm("ContactList", "Contact", FormMethod.Post, new { id = "SearchPanelForm" }))
{
    <div id="filterDivAddressBook">
        <div id="filters" class="sidenav filter-sidenav contact-view-filter">
            <div class="row sidenav-header pl-3 pr-3">
                <div class="col-10 col-md-10 col-sm-10" style="text-align: center;">
                    <div class="text-normal-hyperlink mt-3" style="font-size: x-large;">
                        FILTER
                    </div>
                </div>
                <div class="col-2 col-md-2 col-sm-2">
                    <a href="javascript:void(0)" id="close-filter" class="btn-close-filter close-filter-icon-common">&times;</a>
                </div>
            </div>
            <hr style="margin-top: 0;">
            <div class="filter-list">
                <div class="filter-entry">
                    <div class="pr-0 pl-0 mr-0 ml-0 mt-4 mb-0">
                        <div class="row mt-4">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                <div class="text-normal">
                                    Select criteria type
                                </div>
                                <div class="row mb-2">
                                    <div class="pt-3">
                                        <div class="col-sm-12 col-md-12 col-lg-12 pr-3">
                                            @*@Html.DropDownListFor(model => model.SearchColumn, new SelectList(@SearchListInfo, "SearchColumn", "SearchValue"), new
                                                 {
                                                     @id = "DDsearchCriteria",
                                                @class = "form-select mb-3 nav-link dropdown-toggle mr-0 mb-0 pt-3 pb-3",
                                                     @onChange = "SetSearchText()",
                                                     @style = "width:100% !important"
                                                 })*@
                                            <select class="form-select mb-3 nav-link dropdown-toggle mr-0 mb-0 pt-3 pb-3" id="DDsearchCriteria" name="SearchColumn" style="width:100% !important">
                                                @foreach (var item in SearchListInfo)
                                                {
                                                    var selected = item.SearchColumn == searchColumn ? "selected" : "";
                                                    <option value="@item.SearchColumn" @selected>@item.SearchValue</option>
                                                }
                                            </select>
                                        </div>
                                    </div>

                                    <div class="pt-3">
                                        <div class="pr-0 pl-0 mr-0 ml-0 mt-2 mb-0 input-field">
                                            <input class="edit-normal" id="SearchValue" name="SearchValue" type="text" placeholder="Contact name" value="@searchValue">
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row pt-6" id="org_filter_btn">
                        <div class="col-lg-8 col-md-8 col-sm-12">
                            <!-- <div class="header mt-4"> -->
                            <div class="button mr-0 mb-2">
                                <button class="btn btn-outline-primary btn-normal" type="button" id="search-contact" aria-pressed="true" style="width: 100% !important">
                                    SEARCH
                                </button>
                            </div>
                            <!-- </div> -->
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-12">
                            <!-- <div class="header mt-4"> -->
                            <div class="button mr-0 mb-2">
                                <button class="btn btn-outline-primary btn-normal" type="button" id="clear-address" aria-pressed="true" style="width: 100% !important">
                                    CLEAR
                                </button>
                            </div>
                            <!-- </div> -->
                        </div>

                    </div>
                </div>
            </div>

        </div>

    </div>

}