@using System.Web.Optimization
@model STP.Domain.Routes.RouteModel.RoutePart

@{
    ViewBag.Title = "Outline route details";
    bool isAdmin = false;
    int portalType = 0;
    if (Session["UserInfo"] != null)
    {
        var user = (STP.Domain.UserInfo)Session["UserInfo"];
        portalType = user.userTypeId;
        if (portalType == 696006 || user.IsAdmin == 1)
        {
            isAdmin = true;
        }
    }
}

<div class="form">
    <div class="head headgrad" id="outlinehead">
        <div class="dyntitleConfig" style="float: left;">@Resources.Resource.OutlineRouteDetails</div>
        <span aria-hidden="true" data-icon="&#xe0f3;" id="span-close" class="span-close"></span>
        <form action="../Generic/HelpBuilder" id="form_html_helpbuilder" method="post" novalidate="novalidate" style="width:auto !important;float:right;" target="_blank">
            @if (isAdmin)
            {
                <span id="span-Edit_help" title="Create Help"></span>
            }
            <input id="url_html" name="url" type="hidden" value="">
            <input id="flag" name="flag" type="hidden" value="">
        </form>
        <span id="span-help" title="Help"></span>
    </div>
    <div class="body" id="outlinebody">
        <span class="PopupHelpName" id="OutLineRouteDetails"></span>
        <div id="outline_tbl_route_details" style="margin-left: 12px">


            <table class="table" style="float: left; width: 390px">
                <tr>
                    <td class="width130"><span>@Resources.Resource.Routename *</span></td>
                    <td>
                        @Html.TextBoxFor(m => m.routePartDetails.routeName, new { @id = "Routename", @tabindex = 1, @maxlength = "200" })           @Html.ValidationMessageFor(m => m.routePartDetails.routeName, null, new { @class = "error", })
                        <br />
                        <span class="error" id="RN_validatn"></span>
                    </td>
                </tr>
                @{
                    if (ViewBag.IsTextualRouteType == true)
                    {
                        <tr>
                            <td class="width130">@Resources.Resource.RouteDescription</td>
                            <td>
                                @Html.TextAreaFor(m => m.routePartDetails.routeDescr, new { @id = "routeDescr", @tabindex = 2, @class = "textarea_my" })
                            </td>
                        </tr>
                    }


                    if (ViewBag.IsTextualRouteType != true)
                    {

                        <tr>
                            <td class="width100"><span>PointType</span></td>
                            <td>
                                <select id="Pointtype" style="width:100px; height: 25px" class="dropdown" ;tabindex="3">
                                    <option selected>Start</option>
                                    <option>End</option>
                                </select>
                                @if (ViewBag.IsStartAndEndPointOnly != true)
                                {
                                    <input type="button" id="AddWaypoint" value="Add viapoint" style="width:129px; height: 25px;margin-left:4px;display:none" class="create btngrad btnrds btnbdr" ;tabindex="4" />
                                }

                            </td>

                        </tr>

                        <tr>
                            <td class="width100">   </td>
                            <td style="text-align:right; ">
                                <div id="deleteway"> <input type="button" value="Delete viapoint" id="DeleteWaypoint" style="width:129px; height: 25px;margin-left:104px;" class="create btngrad btnrds btnbdr" ;tabindex="5" /></div>
                            </td>

                        </tr>
                        <tr>
                            <td style="vertical-align:top"><span id="GroupboxDetails" class="groupbox_title">@Resources.Resource.StartPointDetails</span></td>
                            <td><span id="L_validation" class="error"></span></td>
                        </tr>
                        if (ViewBag.IsStartAndEndPointOnly != true)
                        {
                            <tr>
                                <td class="tblbdrtop tblbdrleft tblbdrbottum">Full address</td>
                                <td class="tblbdrtop tblbdrright tblbdrbottum">
                                    @Html.TextBoxFor(m => m.routePartDetails.startDesc, new { @autocomplete = "on", @class = "serchlefttxtone AutocompleteElement", @url = "../QAS/Search", @id = "startDesc", @origin = "outline", @tabindex = 6, @disabled = true })           @Html.ValidationMessageFor(m => m.routePartDetails.startDesc, null, new { @class = "error" })

                                    <br />    <span class="error" id="SN_validatn"></span>

                                </td>
                            </tr>

                            @*<tr style="display:none">
                                    <td class="tblbdrleft">@Resources.Resource.Address</td>
                                    <td class="tblbdrright"><div class="contactwrapper">@Html.TextBoxFor(m => m.routePartDetails.startLocationAddress, new { @id = "locationAddress", @tabindex = 7 })   <button class="btn" id="searchcontactbtn" ></button></div>           @Html.ValidationMessageFor(m => m.routePartDetails.startLocationAddress, null, new { @class = "error" })</td>
                                </tr>
                                <tr  style="display:none">
                                    <td class="tblbdrbottum tblbdrleft">@Resources.Resource.ContactDetails</td>
                                    <td class="tblbdrbottum tblbdrright">@Html.TextBoxFor(m => m.routePartDetails.startLocationContact, new { @id = "locationContact", @tabindex = 8 })           @Html.ValidationMessageFor(m => m.routePartDetails.startLocationContact, null, new { @class = "error" })</td>
                                </tr>*@
                        }
                        else
                        {

                            <tr>
                                <td class="tblbdrtop tblbdrleft tblbdrbottum">Full address </td>
                                <td class="tblbdrtop tblbdrright tblbdrbottum tblbdrright">
                                    @Html.TextBoxFor(m => m.routePartDetails.startDesc, new { @autocomplete = "on", @class = "serchlefttxtone AutocompleteElement", @url = "../QAS/Search", @id = "startDesc", @origin = "outline", @tabindex = 6, @disabled = true })           @Html.ValidationMessageFor(m => m.routePartDetails.startDesc, null, new { @class = "error" })

                                    <br />    <span class="error" id="SN_validatn"></span>

                                </td>
                            </tr>
                        }
                    }
                }

            </table>

            <div id="div_save" style="width: 390px">

                <table class="table" style="float: left; width: 390px">
                    <tr>
                        <td class="width130" style="text-align:right">
                            <div id="div_saving" ; style="text-align:right"><img src="~/Content/Images/Common/gallery-dark-loading.gif" ; /></div>
                        </td>
                        <td style="width:110px; text-align:center">
                            @{ if (Session["plannedRouteId"].ToString() != null && Session["plannedRouteId"].ToString() != "0")
                                {
                                    <div id="Savenew" ;style="float: right; width: 110px">Save as new  @Html.CheckBoxFor(m => m.routePartDetails.SaveAsNew, new { @id = "SaveAsNew", @Style = "" })</div>
                                } }
                        </td>
                        <td style="float: right;">
                            <input type="button" id="outline_btn_save" value="Save" class=" nextnorightmargin btngrad btnrds btnbdr table_no_margin" aria-hidden="true" data-icon="&#xe0f4; " tabindex="9" />
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>
<div id="contactpopup"></div>
<div>
    <input type="hidden" value="@ViewBag.CandId" id="hhhh" name="hhhh" />
    @Html.Hidden("StartLocationDescr", "")
    @Html.Hidden("StartEasting", "")
    @Html.Hidden("StartNorthing", "")

    @Html.Hidden("EndLocationDescr", "")
    @Html.Hidden("EndEasting", "")
    @Html.Hidden("EndNorthing", "")

</div>

@{
    STP.Domain.Routes.RouteModel.RoutePart objRoutePart = new STP.Domain.Routes.RouteModel.RoutePart();

}
<script src="~/Scripts/jquery.validate.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Common/MasterPage/jquery.uiControls.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/SOApplication/jQuery.SOApplication.js?V@(Session["ProjectVersion"])"></script>
@*<script src="~/Scripts/Common/Layout/ifx.AutocompleteControl.js?V@(Session["ProjectVersion"])"></script>*@
@*@System.Web.Optimization.Scripts.Render("~/bundles/OutlineRouteDetails")*@
@{
<input type="hidden" value="@ViewBag.IsStartAndEndPointOnly" id="hf_IsStartAndEndPointOnly" name="hf_IsStartAndEndPointOnly" />
<input type="hidden" value="@ViewBag.IsTextualRouteType" id="hf_IsTextualRouteType" name="hf_IsTextualRouteType" />
    @Html.Hidden("hf_RouteFlag", Session["RouteFlag"])
    @Html.Hidden("hf_plannedRouteId", Session["plannedRouteId"])
    @Html.Hidden("hf_modelRoutePart", Html.Raw(Json.Encode(Model)))
    <input type="hidden" value="@Html.Raw(Json.Encode(ViewBag.rp))" id="hf_rp" name="hf_rp" />
}
<script src="~/Scripts/Routes/OutlineRouteDetails.js?V@(Session["ProjectVersion"])"></script>
