@model STP.Domain.MovementsAndNotifications.Notification.NotificationGeneralDetails
@using System.Globalization
@using STP.Domain.VehiclesAndFleets.Configuration;
@using STP.Domain.Workflow
@using STP.Common.Enums
@using STP.Domain.VehiclesAndFleets
@{
    var planMovePayLoad = new PlanMvmntPayLoad();
    var MovementTypeClass = new VehicleMovementType();
    bool requireVR1 = false;
    bool requireSO = false;
    if (ViewBag.PlanMvmntPayLoad != null)
    {
        planMovePayLoad = (PlanMvmntPayLoad)ViewBag.PlanMvmntPayLoad;
        MovementTypeClass = (VehicleMovementType)planMovePayLoad.MvmntType;
        requireVR1 = planMovePayLoad.RequireVr1;
        requireSO = planMovePayLoad.RequireSO;
    }

}
<div class="overview">

    <div class="row mt-4 main-entry">
        <div class="col-lg-6 col-md-12 col-sm-12">
            <div class="row mb-2">
                <div class="col-sm-4 col-md-4 col-lg-4 pr-0">
                    <label class="text-normal">Reference Number</label>
                </div>
                <div class="col-sm-4 col-md-6 col-lg-6 input-field edit-normal">
                    @Model.MyReference
                    @Html.Hidden("HaulierReference", Model.MyReference)
                </div>
            </div>
            <div class="row mb-2">

                @{
                    if (MovementTypeClass.VehicleClass == (int)VehicleEnums.VehicleClassificationType.VehicleSpecialOrder
                            && MovementTypeClass.MovementType == (int)MovementType.notification)
                    {
                        <div class="col-sm-4 col-md-4 col-lg-4 pr-0">
                            <label class="text-normal">VSO Number</label>
                        </div>
                        <div class="col-sm-4 col-md-6 col-lg-6 input-field edit-normal">
                            @Model.VSONumber
                            @Html.Hidden("VSONumber", Model.VSONumber)
                        </div>
                    }
                    else if (MovementTypeClass.MovementType == (int)MovementType.notification && requireVR1)
                    {
                        <div class="col-sm-4 col-md-4 col-lg-4 pr-0">
                            <label class="text-normal">VR1 Reference Number</label>
                        </div>
                        <div class="col-sm-4 col-md-6 col-lg-6 input-field edit-normal">
                            @Model.VR1Number
                            @Html.Hidden("VR1Number", Model.VR1Number)
                        </div>
                    }
                    else if (MovementTypeClass.MovementType == (int)MovementType.notification && requireSO)
                    {
                        <div class="col-sm-4 col-md-4 col-lg-4 pr-0">
                            <label class="text-normal">SO Number</label>
                        </div>
                        <div class="col-sm-4 col-md-6 col-lg-6 input-field edit-normal">
                            @Model.SONumbers
                            @Html.Hidden("VSONumber", Model.SONumbers)
                        </div>
                    }
                }
            </div>
            <div class="row mb-2">
                <div class="col-sm-4 col-md-6 col-lg-4 pr-0">
                    <label class="text-normal">Operators License</label>
                </div>
                <div class="col-sm-4 col-md-6 col-lg-6 input-field edit-normal">
                    @Model.HaulierOprLicence
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-sm-4 col-md-6 col-lg-4 pr-0">
                    <label class="text-normal">From Summary</label>
                </div>
                <div class="col-sm-4 col-md-6 col-lg-6 input-field edit-normal">
                    @Model.FromSummary
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-sm-4 col-md-6 col-lg-4 pr-0">
                    <label class="text-normal">To Summary</label>
                </div>
                <div class="col-sm-4 col-md-6 col-lg-6 input-field edit-normal">
                    @Model.ToSummary
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-sm-4 col-md-4 col-lg-4 pr-0">
                    <label class="text-normal">Date From</label>
                </div>
                <div class="col-sm-4 col-md-6 col-lg-6 input-field text-normal edit-normal">
                    @{CultureInfo ukCulture = new CultureInfo("en-GB");}
                    @Model.MovementDateFrom
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-sm-4 col-md-4 col-lg-4 pr-0">
                    <label class="text-normal">Date To</label>
                </div>
                <div class="col-sm-4 col-md-6 col-lg-6 input-field text-normal edit-normal">
                    @Model.MovementDateTo
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-sm-4 col-md-4 col-lg-4 pr-0">
                    <label class="text-normal">Client (Not visible to other users)</label>
                </div>
                <div class="col-sm-4 col-md-6 col-lg-6 input-field text-normal edit-normal">
                    @Model.ClientName
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-sm-4 col-md-4 col-lg-4 pr-0">
                    <label class="text-normal">Number of movements</label>
                </div>
                <div class="col-sm-2 col-md-2 col-lg-2 input-field text-normal edit-normal">
                    @Model.NoOfMovements
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-sm-4 col-md-4 col-lg-4 pr-0">
                    <label class="text-normal">Maximum number of pieces being moved in any load</label>
                </div>
                <div class="col-sm-2 col-md-2 col-lg-2 input-field text-normal edit-normal">
                    @Model.MaxPiecesPerLoad
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-sm-4 col-md-4 col-lg-4 pr-0">
                    <label class="text-normal">Acting on behalf of</label>
                </div>
                <div class="col-sm-2 col-md-2 col-lg-2 input-field text-normal edit-normal">
                    @Model.ActingOnBehalfOf
                </div>
            </div>
            <div class="row mb-2">
                <div class="col-sm-4 col-md-4 col-lg-4 pr-0">
                    <label class="text-normal">Do you have indemnity?</label>
                </div>
                <div class="col-sm-4 col-md-1 col-lg-1 input-field text-normal edit-normal">
                    @if (Model.IndemnifyFlag)
                    {
                        <span>Yes</span>
                    }
                    else
                    {
                        <span>No</span>
                    }
                </div>
                @*<div class="col-sm-4 col-md-4 col-lg-4" id="table-head">
                        <span id="table-head">
                            <span class="details pl-3 pr-3" style="color:rgba(39, 87, 149, 1);">
                                Show
                                idemnification
                            </span>
                            <img src="assets/images/down-chevlon-filter.svg" width="15"
                                 style="margin-top: -16px;">
                        </span>
                    </div>*@
            </div>
        </div>
        <div class="col-lg-6 col-md-12 col-sm-12 pr-8">
            <div class="row pb-4">
                <label class="text-normal pb-3 pl-0">
                    Load description, including net dimensions
                    (length, width, height and weight)
                </label>
                @Html.TextAreaFor(m => m.LoadDescription, new { @cols = "3", @rows = "8", @id = "LoadDescription", @class = "multiLineTextBox txtmultiwidth edit-normal", @maxlength = "1000", @disabled = "disabled" })
            </div>
            <div class="row pb-4">
                <label class="text-normal pb-3 pl-0">Notes to be included in notification</label>
                @Html.TextAreaFor(m => m.Notes, new { @maxlength = "10000", @id = "Notes", @cols = "3", @rows = "5", @class = "multiLineTextBox txtmultiwidth edit-normal", @disabled = "disabled" })
            </div>
            <div class="row">
                <label class="text-normal pb-3 pl-0">Notes on escort</label>
                @Html.TextAreaFor(m => m.NotesOnEscort, new { @cols = "3", @id = "NotesOnEscort", @class = "multiLineTextBox txtmultiwidth edit-normal", @maxlength = "500", @disabled = "disabled" })
            </div>
        </div>
    </div>

</div>
