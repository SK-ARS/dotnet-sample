
@model STP.Domain.VehicleAndFleets.Component.AxleValidator
@using STP.Domain.VehiclesAndFleets.Component;
@*<h5>Edit  Axle</h5>*@
@{
    int type = ViewBag.movementtype != null ? (int)ViewBag.movementtype : 0;
    int axleCount = ViewBag.AxleCount;
    string range = ViewBag.AxleWeightTolerance;
    @Html.Hidden("axleweight_range", range);

    int configFlag = ViewBag.IsFromConfig;
    @Html.Hidden("hiddenConfigFlag", configFlag);
    if (configFlag == 0)
    {
        @Html.Hidden("ShowComponent", 1)
    }
    else
    {
        @Html.Hidden("ShowComponent", 0)
    }
    int componentId = ViewBag.componentId;
    string compIds = ViewBag.compIds;
    bool isLastComponent = ViewBag.IsLastComponent;
    bool isvr1 = ViewBag.isvr1 != null ? (bool)ViewBag.isvr1 : false;
    bool IsTyreSizeRequired = Model.IsTyreSizeRequired;
    bool IsTyreCentreSpacingRequired = Model.IsTyreCentreSpacingRequired;
}

@{
    int? unitValue = 1;
    if (Session["UserInfo"] != null)
    {
        var sessionValues = (STP.Domain.SecurityAndUsers.UserInfo)Session["UserInfo"];
        unitValue = sessionValues.VehicleUnits;
        @Html.Hidden("UnitValue", unitValue);
    }
    @Html.Hidden("UnitValue", unitValue);
}

@Html.Hidden("ConfigTyreSpace", @Model.IsConfigureTyreCentreSpacing)
@Html.Hidden("IsTyreSizeRequired", IsTyreSizeRequired)
@Html.Hidden("IsTyreCentreSpacingRequired", IsTyreCentreSpacingRequired)
@Html.Hidden("isvr1", isvr1)

@*Data to edit *@

@{
    List<Axle> listAxle = null;
    if (ViewBag.AxleList != null)
    {
        listAxle = new List<Axle>();
        listAxle = (List<Axle>)ViewBag.AxleList;
        if (listAxle.Count == 0)
        {
            listAxle = null;
        }
    }
    var maxNoOfWheelsGlobal = listAxle != null ? listAxle.Max(x => x.NoOfWheels) : 0;


}
<style>
    /* .AxleComponent tr:nth-child(even) {
        background-color: rgb(213 223 234) !important;
    }*/

    #tbl_Axle th:last-child {
        background-color: rgb(213 223 234) !important;
    }

    .bold {
        font-weight: bold;
    }
</style>


<div class="individualComponentAxle">
    <div class="images mb-2">

        @if (axleCount > 0)
        {
            if (type == 270006 || type == 27007 || type == 270110 || type == 270111 || type == 270156 || type == 270112 || type == 270113 || type == 270114 || type == 270116 || type == 270117)
            {
                <span class="validationError"></span>
                <div id="div_tyre_Spce_msg">
                    <label class="text-normal">
                        <b>Note:</b> Enter the tyre spacing between the centres of the tyres. If tyre spacing is less than 460mm then these tyres are to be treated as one.
                    </label>
                </div>
            }
            <div>
                @if (axleCount > 0)
                {
                    <a href="javascript:void(0);" title="Expand axle details" data-placement="top" class="btnOpenAxlePopUp" axledropcount="1" componentid="@componentId" style="float: right; margin-top: -21px; z-index: 999; display: flex; position: relative; ">
                        <i class="fa fa-external-link" aria-hidden="true"></i>
                    </a>
                }
            </div>
            <div class="axlewrapper">
                <div class="error invalid-feedback" style="display: block !important;"></div>
                <div class="axlebasic">
                    <div class="main-table AxleComponent" id="vehicle-table" style=" overflow: hidden; padding-right: 0;">
                        <div class="row">
                            <div class="@(axleCount==1?"col-sm-12 col-md-12 col-lg-12":"col-sm-12 col-md-12 col-lg-12") pr-0 axle-table-contents-container" style="@(axleCount==1?"":"width: 100%;")">
                                <div class="axlebasic last-col-frozen-container">
                                    <table class="axle" id="tbl_Axle" data-componentid="@componentId" data-compids="@compIds">
                                        <thead>
                                            <tr>
                                                <th class="headgrad" rowspan="2">Axle</th>

                                                @if (type != 0 && type != 270001 && type != 270102 && type != 270154)
                                                {
                                                    <th class="headgrad" rowspan="2">
                                                        <b>
                                                            Number <br>
                                                            of
                                                            <br>
                                                            Wheels
                                                        </b>
                                                        <span class="bold">*</span>

                                                    </th>
                                                }
                                                else
                                                {
                                                    <th class="headgrad" rowspan="2">

                                                        Number <br>
                                                        of
                                                        <br>
                                                        Wheels



                                                    </th>
                                                }

                                                @if (type != 0 && type != 270001 && type != 270102 && type != 270154)
                                                {
                                                    <th class="headgrad" rowspan="2">
                                                        <b>
                                                            Axle Weight
                                                            <br>
                                                            including Load
                                                            <br />
                                                            (Kg)
                                                        </b>
                                                        <span class="bold">*</span>
                                                    </th>
                                                }
                                                else
                                                {
                                                    <th class="headgrad" rowspan="2">

                                                        Axle Weight
                                                        <br>
                                                        including Load
                                                        <br />
                                                        (Kg)


                                                    </th>
                                                }

                                                @if (unitValue == 692001)
                                                {

                                                    if (type != 0 && type != 270001 && type != 270102 && type != 270154)
                                                    {
                                                        <th class="headgrad" rowspan="2">
                                                            <b>
                                                                Distance to
                                                                <br>
                                                                Next Axle<br>
                                                                (m)
                                                            </b>
                                                            <span class="bold">*</span>
                                                        </th>
                                                    }


                                                    else
                                                    {
                                                        <th class="headgrad" rowspan="2">
                                                            Distance to
                                                            <br>
                                                            Next Axle<br>
                                                            (m)
                                                        </th>
                                                    }

                                                }
                                                else if (unitValue == 692002)
                                                {


                                                    if (type != 0 && type != 270001 && type != 270102 && type != 270154)
                                                    {
                                                        <th class="headgrad" rowspan="2">
                                                            <b>
                                                                Distance to
                                                                <br>
                                                                Next Axle<br>
                                                                (feet)
                                                            </b>
                                                            <span class="bold">*</span>
                                                        </th>
                                                    }
                                                    else
                                                    {
                                                        <th class="headgrad" rowspan="2">

                                                            Distance to
                                                            <br>
                                                            Next Axle<br>
                                                            (feet)


                                                        </th>
                                                    }

                                                }

                                                @*Unit 'in metres' added*@

                                                @*TyreSize changes made here*@


                                                @if (Model.IsConfigureTyreCentreSpacing)
                                                {
                                                    if (Model.IsTyreSizeRequired)
                                                    {
                                                        <th class="headgrad" rowspan="2">
                                                            <b>
                                                                Tyre Sizes
                                                            </b>
                                                            <span class="bold">*</span>
                                                        </th>
                                                    }
                                                    else
                                                    {
                                                        <th class="headgrad" rowspan="2">
                                                            Tyre Sizes
                                                        </th>
                                                    }


                                                    if (Model.IsTyreCentreSpacingRequired)
                                                    {
                                                        <th class="headgrad2 sub1" colspan="1" style="@(maxNoOfWheelsGlobal <= 0 ? "display:none" : "")">
                                                            <b>
                                                                Tyre Centre Spacing
                                                            </b>
                                                            <span class="bold">*</span>

                                                        </th>
                                                    }
                                                    else
                                                    {
                                                        <th class="headgrad2 sub1" colspan="1" style="@(maxNoOfWheelsGlobal <= 0 ? "display:none" : "")">
                                                            Tyre Centre Spacing
                                                        </th>
                                                    }
                                                }



                                                @if (axleCount > 1)
                                                {
                                                    <th colspan="@(maxNoOfWheelsGlobal <= 0 ? "2" : "1")" style="background-color: rgb(213 223 234) !important;"></th>
                                                }
                                            </tr>
                                            @if (Model.IsConfigureTyreCentreSpacing)
                                            {
                                                <tr class="sub sub1 tyreSpaceCnt">
                                                    <th class="headgrad1"></th>
                                                </tr>
                                            }

                                        </thead>
                                        <tbody>
                                            @if (listAxle == null)
                                            {
                                                for (int i = 1; i <= axleCount; i++)
                                                {
                                                    <tr>
                                                        <td>@i</td>

                                                        <td style="text-align:left;">@Html.TextBox("wheels", "", new { isrequired = 1, range = @Model.wheels.getRangeString(), @class = "axletextWheel frmbdr nowheels right_text_content blur-valid-wheel txt-no-of-wheels", maxlength = 5, @validationmsg = "Number of wheels" })</td>
                                                        <td style="text-align:left;">@Html.TextBox("axleweight", null, new { isrequired = 1, range = @Model.weight.getRangeString(), @class = "axletext frmbdr axleweight right_text_content blur-valid-weight txt-axle-weight", maxlength = 8, @validationmsg = "Axle weight", style = "width:auto;" })</td>
                                                        <td style="text-align:left;">

                                                            @if (i != axleCount)
                                                            {
                                                                @Html.TextBox("distancetoaxle", null, new { isrequired = 1, @class = "axletext frmbdr disttonext right_text_content componentKeyUpValidation txt-distancetoaxle", maxlength = 6, @validationmsg = "Distance to next axle" })
                                                            }
                                                            else if (!isLastComponent)
                                                            {
                                                                @Html.TextBox("distancetoaxle", null, new { isrequired = 1, @class = "axletext frmbdr disttonext right_text_content componentKeyUpValidation txt-distancetoaxle", maxlength = 6, @validationmsg = "Distance to next axle" })
                                                            }
                                                        </td>

                                                        @*TyreSize changes made here*@


                                                        @if (Model.IsConfigureTyreCentreSpacing)
                                                        {
                                                            <td class="cstyreSize" style="text-align:left;">@Html.TextBox("tyresize", null, new { isrequired = 1, range = "", @class = " frmbdr tyresize right_text_content blur-valid-tyre-size txt-tyresize", maxlength = 30, @validationmsg = "Tyre size", style = "width:auto;" })</td>

                                                            @*<td class="cstable">@Html.TextBox("q", null, new { @class = "axletext frmbdr tyrec1", maxlength = 5 })</td>*@

                                                            <td class="cstable"></td>
                                                            @*<td>Metres</td>*@
                                                        }
                                                        @if (axleCount > 1)
                                                        {
                                                            if (i == 1)
                                                            {
                                                                <td class="headcol"><button type="button" class="btn_CopyAll btn outline-btn-primary SOAButtonHelper btn-layout1" aria-hidden="true" data-icon="&#xe027;" componentId="@componentId">COPY TO ALL</button></td>
                                                            }
                                                            else
                                                            {
                                                                var style = !(string.IsNullOrEmpty(compIds)) ? "opacity:0;" : "";
                                                                <td class="headcol"><button style="@style" type="button" class="btn_CopyFromPrev btn outline-btn-primary SOAButtonHelper btn-layout1" aria-hidden="true" data-icon="&#xe078;" arg1="@i" componentId="@componentId">COPY FROM PREVIOUS</button></td>
                                                            }
                                                        }
                                                    </tr>
                                                }
                                            }
                                            else
                                            {
                                                var maxNoOfWheels = listAxle.Max(x => x.NoOfWheels);
                                                int AxleNumIdTemp = 0;
                                                int counter = 1;
                                                foreach (var item in listAxle)
                                                {

                                                    <tr data-componentid="@item.ComponentId">

                                                        @{
                                                            if (string.IsNullOrEmpty(compIds))
                                                            {
                                                                <td>@item.AxleNumId</td>
                                                            }
                                                            else
                                                            {//Show All axles in a single popup
                                                                AxleNumIdTemp++;
                                                                <td>@AxleNumIdTemp</td>
                                                            }
                                                        }

                                                        <td style="text-align:left;">@Html.TextBox("wheels", item.NoOfWheels == 0 ? "" : item.NoOfWheels.ToString(), new { isrequired = 1, range = @Model.wheels.getRangeString(), @class = "axletextWheel frmbdr nowheels right_text_content blur-valid-wheel txt-no-of-wheels", maxlength = 5, @validationmsg = "Wheel" })</td>
                                                        <td style="text-align:left;">@Html.TextBox("axleweight", item.AxleWeight == 0 ? "" : item.AxleWeight.ToString(), new { isrequired = 1, range = @Model.weight.getRangeString(), @class = "axletext frmbdr axleweight right_text_content blur-valid-weight  txt-axle-weight", maxlength = 8, @validationmsg = "Axle weight", style = "" })</td>
                                                        <td>

                                                            @if ((!string.IsNullOrEmpty(compIds) && AxleNumIdTemp != axleCount) || (string.IsNullOrEmpty(compIds) && item.AxleNumId != axleCount))
                                                            {
                                                                @Html.TextBox("distancetoaxle", item.DistanceToNextAxle == 0 ? "" : item.DistanceToNextAxle.ToString(), new { isrequired = 1, @class = "axletext frmbdr disttonext right_text_content txt-distancetoaxle", maxlength = 5, @validationmsg = "Distance to next axle" })
                                                            }
                                                            else if (!isLastComponent)
                                                            {
                                                                @Html.TextBox("distancetoaxle", item.DistanceToNextAxle == 0 ? "" : item.DistanceToNextAxle.ToString(), new { isrequired = 1, @class = "axletext frmbdr disttonext right_text_content txt-distancetoaxle", maxlength = 5, @validationmsg = "Distance to next axle" })
                                                            }
                                                        </td>
                                                        @if (Model.IsConfigureTyreCentreSpacing)
                                                        {
                                                            <td class="cstyreSize tyre_size" style="text-align:left;">@Html.TextBox("tyresize", item.TyreSize, new { isrequired = 0, range = "", @class = "frmbdr tyresize right_text_content blur-valid-tyre-size txt-tyresize", maxlength = 30, @validationmsg = "Tyre size", style = "" })</td>

                                                            {
                                                                int whlCount = 0;
                                                                int noOfWheelCurrent = item.NoOfWheels;
                                                                string[] wheelSpace = new string[] { };
                                                                if (!string.IsNullOrEmpty(item.TyreCenters))
                                                                {
                                                                    wheelSpace = item.TyreCenters.Split(',');
                                                                }
                                                                whlCount = wheelSpace.Count();
                                                                if (noOfWheelCurrent > whlCount)
                                                                {
                                                                    for (int i = whlCount; i < noOfWheelCurrent - 1; i++)
                                                                    {
                                                                        Array.Resize(ref wheelSpace, wheelSpace.Length + 1);
                                                                        wheelSpace[wheelSpace.Length - 1] = "";
                                                                    }
                                                                    whlCount = wheelSpace.Count();
                                                                }
                                                                for (int i = 0; i < maxNoOfWheels - 1; i++)
                                                                {
                                                                    if (i <= whlCount - 1)
                                                                    {
                                                                        <td class="cstable wheel_space">@Html.TextBox("q" + i, wheelSpace[i] != "0" ? wheelSpace[i] : "", new { @class = "axletext frmbdr tyrec1 right_text_content  txt-wheel-count", maxlength = 5, style = "" })</td>
                                                                    }
                                                                    else
                                                                    {
                                                                        <td class="cstable wheel_space"></td>
                                                                    }
                                                                }

                                                                @*foreach (var whlSpace in wheelSpace)
                                                                    {
                                                                        <td class="cstable wheel_space">@Html.TextBox("q" + whlCount, wheelSpace[whlCount], new { @class = "axletext frmbdr tyrec1 right_text_content  txt-wheel-count", maxlength = 5, style = "" })</td>
                                                                        whlCount++;
                                                                    }*@
                                                            }

                                                        }
                                                        @if (axleCount > 1)
                                                        {
                                                            if (counter == 1)
                                                            {
                                                                <td class="headcol"><button type="button" class="btn_CopyAll btn outline-btn-primary SOAButtonHelper btn-layout1" aria-hidden="true" data-icon="&#xe027;" componentId="@componentId">COPY TO ALL</button></td>
                                                            }
                                                            else
                                                            {
                                                                var style = !(string.IsNullOrEmpty(compIds)) ? "opacity:0;" : "";
                                                                <td class="headcol"><button style="@style" type="button" class="btn_CopyFromPrev btn outline-btn-primary SOAButtonHelper btn-layout1" aria-hidden="true" data-icon="&#xe078;" arg1="@counter" componentId="@componentId">COPY FROM PREVIOUS</button></td>
                                                            }
                                                            counter++;
                                                        }
                                                    </tr>

                                                }

                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            @if (axleCount > 1)
                            {
                                @*<div class="col-sm-2 col-md-2 col-lg-2 pl-0">
                                        <table style="width: auto; float: left;" class="tblaxlebtn">
                                            <thead>
                                                <tr>
                                                    <th class="headgrad headgradBtn" style=" padding: 0px !important;"></th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @for (int i = 0; i < axleCount; i++)
                                                {
                                                    <tr>
                                                        <td>
                                                            @if (i == 0)
                                                            {
                                                                <button type="button" class="btn_CopyAll btn outline-btn-primary SOAButtonHelper btn-layout1" aria-hidden="true" data-icon="&#xe027;" componentId="@componentId">COPY TO ALL</button>
                                                            }
                                                            else
                                                            {
                                                                var style = !(string.IsNullOrEmpty(compIds)) ? "opacity:0;" : "";
                                                                <button style="@style" type="button" class="btn_CopyFromPrev btn outline-btn-primary SOAButtonHelper btn-layout1" aria-hidden="true" data-icon="&#xe078;" arg1="@i" componentId="@componentId">COPY FROM PREVIOUS</button>
                                                            }
                                                        </td>
                                                    </tr>

                                                }
                                            </tbody>
                                        </table>
                                    </div>*@
                            }
                        </div>
                    </div>
                </div>
            </div>

        }


    </div>
</div>



<style>
    #tbl_Axle th:last-child {
        background-color: rgb(213 223 234) !important;
    }

    .axlebtncpy {
        float: left;
        height: 2rem;
        width: 5rem;
        color: #212181;
        font-size: 9px;
        margin-bottom: 2px;
        margin-top: 2px;
        margin-right: 0px;
        border-radius: 10px;
    }

    #vehicle-table th {
        padding-left: 10px !important;
    }

    .btn-layout1 {
        width: 8rem !important;
        font-size: 0.6rem;
        padding: 0.54rem 0.2rem !important;
        float: right;
    }

    .vehicle-setting td {
        padding: 0.9rem !important;
    }

    .tblaxlebtn td {
        padding: 0.623rem !important;
    }

    .axlebasic::-webkit-scrollbar {
        width: 20px;
        height: 20px;
    }

    /*#vehicle-table {
        padding-right: 8% !important;
    }*/
    .txt-no-of-wheels {
        width: 25px !important;
    }

    .txt-axle-weight {
        width: 60px !important;
    }

    .txt-distancetoaxle {
        width: 50px !important;
    }

    .txt-tyresize {
        width: 125px !important;
    }

    .txt-wheel-count {
        width: 30px !important;
    }
</style>

@*<script src="~/Scripts/Vehicle/unitConversion.js?V@(Session["ProjectVersion"])"></script>
    <script src="~/Scripts/VehicleComponent/jQuery.Comp.Axle.js?V@(Session["ProjectVersion"])"></script>
    <script src="~/Scripts/CspJs/Vehicle/AxleComponent.js?V@(Session["ProjectVersion"])"></script>
    <script src="~/Scripts/VehicleComponent/jQuesry.Comp.General.js?V@(Session["ProjectVersion"])"></script>*@
