@using System.Web.Optimization
@model STP.Domain.VehicleAndFleets.Component.VehicleComponent

@{
    int rowCount = Model.VehicleParamList.Count;
    int secondSet = rowCount / 2;
    int firstRowSet = rowCount - secondSet;
}

@*check tractor or trailer*@

@{
    bool isTractor = Model.vehicleCompType.IsTractor;
    @Html.Hidden("Tractor", isTractor);
    @Html.Hidden("axleweightRange");
}

@{
    int? unitValue = 1;
    if (Session["UserInfo"] != null)
    {
        var sessionValues = (STP.Domain.SecurityAndUsers.UserInfo)Session["UserInfo"];
        unitValue = sessionValues.VehicleUnits;
        @Html.Hidden("UnitValue", unitValue);
    }

    //unitValue = ViewBag.Units;
    @Html.Hidden("UnitValue", unitValue);
}

<div class="row mt-2 main-entry" id="div_component_general_page">
    @{
        int? componentId = ViewBag.ComponentId;

        //code done by nidhin for getting values
        int? vehicleSubTypeId = ViewBag.VehicleSubTypeId;
        int? vehicleTypeId = ViewBag.VehicleTypeId;
        int? movementId = ViewBag.MovementID;
        int? isFromConfigFlag = ViewBag.ChkIsFromConfig;
        string ImageName = ViewBag.ImageName;
        string CompImageName = ViewBag.CompImageName;

        TempData["VehicleSubTypeId"] = ViewBag.VehicleSubTypeId;
        TempData["vehicleTypeId"] = ViewBag.VehicleTypeId;
        TempData["movementId"] = ViewBag.MovementID;
        int IsFromConfig = Convert.ToInt16(TempData["IsFromConfig"]);
    }
    @*<input type="hidden" name="vehicleSubTypeId" value="@ViewBag.VehicleSubTypeId" />
        <input type="hidden" name="vehicleTypeId" value="@ViewBag.VehicleTypeId" />
        <input type="hidden" name="movementId" value="@ViewBag.MovementID" />*@
    @Html.Hidden("Component_Id", componentId)
    @Html.Hidden("vehicleSubTypeValue", vehicleSubTypeId)
    @Html.Hidden("vehicleTypeValue", vehicleTypeId)
    @Html.Hidden("movementTypeId", movementId)
    
    @Html.Hidden("IsEdit") @*Is Edit hidden field to determine whether are creating or editing*@

    @Html.Hidden("HiddenFormalName")

    @Html.Hidden("HiddenFromConfig", IsFromConfig)
    @if (IsFromConfig == 0)
    {
        @Html.Hidden("ShowComponent", 1)
    }
    else
    {
        @Html.Hidden("ShowComponent", 0)
    }
    @Html.Hidden("SetShowComponent", 1)
    @Html.Hidden("Imagename", ImageName)

    <label id="chars_left" class="error text-normal" style="color:red;"></label>
    @*Removed the header General Details*@
    <div class="col-lg-12 col-md-12 col-sm-12" id="div_general">
        @*<h5>General Details</h5>*@

        @Html.HiddenFor(model => model.IsConfigAxle, new { @class = "AxleConfig" })
        <form action="@Url.Action("CreateComponent", "Vehicle")">
            <div class="row">
                @if (componentId != null && componentId != 0)
                {
                    <div class="col-lg-2 col-md-2 col-sm-4 col-xs-12 card-image mb-5" id="divCompImage">
                        <div class="card" style="display:block;">
                            <img src="../Content/images/Common/MasterPage/componet_icons/@(CompImageName).jpg" alt="vehicle-1" style="mix-blend-mode: darken;">

                        </div>
                    </div>
                }
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 second-vehicle">
                    <div class="row mb-2">
                        <div class="col-lg-6 col-md-6 col-sm-12 second-vehicle" style="margin-right: 5%;">
                            @for (int i = 0; i < firstRowSet; i++)
                            {
                                if (Model.VehicleParamList[i].ParamModel != "Component Type")
                                {
                                    <div class="row mb-2 dynamic">
                                        <div class="col-sm-4 col-md-6 col-lg-6 pr-0">
                                            @if (Model.VehicleParamList[i].ParamModel != "Axle Spacing To Following")
                                            {
                                                <label class="text-normal">
                                                    @Html.Raw(Model.VehicleParamList[i].DisplayString)

                                                    @if (Model.VehicleParamList[i].IsRequired == 1)
                                                    {
                                                        <span>*</span>
                                                    }
                                                </label>
                                            }
                                            else if (!ViewBag.IsComponent && !ViewBag.IsLastComp)
                                            {
                                                <label class="text-normal">
                                                    @Html.Raw(Model.VehicleParamList[i].DisplayString)

                                                </label>
                                            }

                                        </div>
                                        <div class="col-sm-6 col-md-6 col-lg-6">
                                            @if (Model.VehicleParamList[i].InputType == "TEXTBOX")
                                            {
                                                if (Model.VehicleParamList[i].DropDownList.Count == 0)
                                                {
                                                    if (@Model.VehicleParamList[i].ParamModel == "Weight")
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr", @validationmsg = Model.VehicleParamList[i].ParamModel })
                                                    }
                                                    else if (@Model.VehicleParamList[i].ParamModel == "Internal Name" || @Model.VehicleParamList[i].ParamModel == "Formal Name")
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "frmbdr", @validationmsg = Model.VehicleParamList[i].ParamModel, @style = "width:12rem !important;" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "frmbdr", @validationmsg = Model.VehicleParamList[i].ParamModel })
                                                    }
                                                }

                                                else if (Model.VehicleParamList[i].ParamModel != "Axle Spacing To Following")
                                                {
                                                    if (unitValue == 692002)
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr componentKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, placeholder = "0'00''" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr", @validationmsg = Model.VehicleParamList[i].ParamModel })
                                                    }
                                                }
                                                else if (!ViewBag.IsComponent && !ViewBag.IsLastComp)
                                                {
                                                    if (unitValue == 692002)
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr componentKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, placeholder = "0'00''" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr", @validationmsg = Model.VehicleParamList[i].ParamModel})

                                                    }
                                                }

                                            }
                                            else if (Model.VehicleParamList[i].InputType == "TEXTAREA")
                                            {
                                                @Html.TextArea(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "frmbdr", @validationmsg = Model.VehicleParamList[i].ParamModel })
                                            }
                                            else if (Model.VehicleParamList[i].InputType == "LABEL")
                                            {
                                                @Html.Label(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { @class = "text-normal", @validationmsg = Model.VehicleParamList[i].ParamModel, @id = Model.VehicleParamList[i].ParamModel })
                                            }
                                            else if (Model.VehicleParamList[i].InputType == "CHECKBOX")
                                            {
                                                if (Model.VehicleParamList[i].ParamValue == "1")
                                                {
                                                    @Html.CheckBox(Model.VehicleParamList[i].ParamModel, true)
                                                }
                                                else
                                                {
                                                    @Html.CheckBox(Model.VehicleParamList[i].ParamModel, false)
                                                }
                                            }
                                            else if (Model.VehicleParamList[i].InputType == "DROPDOWN")
                                            {
                                                if (Model.VehicleParamList[i].IsRequired == 0 && Model.VehicleParamList[i].ParamValue == "0")
                                                {
                                                    @Html.TextBox(Model.VehicleParamList[i].ParamModel, null, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr axledrop clearValidation", @validationmsg = Model.VehicleParamList[i].ParamModel })
                                                }
                                                else
                                                {
                                                    @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr axledrop clearValidation", @validationmsg = Model.VehicleParamList[i].ParamModel })
                                                }                       

                                            }
                                           

                                            @if (Model.VehicleParamList[i].ParamModel != "Axle Spacing To Following")
                                            {
                                                if (Model.VehicleParamList[i].DropDownList.Count > 0)
                                                {
                                                    if (unitValue == 692001)
                                                    {
                                                        <label class="text-normal">m</label>
                                                    }
                                                    else if (unitValue == 692002)
                                                    {
                                                        <label class="text-normal">ft</label>
                                                    }

                                                }
                                                else if (@Model.VehicleParamList[i].ParamModel == "Weight"|| @Model.VehicleParamList[i].ParamModel == "TrainWeight")
                                                {
                                                    <label class="text-normal">kg</label>
                                                }
                                            }
                                            else if (!ViewBag.IsComponent && !ViewBag.IsLastComp)
                                            {
                                                if (Model.VehicleParamList[i].DropDownList.Count > 0)
                                                {
                                                    if (unitValue == 692001)
                                                    {
                                                        <label class="text-normal">m</label>
                                                    }
                                                    else if (unitValue == 692002)
                                                    {
                                                        <label class="text-normal">ft</label>
                                                    }

                                                }
                                                else if (@Model.VehicleParamList[i].ParamModel == "Weight"||@Model.VehicleParamList[i].ParamModel == "TrainWeight")
                                                {
                                                    <label class="text-normal">kg</label>
                                                }
                                            }

                                            @if (Model.VehicleParamList[i].ParamModel == "Formal Name")
                                            {
                                                <div class="error invalid-feedback" style="display: none !important;"></div>
                                            }
                                            else
                                            {
                                                <div class="error invalid-feedback" style="display: block !important;"></div>
                                            }
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        <div class="col-lg-5 col-md-5 col-sm-12 col-xs-12">
                            @for (int i = firstRowSet; i < rowCount; i++)
                            {
                                if (Model.VehicleParamList[i].ParamModel != "Component Type")
                                {
                                    <div class="row mb-2 dynamic">
                                        <div class="col-sm-4 col-md-6 col-lg-6 pr-0">
                                            @if (Model.VehicleParamList[i].ParamModel != "Axle Spacing To Following")
                                            {
                                                <label class="text-normal">
                                                    @Html.Raw(Model.VehicleParamList[i].DisplayString)

                                                    @if (Model.VehicleParamList[i].IsRequired == 1)
                                                    {
                                                        <span>*</span>
                                                    }
                                                </label>
                                            }
                                            else if (!ViewBag.IsComponent && !ViewBag.IsLastComp)
                                            {
                                                <label class="text-normal">
                                                    @Html.Raw(Model.VehicleParamList[i].DisplayString)

                                                    @*@if (Model.VehicleParamList[i].IsRequired == 1)
                                                        {
                                                            <span>*</span>
                                                        }*@
                                                </label>
                                            }
                                        </div>
                                        <div class="col-sm-4 col-md-5 col-lg-5 input-field">
                                            @if (Model.VehicleParamList[i].InputType == "TEXTBOX")
                                            {
                                                if (Model.VehicleParamList[i].DropDownList.Count == 0)
                                                {
                                                    if (@Model.VehicleParamList[i].ParamModel == "Weight")
                                                    {
                                                        if (unitValue == 692002)
                                                        {
                                                            @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr componentKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, placeholder = "0'00''" })
                                                        }
                                                        else
                                                        {
                                                            @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr", @validationmsg = Model.VehicleParamList[i].ParamModel })
                                                        }
                                                    }
                                                    else
                                                    {
                                                        if (unitValue == 692002)
                                                        {
                                                            @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "frmbdr componentKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, placeholder = "0'00''" })
                                                        }
                                                        else
                                                        {
                                                            @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "frmbdr", @validationmsg = Model.VehicleParamList[i].ParamModel })
                                                        }
                                                    }
                                                }
                                                else if (Model.VehicleParamList[i].ParamModel != "Axle Spacing To Following")
                                                {
                                                    if (unitValue == 692002)
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr componentKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, placeholder = "0'00''" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr", @validationmsg = Model.VehicleParamList[i].ParamModel })
                                                    }
                                                }
                                                else if (!ViewBag.IsComponent && !ViewBag.IsLastComp)
                                                {
                                                    if (unitValue == 692002)
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = 0, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr componentKeyUpValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, placeholder = "0'00''" })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = 0, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr", @validationmsg = Model.VehicleParamList[i].ParamModel})
                                                    }

                                                }

                                            }
                                            else if (Model.VehicleParamList[i].InputType == "TEXTAREA")
                                            {
                                                @Html.TextArea(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "frmbdr", @validationmsg = Model.VehicleParamList[i].ParamModel, })

                                            }
                                            else if (Model.VehicleParamList[i].InputType == "LABEL")
                                            {
                                                @Html.Label(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { @class = "text-normal", @id = Model.VehicleParamList[i].ParamModel })
                                            }
                                            else if (Model.VehicleParamList[i].InputType == "CHECKBOX")
                                            {
                                                if (Model.VehicleParamList[i].ParamValue == "1")
                                                {
                                                    @Html.CheckBox(Model.VehicleParamList[i].ParamModel, true)
                                                }
                                                else
                                                {
                                                    @Html.CheckBox(Model.VehicleParamList[i].ParamModel, false)
                                                }
                                            }
                                            else if (Model.VehicleParamList[i].InputType == "DROPDOWN")
                                            {
                                                if (Model.VehicleParamList[i].IsRequired == 0 && Model.VehicleParamList[i].ParamValue == "0")
                                                {
                                                    @Html.TextBox(Model.VehicleParamList[i].ParamModel, null, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr axledrop clearValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, placeholder = "0'00''" })
                                                }
                                                else
                                                {
                                                    @Html.TextBox(Model.VehicleParamList[i].ParamModel, Model.VehicleParamList[i].ParamValue, new { isrequired = @Model.VehicleParamList[i].IsRequired, datatype = @Model.VehicleParamList[i].ParamType, range = @Model.VehicleParamList[i].StrRange, maxlength = @Model.VehicleParamList[i].ParamMaxLength, @class = "unit_text frmbdr axledrop clearValidation", @validationmsg = Model.VehicleParamList[i].ParamModel, placeholder = "0'00''" })
                                                }
                                                @*string range = Model.VehicleParamList[i].StrRange;
            var splitString = range.Split(',');
            int initial = Convert.ToInt32(splitString[0]);
            int final = Convert.ToInt32(splitString[1]);

            <select class="axledrop unit form-control form-select" style="width: 72%;" id="@Model.VehicleParamList[i].ParamModel">

                <option>Select</option>
                @for (int j = initial; j <= final; j++)
                {
                    if (Model.VehicleParamList[i].ParamValue == j.ToString())
                    {
                        <option value="@j" selected="selected">@j</option>
                    }
                    else
                    {
                        <option value="@j">@j</option>
                    }
                }
            </select>*@

                                            }

                                            @if (Model.VehicleParamList[i].ParamModel != "Axle Spacing To Following")
                                            {
                                                if (Model.VehicleParamList[i].DropDownList.Count > 0)
                                                {
                                                    if (unitValue == 692001)
                                                    {
                                                        <label class="text-normal">m</label>
                                                    }
                                                    else if (unitValue == 692002)
                                                    {
                                                        <label class="text-normal">ft</label>
                                                    }

                                                }
                                                else if (@Model.VehicleParamList[i].ParamModel == "Weight" || @Model.VehicleParamList[i].ParamModel == "TrainWeight")
                                                {
                                                    <label class="text-normal">kg</label>
                                                }
                                            }
                                            else if (!ViewBag.IsComponent && !ViewBag.IsLastComp)
                                            {
                                                if (Model.VehicleParamList[i].DropDownList.Count > 0)
                                                {
                                                    if (unitValue == 692001)
                                                    {
                                                        <label class="text-normal">m</label>
                                                    }
                                                    else if (unitValue == 692002)
                                                    {
                                                        <label class="text-normal">ft</label>
                                                    }

                                                }
                                                else if (@Model.VehicleParamList[i].ParamModel == "Weight" || @Model.VehicleParamList[i].ParamModel == "TrainWeight")
                                                {
                                                    <label class="text-normal">kg</label>
                                                }
                                            }

                                            @*@if (Model.VehicleParamList[i].DropDownList.Count > 0)
        {
            int id = 0;
            <select class="unit frmbdr" >
            @foreach (var element in Model.VehicleParamList[i].DropDownList)
            {
                id++;
                <option value="@id">@element</option>
            }
            </select>
        }*@
                                            @*<span class="error"></span>*@
                                            <div class="error invalid-feedback" style="display: block !important;"></div>
                                        </div>

                                    </div>

                                }
                            }
                            <div class="row mb-2" id="Speed" style="display:none;">
                                <div class="col-sm-4 col-md-6 col-lg-6">
                                    <label class="text-normal">Travelling Speed</label>
                                </div>
                                <div class="col-sm-4 col-md-5 col-lg-4 input-field pr-0">
                                    @Html.TextBox("TravelSpeed", null, new { @class = "unit_text frmbdr pageKeyUpSpeedValidation", isrequired = 0, range = "1,50", maxlength = 5, datatype = "float", @validationmsg = "Travelling Speed"})
                                </div>
                                <div class="col-sm-4 col-md-5 col-lg-2 input-field pl-0">
                                    @Html.DropDownList("SpeedUnits", (SelectList)(ViewBag.SpeedUnits), "Select", new { @id = "SpeedUnits", @class = "unit-travelspeed frmbdr form-control form-select", @style = "width: 175%;" })
                                    @*<span class="error"></span>*@
                                    <div class="error invalid-feedback" style="display: block !important;"></div>
                                </div>
                                <br />
                            </div>
                        </div>

                        @*@if (!ViewBag.isBtnFlage)
                            {
                                <div style="width: 100%; float: left; margin-top: 10px;">

                                    @if (isFromConfigFlag == 1 && vehicleTypeId == 234003 && movementId == 270001)
                                    {
                                        <button class="btn_save btn btn-primary SOAButtonHelper ml2" aria-hidden="true" data-icon="&#xe12d;" type="button">Save</button>
                                    }
                                    else
                                    {
                                        <button class="btn_save btn btn-primary SOAButtonHelper ml2" aria-hidden="true" data-icon="&#xe12d;" type="button">Next</button>
                                    }
                                    <button id="btn_back_to_Config" class="btn_back_to_Config next btngrad btnrds btnbdr" aria-hidden="true" data-icon="&#xe119;" type="button" style="display: none;" >Back</button>
                                    <button id="btn_back_to_Config_main" class="btn_back_to_Config  create btngrad btnrds btnbdr" aria-hidden="true" data-icon="&#xe119;" type="button" style="display: none;" >Show Configuration Layout</button>

                                </div>
                            }*@
                    </div>
                </div>
            </div>

        </form>
    </div>

</div>
@*<div class="row mt-4">
        <div class="col-lg-12 col-md-12 col-sm-12" id="RegisterPage"></div>
    </div>*@
@*<div class="row mt-4">
        <div class="col-lg-12 col-md-12 col-sm-12" id="axlePage"></div>
    </div>*@
@*<script src="~/Scripts/Vehicle/unitConversion.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/VehicleComponent/jQuesry.Comp.General.js?V@(Session["ProjectVersion"])"></script>*@



@{
<input type="hidden" value="@ViewBag.VehicleConfigId" id="hf_VehicleConfigId" name="hf_VehicleConfigId" />
}
@*<script src="~/Scripts/CspJs/Vehicle/ComponentGeneralPage.js?V@(Session["ProjectVersion"])"></script>*@
