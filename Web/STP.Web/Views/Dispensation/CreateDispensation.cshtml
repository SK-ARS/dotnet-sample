@model STP.Domain.MovementsAndNotifications.Movements.DispensationGridList
@using STP.Domain.SecurityAndUsers
@using STP.Web.Custom.Views
@using System.Globalization
@{
    int Granter_ID = 0;
    var errorPage = false;
    var fromAffectedParties = false;
    var granterName = "";
    if (ViewBag.Granter_id != null)
    {
        Granter_ID = ViewBag.Granter_id;
        Session["Granter_ID"] = Granter_ID;
    }
    if (ViewBag.Grantor_name != null)
    {
        granterName = ViewBag.Grantor_name;
        Session["GranterName"] = granterName;
    }
    int isAdmin = 0;
    int userTypeID = 0;
    if (Session["UserInfo"] != null)
    {
        var sessionValues = (UserInfo)Session["UserInfo"];
        userTypeID = sessionValues.UserTypeId;
        if (sessionValues.IsAdmin == 1)
        {
            isAdmin = 1;
        }
    }
    if (ViewBag.fromAffectedParties != null)
    {
        fromAffectedParties = ViewBag.fromAffectedParties;
        if (fromAffectedParties)
        {
            Layout = null;
        }
    }
    if (ViewBag.ErrorPage != null)
    {
        errorPage = ViewBag.ErrorPage;

    }
    if (Model.DispensationId > 0)
    {
        Model.GrossWeight = Model.GrossWeight == 0 ? null : Model.GrossWeight;
        Model.SignedAxleWeight = Model.SignedAxleWeight == 0 ? null : Model.SignedAxleWeight;
        Model.OverallLength = Model.OverallLength == 0 ? null : Model.OverallLength;
        Model.Width = Model.Width == 0 ? null : Model.Width;
        Model.Height = Model.Height == 0 ? null : Model.Height;
    }
}

@Html.Hidden("ErrorPage", errorPage)
<div id="createDispensationContainer">
    <style>
        .field-validation-error {
            color: red;
        }

        .header .title {
            text-align: center;
        }
        .field-validation-error
        {
            white-space:nowrap;
        }

        .btn outline-btn-primary:hover, .SOAButtonHelper:hover {
            background-color: #275795 !important;
            color: white !important;
        }
    </style>
    <fieldset id="infoForm">
        <!-- main-content -->
        <section id="banner">
            <div class="container-fluid" id="banner-container">
                <div style="background-color: white;padding-left: 4%; padding-right: 1%;" id="divCreateDispensation">
                    <div class="header pt-2">
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12">
                                @if (ViewBag.mode == "Edit")
                                {
                                    <div class="title">
                                        EDIT DISPENSATION
                                    </div>
                                }
                                else
                                {
                                    <div class="title">
                                        CREATE DISPENSATION
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    @using (Html.BeginForm("CreateDispensation", "Dispensation", FormMethod.Post, new { Id = "DispensationInfo", mode = ViewBag.mode, User_id = ViewBag.userID, fromAffectedParties = ViewBag.fromAffectedParties, hideLayout = ViewBag.hidelayout }))
                    {

                        @*@Html.AntiForgeryToken()*@
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(m => m.SelectOrganisationId)
                        @Html.Hidden("Granter_ID", Granter_ID)
                        <div class="row pt-5" id="helpdeskDelegation">
                            <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12" id="movement-details">
                                <div class="row mb-4">
                                    <div class="col-sm-12 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal">Dispensation Reference No.(DRN)*</label>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-5 input-field">
                                        @if (ViewBag.mode == "Edit")
                                        {
                                            @Html.HiddenFor(m => m.DispensationReferenceNo)
                                            <span class="edit-normal">@Model.DispensationReferenceNo</span>
                                        }
                                        else
                                        {
                                            @Html.TextBoxFor(m => m.DispensationReferenceNo, new { @maxlength = "30", @class = "edit-normal" }) <br />
                                            <span class="field-validation-error" id="err_drn"></span>
                                            if (ViewBag.exists != null && ViewBag.exists)
                                            {
                                                <span id="exists_chk" class="field-validation-error">@Resources.Resource.DRNExists</span>
                                            }
                                            @Html.ValidationMessageFor(m => m.DispensationReferenceNo)
                                        }
                                    </div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-sm-12 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal">Brief Description*</label>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-5 input-field">
                                        @Html.TextBoxFor(m => m.Summary, new { @maxlength = "80", @class = "edit-normal" }) <br />
                                        <span class="field-validation-error" id="err_summary"></span>
                                        @Html.ValidationMessageFor(m => m.Summary)
                                    </div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-sm-12 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal">Description*</label>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-5 input-field text-normal">
                                        @Html.TextAreaFor(m => m.Description, new { @maxlength = "200", @class = "form-control", @rows = "4", @style = "width: 100%;" })
                                        <span class="field-validation-error" id="err_descp"></span>
                                        @Html.ValidationMessageFor(m => m.Description)
                                    </div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-sm-12 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal">Valid From</label>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-3 input-field text-normal">
                                        @*@if (Model.FromDate != null && DateTime.ParseExact(Model.FromDate, "dd-MM-yyyy", CultureInfo.InvariantCulture).ToShortDateString() != "01-01-0001")*@
                                        @if (Model.FromDate != "" && Model.FromDate != null)
                                        {
                                            <input type="text" value="@Model.FromDate" readonly="readonly" id="FromDate" class="text-normal datepicker edit-normal wd100" name="FromDate" />
                                        }
                                        else
                                        {
                                            <input type="text" value="@DateTime.Now.ToString("dd-MM-yyyy")" readonly="readonly" id="FromDate" class="text-normal datepicker edit-normal wd100" name="FromDate" />
                                        }
                                        <span id="spnFromDate" class="field-validation-error"></span>
                                    </div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-sm-12 col-md-6 col-lg-5 pr-0">
                                        <label class="text-normal">Valid To</label>
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-3 input-field text-normal">
                                        @*@if (Model.ToDate != null&& DateTime.ParseExact(Model.ToDate, "dd-MM-yyyy", CultureInfo.InvariantCulture).ToShortDateString() != "01-01-0001")*@
                                        @if (Model.ToDate != "" && Model.ToDate != null)
                                        {
                                            <input type="text" value="@Model.ToDate" readonly="readonly" id="ToDate" class="text-normal datepicker edit-normal wd100" name="ToDate" />
                                        }
                                        else
                                        {
                                            <input type="text" value="@DateTime.Now.ToString("dd-MM-yyyy")" readonly="readonly" id="ToDate" class="text-normal datepicker edit-normal wd100" name="ToDate" />
                                        }
                                        <span id="spnToDate" class="field-validation-error"></span>
                                        @*@Html.ValidationMessageFor(model => model.FromDate)*@
                                    </div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-sm-12 col-md-6 col-lg-5 pr-0">
                                        @if (userTypeID == 696002 || userTypeID == 696007)
                                        {
                                            <label class="text-normal">Issued To*</label>
                                        }
                                        else if (userTypeID == 696001)
                                        {
                                            <label class="text-normal">Issued By*</label>
                                        }
                                    </div>
                                    <div class="col-sm-12 col-md-6 col-lg-5 input-field text-normal">
                                        @Html.TextBoxFor(m => m.GrantedBy, new { @class = "edit-normal" })
                                        <span class="field-validation-error" id="err_GrantedBy"></span>
                                        @Html.ValidationMessageFor(m => m.GrantedBy)
                                        @if (ViewBag.fromAffectedParties != null && !ViewBag.fromAffectedParties && ViewBag.OrgUserExists != null && ViewBag.OrgUserExists)
                                        {
                                            <span id="err_OrgUser_exists" class="field-validation-error">Invalid Organisation</span>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-12 col-sm-12 col-xs-12">

                                <div class="row mb-4">
                                    <div class="col-sm-12 col-md-3 col-lg-3 pr-0">
                                        <label class="text-normal">Gross Weight</label>
                                    </div>
                                    <div class="col-sm-12 col-md-5 col-lg-3 input-field text-normal">                                        
                                        @Html.TextBoxFor(m => m.GrossWeight, new { @maxlength = "11", @class = "edit-normal" })
                                        @Html.ValidationMessageFor(m => m.GrossWeight)
                                    </div>
                                    <div class="col-sm-12 col-md-3 col-lg-3 input-field text-normal">
                                        t
                                    </div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-sm-12 col-md-3 col-lg-3 pr-0">
                                        <label class="text-normal">Signed Axle Weight</label>
                                    </div>
                                    <div class="col-sm-12 col-md-5 col-lg-3 input-field text-normal">
                                        @Html.TextBoxFor(m => m.SignedAxleWeight, new { @maxlength = "11", @class = "edit-normal" })
                                        @Html.ValidationMessageFor(m => m.SignedAxleWeight)
                                    </div>
                                    <div class="col-sm-12 col-md-3 col-lg-3 input-field text-normal">
                                        t
                                    </div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-sm-12 col-md-3 col-lg-3 pr-0">
                                        <label class="text-normal">Overall Length</label>
                                    </div>
                                    <div class="col-sm-12 col-md-5 col-lg-3 input-field text-normal">
                                        @Html.TextBoxFor(m => m.OverallLength, new { @maxlength = "11", @class = "edit-normal" })
                                        @Html.ValidationMessageFor(m => m.OverallLength)
                                        <span id="err_length" class="field-validation-error"></span>
                                    </div>
                                    <div class="col-sm-12 col-md-3 col-lg-3 input-field text-normal">
                                        m
                                    </div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-sm-12 col-md-3 col-lg-3 pr-0">
                                        <label class="text-normal">Width</label>
                                    </div>
                                    <div class="col-sm-12 col-md-5 col-lg-3 input-field text-normal">
                                        @Html.TextBoxFor(m => m.Width, new { @maxlength = "11", @class = "edit-normal" })
                                        @Html.ValidationMessageFor(m => m.Width)
                                    </div>
                                    <div class="col-sm-12 col-md-3 col-lg-3 input-field text-normal">
                                        m
                                    </div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-sm-12 col-md-3 col-lg-3 pr-0">
                                        <label class="text-normal">Height</label>
                                    </div>
                                    <div class="col-sm-12 col-md-5 col-lg-3 input-field text-normal">
                                        @Html.TextBoxFor(m => m.Height, new { @maxlength = "11", @class = "edit-normal" })
                                        @Html.ValidationMessageFor(m => m.Height)
                                    </div>
                                    <div class="col-sm-12 col-md-3 col-lg-3 input-field text-normal">
                                        m
                                    </div>
                                </div>
                                <div class="row mb-4">
                                    <div class="col-sm-12 col-md-12 col-lg-12 pr-0">
                                        <span id="errorChk" value="" class="field-validation-error"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="flexer justify-content-center mt-4">
                            <button type="button" class="btn btn-primary btn-normal btn-layout1 ml2" id="btn_saveDispensation">SAVE</button>
                            <button id="btn_cancel" type="button" class="btn btn-primary btn-normal btn-layout1 ml2">BACK</button>
                        </div>
                        <!-- table -->
                        @Html.HiddenFor(model => model.DispensationId)
                        <!-- end of table -->
                    }
                </div>
            </div>
        </section>
    </fieldset>
    <!-- end of main-content -->
    @{
        <input type="hidden" value="@ViewBag.mode" id="hf_mode" name="hf_mode" />
        <input type="hidden" value="@ViewBag.hidelayout" id="hf_hidelayout" name="hf_hidelayout" />
        @Html.Hidden("hf_userTypeID", userTypeID)
        @Html.Hidden("hf_fromAffectedParties", fromAffectedParties)
        @Html.Hidden("hf_Granter_ID", Session["Granter_ID"])
        @Html.Hidden("hf_GranterName", Session["GranterName"])
    }
</div>
<script src="~/Scripts/Movements/jQuery.Dispensations.js?V@(Session["ProjectVersion"])"></script>
<script src="~/Scripts/Dispensation/CreateDispensation.js?V@(Session["ProjectVersion"])"></script>

