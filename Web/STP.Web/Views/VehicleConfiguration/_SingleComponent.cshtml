@model List<STP.Domain.VehiclesAndFleets.Configuration.VehicleConfigList>
@{

    var guid = ViewBag.Guid;

    var IsEdit = ViewBag.IsEdit;
    int ComponentCount = Model.Count();
    int movementTypeId = ViewBag.movementTypeId;
    int componentCount = ViewBag.componentCount;
}
<div class="configComponent" id="divAllComponent">
    @if (Model.Count() > 0)
    {

        foreach (var compId in Model.OrderBy(s => s.LatPosn).ThenBy(s => s.LongPosn))
        {
            <div class="component-item1 component-item-axle-section" id="divComponentDataMain-@compId.ComponentId">
                <form action="@Url.Action("CreateComponent", "Vehicle",new {vehicleConfigId=ViewBag.vehicleConfigId })">

                    @Html.Hidden("Component_Id", compId.ComponentId);
                    <div id="@compId.ComponentId" class="comp">
                        @Html.Hidden("ComponentType_Id", compId.ComponentTypeId)
                        @Html.Hidden("ComponentSubType_Id", compId.ComponentSubTypeId)
                        <div class="row divComponentData" id="divComponentData-@compId.ComponentId">
                            <div class="row">
                                <div class="col-lg-5 col-sm-12 col-md-5" style="display: @(componentCount==1?"none":"block");">
                                    <div id="componentConfig">
                                        @{
                                            Html.RenderAction("ComponentGeneralPage", "VehicleConfig", new { vehicleSubTypeId = compId.ComponentSubTypeId, vehicleTypeId = compId.ComponentTypeId, movementId = movementTypeId, componentId = compId.ComponentId, GUID = guid, isComponent = false, isFromConfig = 1, vehicleConfigId = ViewBag.vehicleConfigId, movement = (bool)ViewBag.IsMovement, isCandidate = (bool)ViewBag.isCandidate, isLastComponent = true, isEditMovement = ViewBag.isEditMovement });
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-5 col-sm-12 col-md-5" style="display: @(componentCount==1?"none":"block");">
                                <div id="regDetailsConfig">
                                    @{
                                        Html.RenderAction("RegistrationComponent", "VehicleConfig", new { compId = compId.ComponentId, isTractor = true, isApplication = false, isVR1 = false, isFromConfig = 1, vehicleConfigId = ViewBag.vehicleConfigId, movement = (bool)ViewBag.IsMovement, isCandidate = (bool)ViewBag.isCandidate, isEditMovement = ViewBag.isEditMovement });
                                    }
                                </div>
                            </div>
                            <div class="col-lg-12 col-sm-12 col-md-12">
                                <div id="axlePage" class="component_axle">
                                    @{
                                        Html.RenderAction("AxleComponent", "VehicleConfig", new { axleCount = 0, componentId = compId.ComponentId, vehicleSubTypeId = compId.ComponentSubTypeId, vehicleTypeId = compId.ComponentTypeId, movementId = movementTypeId, IsEdit = true, isApplication = false, appRevID = 0, vehConfigID = 0, isVR1 = false, isFromConfig = 1, vehicleConfigId = ViewBag.vehicleConfigId, movement = (bool)ViewBag.IsMovement, isCandidate = (bool)ViewBag.isCandidate, isEditMovement = ViewBag.isEditMovement, isLastComponent = true, GUID = guid });
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        }
    }
</div>
