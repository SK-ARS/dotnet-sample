
@model STP.Domain.VehicleAndFleets.Component.VehicleComponent
@using STP.Domain.VehiclesAndFleets.Component
@{
    List<Axle> listAxle = null;
    if (ViewBag.AxleList != null)
    {
        listAxle = new List<Axle>();
        listAxle = (List<Axle>)ViewBag.AxleList;
        if (listAxle.Count == 0)
        {
            listAxle = null;
        }
    }
    bool tyreEmpty = ViewBag.tyreEmpty;
    @Html.Hidden("tyreEmpty", tyreEmpty)
    int? unitValue = 1;
    if (Session["UserInfo"] != null)
    {
        var sessionValues = (STP.Domain.SecurityAndUsers.UserInfo)Session["UserInfo"];
        unitValue = sessionValues.VehicleUnits;
    }
}
<style>
    #axlePage tr {
        border: none !important;
    }
    #vehicle-table th {
        padding: 20px 5px 5px 7px !important;
    }
    #axlePage td {
        text-align: left !important;
    }
</style>
<div class="main-table tblAxle" id="vehicle-table" style="margin-bottom: 4%;">
    @if (listAxle != null)
    {
        <table id="vehicle-component">
            <thead>
                <tr>
                    <th rowspan="2" style="width: 5%;">Axle</th>
                    <th rowspan="2">No. of wheels</th>
                    <th rowspan="2">Axle weight (kg)</th>
                    @if (unitValue == 692002)
                    {
                        <th rowspan="2">Distance to next axle (ft)</th>
                    }
                    else
                    {
                        <th rowspan="2">Distance to next axle (m)</th>
                    }
                    @if (Model != null && Model.IsConfigTyreCentreSpacing && !tyreEmpty)
                    {
                        <th class="headgrad_tyreSize" rowspan="2">Tyre sizes</th>
                        <th class="headgrad2" colspan="3" style="width: 30%; text-align: center;">Tyre centre spacing</th>
                    }
                </tr>
                <tr class="sub sub1 tyreSpaceCnt" style="text-align: center;">
                </tr>
            </thead>
            <tbody>
                @if (listAxle != null)
                {
                    int AxleNoId = 0;
                    foreach (var item in listAxle)
                    {
                        AxleNoId++;
                        int count = 0;
                        int nullCheck = listAxle.Where(a => a.TyreCenters != "").Count();
                        int MaxCount = nullCheck != 0 ? listAxle.Max(a => a.TyreCenters.Split(',').Length) : 0;
                        <tr>
                            <td>
                                @AxleNoId
                                
                            </td>
                            <td>
                                @item.NoOfWheels
                                
                            </td>
                            <td>
                                @item.AxleWeight
                                
                            </td>
                            <td>
                                @if (AxleNoId != listAxle.Count)
                                {
                                    <label class="text-normal disttonext">@item.DistanceToNextAxle</label>
                                    
                                }
                            </td>
                            @if (Model != null && Model.IsConfigTyreCentreSpacing && !tyreEmpty)
                            {
                                //if (!string.IsNullOrEmpty(item.TyreSize))
                                //{
                                    <td class="tyre_size">
                                        @item.TyreSize
                                       
                                    </td>
                                //}
                                string[] wheelSpace = new string[] { };
                                if (!string.IsNullOrEmpty(item.TyreCenters))
                                {
                                    wheelSpace = item.TyreCenters.Split(',');
                                    count = item.TyreCenters.Split(',').Count();
                                }
                                foreach (var whlSpace in wheelSpace)
                                {
                                    <td class="wheel_space">
                                        <label class="text-normal cstable">@whlSpace</label>
                                        
                                    </td>
                                }
                                if (MaxCount != count)
                                {
                                    for (int i = 0; i < MaxCount - count; i++)
                                    {
                                        <td class="wheel_space">
                                            
                                        </td>
                                    }
                                }
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    }

    <input type="hidden" id="hf_AxleAssignmentCount" value="@(listAxle != null?listAxle.Count:0)" />
</div>